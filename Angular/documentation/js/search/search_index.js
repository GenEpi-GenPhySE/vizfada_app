var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.174,1,0.805]],["body/components/AboutComponent.html",[0,0.253,1,1.271,2,1.228,3,0.152,4,0.241,5,0.907,6,0.954,7,0.907,8,0.907,9,0.114,10,2.736,11,1.002,12,1.581,13,0.951,14,1.997,15,1.899,16,1.358,17,5.29,18,1.358,19,4.543,20,0.256,21,0.81,22,1.723,23,1.051,24,0.683,25,3.191,26,3.191,27,0.538,28,0.019,29,1.055,30,0.399,31,0.425,32,0.152,33,0.133,34,7.134,35,3.191,36,3.895,37,5.29,38,4.543,39,5.764,40,4.543,41,4.543,42,4.543,43,4.543,44,4.543,45,3.099,46,3.191,47,2.212,48,3.997,49,5.29,50,3.191,51,5.29,52,5.764,53,4.543,54,4.543,55,5.764,56,4.536,57,3.191,58,5.29,59,4.543,60,4.543,61,4.543,62,5.586,63,4.543,64,3.191,65,4.543,66,4.536,67,4.543,68,5.764,69,4.543,70,4.543,71,3.191,72,4.543,73,4.543,74,4.543,75,6.331,76,4.543,77,4.543,78,4.543,79,4.543,80,4.543,81,3.191,82,3.191,83,3.191,84,3.191,85,4.536,86,4.543,87,0.902,88,4.543,89,2.436,90,3.191,91,4.543,92,4.543,93,3.469,94,4.543,95,3.191,96,3.191,97,3.15,98,3.191,99,3.191,100,4.543,101,4.543,102,6.515,103,3.191,104,4.543,105,4.543,106,4.543,107,3.191,108,4.543,109,3.15,110,4.543,111,4.543,112,3.191,113,4.543,114,0.862,115,1.228,116,1.291,117,0.741,118,1.638,119,0.907,120,3.191,121,3.191,122,3.191,123,3.191,124,3.191,125,3.191,126,3.191,127,3.191,128,3.191,129,3.191,130,3.191,131,3.191,132,3.191,133,3.191,134,3.191,135,3.191,136,3.191,137,3.191,138,3.191,139,3.191,140,3.191,141,3.191,142,3.191,143,0.319,144,0.907,145,0.741,146,0.907,147,0.741,148,0.907,149,0.741,150,0.907,151,0.741,152,0.907,153,0.741,154,0.907,155,0.741,156,0.907,157,0.741,158,0.862,159,0.907,160,0.741,161,0.907,162,0.741,163,0.907,164,0.741,165,0.907,166,0.741,167,0.907,168,0.82,169,0.907,170,0.741,171,0.907,172,0.704,173,0.907,174,0.741,175,0.907,176,0.741,177,0.907,178,0.741,179,0.907,180,0.741,181,0.907,182,0.862,183,0.779,184,0.862,185,0.907,186,0.012,187,0.012]],["title/components/AppComponent.html",[0,0.174,145,0.848]],["body/components/AppComponent.html",[0,0.298,1,0.971,2,1.527,3,0.21,4,0.184,5,1.251,6,1.316,7,1.251,8,1.251,9,0.158,13,1.183,14,2.057,15,1.953,16,1.689,18,1.689,20,0.353,24,0.662,28,0.019,30,0.55,31,0.587,32,0.21,33,0.184,97,3.918,114,1.19,115,1.527,116,1.606,117,1.022,118,1.871,119,1.251,143,0.376,144,1.251,145,1.528,146,1.251,147,1.022,148,1.251,149,1.022,150,1.251,151,1.022,152,1.251,153,1.022,154,1.251,155,1.022,156,1.251,157,1.022,158,1.19,159,1.251,160,1.022,161,1.251,162,1.022,163,1.251,164,1.022,165,1.251,166,1.022,167,1.251,168,1.131,169,1.251,170,1.022,171,1.251,172,0.971,173,1.251,174,1.022,175,1.251,176,1.022,177,1.251,178,1.022,179,1.251,180,1.022,181,1.251,182,1.19,183,1.075,184,1.19,185,1.251,186,0.015,187,0.015,188,3.775,189,3.338,190,6.239,191,5.65,192,0.661,193,2.548,194,0.353,195,0.587,196,1.131,197,1.022,198,4.402]],["title/modules/AppModule.html",[199,2.788,200,2.532]],["body/modules/AppModule.html",[0,0.274,1,1.37,3,0.131,4,0.114,9,0.098,15,0.703,23,0.543,28,0.02,30,0.945,31,0.364,32,0.131,33,0.114,145,1.582,147,1.393,149,1.393,151,1.393,153,1.443,155,1.443,157,1.443,160,1.393,162,1.393,164,1.393,166,1.393,170,1.393,172,1.37,174,1.393,176,1.393,178,1.393,180,1.393,186,0.011,187,0.011,200,5.272,201,1.616,202,2.816,203,2.346,204,2.346,205,2.346,206,2.346,207,3.825,208,3.825,209,3.825,210,3.825,211,3.825,212,3.483,213,2.346,214,1.744,215,2.735,216,3.483,217,3.101,218,3.088,219,4.062,220,4.845,221,4.062,222,2.589,223,1.616,224,4.062,225,2.735,226,3.101,227,4.062,228,2.089,229,4.062,230,4.062,231,1.411,232,4.062,233,2.346,234,2.089,235,2.735,236,4.062,237,2.735,238,2.735,239,2.346,240,2.4,241,4.062,242,2.735,243,4.062,244,3.483,245,2.735,246,4.062,247,2.089,248,4.062,249,1.753,250,1.616,251,1.616,252,4.062,253,3.167,254,1.411,255,2.346,256,4.062,257,1.897,258,1.897,259,1.744,260,1.744,261,4.062,262,2.089,263,4.062,264,2.089,265,2.089,266,2.735,267,2.735,268,2.735,269,2.735,270,2.735,271,2.735,272,2.735,273,2.346,274,2.735,275,4.062,276,1.897,277,2.735,278,2.346,279,2.735,280,2.735,281,2.735,282,1.897,283,2.735,284,2.089,285,1.744,286,2.089,287,2.735,288,2.735,289,2.735,290,2.089,291,2.735,292,2.735,293,1.897,294,2.735,295,2.735,296,2.735,297,2.735,298,2.735,299,2.735,300,2.735,301,2.735,302,2.735,303,2.735,304,3.972,305,2.735,306,2.735,307,2.089]],["title/modules/AppRoutingModule.html",[199,2.788,282,2.532]],["body/modules/AppRoutingModule.html",[0,0.303,1,1.4,3,0.254,4,0.222,9,0.19,28,0.02,30,0.879,31,0.708,32,0.254,33,0.222,172,1.4,186,0.016,187,0.016,201,3.14,217,4.058,226,4.848,239,5.444,240,3.14,273,4.557,278,4.557,282,4.403,304,4.403,308,5.315,309,5.315,310,5.184,311,3.14,312,5.315,313,4.557]],["title/interfaces/Article.html",[314,0.764,315,1.576]],["body/interfaces/Article.html",[3,0.185,4,0.161,9,0.241,20,0.31,28,0.02,32,0.338,33,0.161,87,1.031,143,0.353,186,0.013,187,0.013,192,0.607,193,2.665,194,0.524,195,1.001,314,1.461,315,2.9,316,1.579,317,1.767,318,1.767,319,2.9,320,3.131,321,3.035,322,3.035,323,2.296,324,2.239,325,2.039,326,2.817,327,2.516,328,2.516,329,2.817,330,2.371,331,2.817,332,2.516,333,1.669,334,0.944,335,1.684,336,1.875,337,2.516,338,1.875,339,1.875,340,3.011,341,1.875,342,1.539,343,2.007,344,1.767,345,1.579,346,1.767,347,1.579,348,2.007,349,1.767,350,1.216,351,1.767]],["title/pipes/BetterNamesPipe.html",[207,2.327,352,1.77]],["body/pipes/BetterNamesPipe.html",[3,0.242,4,0.212,9,0.182,11,1.119,13,1.062,21,0.905,24,0.763,27,0.856,28,0.02,30,0.634,31,0.676,32,0.242,33,0.212,109,3.517,143,0.402,186,0.016,187,0.016,194,0.407,195,0.946,196,1.304,197,1.545,207,3.935,342,1.611,352,2.993,353,3.233,354,5.293,355,4.349,356,4.713,357,3.517,358,4.713,359,5.072,360,1.062,361,1.119,362,4.28,363,4.6,364,5.072,365,5.072,366,5.072,367,5.072,368,5.072,369,5.072,370,5.072,371,5.072,372,5.072,373,5.072,374,5.072,375,5.072]],["title/components/CanvasComponent.html",[0,0.174,147,0.848]],["body/components/CanvasComponent.html",[0,0.247,1,0.675,2,1.192,3,0.146,4,0.128,5,0.87,6,0.915,7,0.87,8,0.87,9,0.11,11,0.973,12,1.546,13,0.924,14,1.989,15,1.885,16,1.319,18,1.319,20,0.246,21,0.787,22,1.691,23,0.608,24,1.024,27,1.012,28,0.02,29,1.581,30,0.646,31,0.408,32,0.146,33,0.128,87,1.241,114,0.828,115,1.192,116,1.254,117,0.711,118,1.608,119,0.87,143,0.377,144,0.87,145,0.711,146,0.87,147,1.313,148,0.87,149,0.711,150,0.87,151,0.711,152,0.87,153,0.711,154,0.87,155,0.711,156,0.87,157,0.711,158,0.828,159,0.87,160,0.711,161,0.87,162,0.711,163,0.87,164,0.711,165,0.87,166,0.711,167,0.87,168,0.787,169,0.87,170,0.711,171,0.87,172,0.675,173,0.87,174,0.711,175,0.87,176,0.711,177,0.87,178,0.711,179,0.87,180,0.711,181,0.87,182,0.828,183,0.748,184,0.828,185,0.87,186,0.011,187,0.011,192,0.516,194,0.501,195,0.689,196,0.787,197,0.711,334,1.263,350,1.387,360,1.083,361,1.14,376,2.626,377,5.648,378,5.17,379,4.411,380,5.17,381,5.17,382,3.948,383,5.657,384,4.411,385,5.657,386,3.782,387,3.062,388,3.222,389,4.411,390,3.062,391,4.411,392,3.062,393,1.809,394,3.062,395,3.062,396,4.411,397,3.062,398,4.433,399,3.296,400,1.809,401,4.411,402,3.782,403,2.231,404,3.062,405,4.411,406,3.062,407,3.782,408,2.111,409,4.768,410,3.062,411,2.338,412,1.687,413,1.322,414,3.062,415,3.062,416,2.338,417,1.485,418,1.58,419,1.952,420,1.067,421,4.411,422,3.062,423,4.411,424,1.067,425,4.411,426,4.411,427,2.626,428,3.062,429,3.062,430,3.368,431,3.062,432,3.062,433,3.062,434,3.062,435,2.276,436,3.062,437,3.062,438,3.062,439,3.062,440,3.062,441,3.062,442,3.782,443,3.062,444,3.062,445,3.062,446,3.062,447,3.062,448,3.062,449,3.062,450,3.062,451,5.17,452,3.062,453,4.411,454,3.062,455,3.062,456,3.062,457,3.062,458,3.062,459,3.062,460,3.062,461,2.812,462,4.411,463,3.062,464,3.062,465,3.062,466,3.062,467,3.062,468,3.062,469,2.338,470,2.626,471,2.626]],["title/components/CarouselComponent.html",[0,0.174,149,0.848]],["body/components/CarouselComponent.html",[0,0.263,1,0.757,2,1.293,3,0.164,4,0.2,5,0.976,6,1.026,7,0.976,8,0.976,9,0.123,11,1.055,12,1.646,13,1.001,14,2.012,15,1.908,16,1.43,18,1.43,20,0.276,21,0.853,22,1.78,23,0.682,24,1,27,0.929,28,0.02,29,1.382,30,0.744,31,0.457,32,0.164,33,0.143,45,2.064,87,1.288,114,0.928,115,1.293,116,1.36,117,0.797,118,1.692,119,0.976,143,0.391,144,0.976,145,0.797,146,0.976,147,0.797,148,0.976,149,1.382,150,0.976,151,0.797,152,0.976,153,0.797,154,0.976,155,0.797,156,0.976,157,0.797,158,0.928,159,0.976,160,0.797,161,0.976,162,0.797,163,0.976,164,0.797,165,0.976,166,0.797,167,0.976,168,0.882,169,0.976,170,0.797,171,0.976,172,0.757,173,0.976,174,0.797,175,0.976,176,0.797,177,0.976,178,0.797,179,0.976,180,0.797,181,0.976,182,0.928,183,0.839,184,0.928,185,0.976,186,0.012,187,0.012,192,0.56,194,0.503,195,0.94,218,2.188,249,1.482,276,2.38,334,0.839,342,0.757,360,1.153,361,1.214,382,2.621,413,2.064,417,1.665,420,1.196,424,1.666,461,2.188,472,2.944,473,4.783,474,5.505,475,4.783,476,4.203,477,3.699,478,4.783,479,4.783,480,2.826,481,4.203,482,3.433,483,5.105,484,4.24,485,4.783,486,4.101,487,3.433,488,4.783,489,3.433,490,3.433,491,4.783,492,3.433,493,2.944,494,3.433,495,2.028,496,3.433,497,2.944,498,3.433,499,3.433,500,3.433,501,3.433,502,2.621,503,3.433,504,4.783,505,2.188,506,3.433,507,4.783,508,5.505,509,4.783,510,2.38,511,3.433,512,3.433,513,3.433,514,2.944,515,1.665,516,2.38]],["title/classes/CastTextUrl.html",[33,0.152,333,1.576]],["body/classes/CastTextUrl.html",[3,0.169,4,0.147,9,0.248,20,0.284,21,0.87,23,0.702,24,0.907,27,0.823,28,0.02,32,0.331,33,0.147,87,1.299,143,0.382,186,0.013,187,0.013,192,0.571,193,1.992,194,0.508,195,0.979,314,1.43,315,2.949,317,2.891,318,1.615,319,2.73,320,3.159,321,1.713,322,1.713,323,1.79,324,2.106,325,1.947,326,2.949,327,2.366,328,2.366,329,2.949,330,2.23,331,2.949,332,2.366,333,2.106,334,1.366,335,1.729,336,2.366,337,2.366,338,1.713,339,2.366,340,2.949,341,1.713,342,1.507,343,1.888,344,1.615,345,1.443,346,1.615,347,1.443,348,1.888,349,1.615,350,1.111,351,1.615,360,1.022,361,1.076,517,2.698,518,4.879,519,4.879,520,3.533,521,3.533]],["title/components/ControllerComponent.html",[0,0.174,151,0.848]],["body/components/ControllerComponent.html",[0,0.186,1,0.425,2,0.838,3,0.092,4,0.08,5,0.548,6,0.576,7,0.548,8,0.548,9,0.069,11,0.683,12,1.161,13,0.649,14,1.869,15,1.766,16,0.926,18,0.926,20,0.357,21,0.553,22,1.33,23,0.383,24,1.051,27,1.039,28,0.02,29,1.534,30,0.711,31,0.257,32,0.092,33,0.08,36,2.657,45,0.832,47,4.07,87,1.387,114,1.202,115,0.838,116,0.881,117,0.448,118,1.265,119,0.548,143,0.371,144,0.548,145,0.448,146,0.548,147,0.448,148,0.548,149,0.448,150,0.548,151,1.033,152,0.548,153,0.448,154,0.548,155,0.448,156,0.548,157,0.448,158,1.202,159,0.548,160,0.719,161,0.548,162,0.448,163,0.548,164,0.448,165,0.548,166,0.448,167,0.548,168,0.496,169,0.548,170,1.033,171,0.548,172,0.425,173,0.548,174,0.448,175,0.548,176,0.448,177,0.548,178,0.448,179,0.548,180,0.448,181,0.548,182,0.521,183,0.471,184,0.521,185,0.548,186,0.008,187,0.008,192,0.363,194,0.494,195,0.782,196,1.338,197,1.208,231,0.995,249,2.246,253,1.139,254,3.108,257,3.085,311,2.628,323,1.425,334,0.949,342,0.683,345,1.99,350,1.637,356,2.366,360,1.145,361,1.206,388,2.822,393,2.879,400,1.139,403,2.455,408,0.787,412,1.062,413,0.832,418,0.995,419,1.229,420,0.672,424,1.079,430,1.472,469,1.472,470,1.653,471,1.653,502,1.472,505,2.836,510,1.337,515,0.935,516,1.337,522,1.653,523,2.149,524,3.885,525,3.099,526,3.885,527,2.682,528,3.075,529,2.966,530,3.885,531,3.885,532,3.885,533,4.449,534,3.099,535,3.099,536,3.099,537,3.099,538,3.099,539,3.099,540,4.449,541,3.815,542,3.099,543,3.885,544,3.885,545,1.653,546,3.815,547,2.116,548,3.815,549,3.099,550,2.657,551,1.928,552,1.928,553,3.099,554,1.928,555,3.099,556,1.928,557,3.099,558,1.928,559,3.099,560,1.928,561,3.099,562,1.928,563,3.099,564,1.928,565,1.928,566,1.928,567,1.928,568,1.928,569,1.928,570,1.928,571,1.928,572,1.928,573,3.099,574,1.928,575,2.366,576,1.928,577,1.928,578,1.928,579,1.928,580,1.928,581,1.928,582,1.928,583,1.653,584,1.653,585,1.653,586,1.928,587,1.928,588,0.995,589,1.337,590,2.657,591,3.815,592,4.69,593,3.085,594,3.885,595,3.099,596,1.928,597,2.657,598,3.885,599,1.928,600,1.653,601,1.653,602,1.653,603,1.928,604,3.099,605,3.397,606,3.885,607,1.928,608,3.099,609,2.685,610,1.707,611,3.099,612,4.449,613,3.331,614,1.928,615,1.928,616,2.657,617,1.928,618,1.653,619,1.653,620,1.337,621,1.653,622,1.928,623,1.928,624,2.366,625,1.928,626,1.928,627,1.928,628,1.928,629,1.928,630,4.179,631,1.928,632,4.449,633,3.885,634,1.928,635,3.099,636,1.928,637,1.928,638,1.928,639,1.928,640,3.885,641,1.928,642,3.885,643,3.099,644,3.099,645,1.928,646,1.928,647,1.928,648,1.653,649,1.928,650,1.928,651,1.928,652,2.694,653,1.928,654,1.928,655,1.928,656,1.928,657,1.653,658,1.928,659,1.653,660,4.877,661,2.366,662,3.099,663,2.657,664,4.873,665,3.099,666,3.099,667,1.928,668,2.657,669,3.099,670,3.099,671,3.099,672,3.397,673,1.472,674,3.609,675,1.472,676,1.653,677,2.657,678,2.694,679,2.966,680,3.099,681,2.685,682,1.653,683,1.928,684,3.099,685,1.472,686,2.657,687,1.472,688,3.331,689,1.928,690,1.928,691,1.653,692,1.831,693,1.928,694,1.337,695,1.928,696,3.397,697,3.885,698,3.099,699,1.928,700,5.205,701,3.885,702,2.657,703,1.928,704,1.928,705,1.472,706,1.928,707,1.928,708,1.928,709,1.928,710,1.653,711,1.928,712,1.928]],["title/classes/CustomReuseStrategy.html",[33,0.152,285,2.327]],["body/classes/CustomReuseStrategy.html",[0,0.183,3,0.09,4,0.079,9,0.067,11,0.671,20,0.151,21,0.542,24,0.815,27,1.097,28,0.02,29,0.706,30,0.235,32,0.09,33,0.16,89,2.321,93,2.919,143,0.327,186,0.01,187,0.008,192,0.682,194,0.48,195,0.251,196,0.781,197,0.706,214,1.938,240,1.113,284,2.919,285,1.938,286,2.321,304,4.146,310,2.919,314,0.637,334,0.934,335,1.568,340,1.894,342,1.5,350,2.177,360,1.181,361,1.136,363,2.437,403,2.638,408,1.241,424,2.028,517,1.438,523,3.043,713,4.305,714,1.438,715,3.278,716,3.04,717,3.04,718,3.04,719,3.04,720,3.04,721,5.637,722,1.615,723,1.883,724,2.607,725,2.607,726,4.415,727,2.607,728,4.835,729,2.607,730,5.652,731,5.258,732,5.429,733,2.607,734,5.242,735,1.883,736,2.607,737,2.607,738,3.763,739,5.743,740,4.646,741,1.883,742,4.129,743,2.607,744,2.607,745,2.607,746,2.607,747,4.415,748,2.607,749,2.607,750,4.129,751,4.129,752,2.607,753,3.763,754,2.607,755,3.278,756,5.127,757,4.129,758,2.607,759,3.763,760,2.607,761,2.607,762,2.607,763,5.127,764,2.607,765,2.607,766,4.415,767,5.127,768,2.607,769,2.607,770,2.607,771,5.869,772,1.883,773,2.607,774,2.607,775,5.342,776,5.127,777,2.607,778,3.763,779,2.607,780,1.883,781,4.415,782,3.278,783,3.278,784,2.607,785,1.883,786,3.278,787,2.607,788,2.607,789,2.607,790,2.321,791,2.607,792,2.607,793,2.607,794,4.129,795,2.607,796,2.607,797,2.321,798,2.607,799,3.763,800,4.646,801,2.607,802,3.763,803,1.883,804,4.129,805,2.607,806,3.278,807,2.607,808,2.607,809,2.607,810,2.607,811,2.607,812,2.607,813,2.607,814,4.993,815,1.883,816,2.607,817,3.339,818,2.607,819,4.415,820,2.607,821,3.278,822,2.607,823,3.278,824,3.278,825,3.278,826,2.607,827,1.615,828,1.615,829,3.278,830,2.607,831,2.651,832,1.615,833,5.127,834,3.278,835,1.615,836,3.278,837,1.615,838,1.615,839,1.615,840,1.615,841,3.763,842,1.615,843,2.607,844,2.607,845,1.615,846,1.615,847,3.278,848,1.615,849,1.615,850,1.615,851,1.615,852,1.615,853,1.615,854,2.607,855,1.615,856,1.615,857,2.607,858,3.278,859,1.615,860,3.278,861,1.615,862,2.607,863,1.615,864,2.321,865,2.607,866,1.615,867,1.615,868,3.278,869,3.278,870,1.615,871,1.615,872,2.607,873,1.615,874,1.615,875,1.615,876,1.615,877,1.615,878,1.615,879,2.607,880,1.615,881,1.615,882,2.108,883,3.763,884,1.615,885,2.321,886,1.615,887,1.615,888,1.615,889,1.615,890,1.615,891,1.615,892,1.615]],["title/interfaces/DataJSON.html",[314,0.764,343,1.412]],["body/interfaces/DataJSON.html",[3,0.178,4,0.155,9,0.238,20,0.299,28,0.02,32,0.335,33,0.155,87,1.005,143,0.401,186,0.013,187,0.013,192,0.592,193,2.066,194,0.579,195,1.011,314,1.449,315,2.782,316,1.521,317,1.703,318,1.703,319,2.782,320,3.089,321,1.807,322,1.807,323,2.262,324,2.184,325,2.315,326,2.782,327,2.454,328,2.454,329,2.782,330,2.312,331,2.782,332,2.454,333,1.608,334,0.91,335,1.675,336,1.807,337,2.454,338,1.807,339,1.807,340,2.986,341,1.807,342,1.526,343,2.223,344,2.817,345,2.517,346,2.817,347,2.517,348,1.957,349,1.703,350,1.171,351,1.703]],["title/injectables/DataService.html",[547,1.412,893,1.576]],["body/injectables/DataService.html",[3,0.088,4,0.077,9,0.066,13,0.999,20,0.148,21,0.534,23,0.367,24,1.012,27,1.105,28,0.02,29,0.696,30,0.638,31,0.246,32,0.088,33,0.077,45,3.105,47,3.308,48,2.077,87,0.75,109,2.619,114,0.81,143,0.391,158,0.81,186,0.008,187,0.008,189,1.093,192,0.351,194,0.576,195,0.963,196,1.382,197,0.696,228,1.412,253,1.093,258,3.729,259,1.179,260,1.179,307,4.106,311,2.231,324,0.798,325,2.62,334,1.061,335,1.698,342,1.514,345,0.755,360,1.356,361,1.428,363,3.876,408,2.085,409,2.288,416,1.412,417,0.897,418,1.546,420,0.644,424,2.377,495,4.271,527,1.726,547,1.159,589,1.282,597,1.586,652,3.011,661,2.883,882,2.077,885,4.944,893,1.293,894,1.093,895,1.586,896,3.776,897,3.776,898,2.996,899,2.996,900,2.996,901,2.996,902,2.996,903,2.996,904,2.996,905,2.996,906,3.723,907,2.996,908,2.996,909,2.569,910,2.996,911,2.996,912,4.342,913,2.996,914,1.586,915,3.723,916,2.996,917,2.569,918,2.996,919,1.849,920,1.849,921,4.771,922,2.996,923,1.849,924,2.996,925,1.849,926,2.996,927,1.849,928,3.776,929,1.849,930,2.996,931,1.849,932,2.996,933,1.849,934,2.996,935,1.849,936,1.849,937,2.996,938,1.849,939,2.996,940,1.849,941,2.996,942,1.849,943,2.996,944,1.849,945,2.996,946,1.849,947,1.849,948,2.996,949,1.849,950,2.569,951,1.849,952,2.883,953,1.586,954,1.586,955,1.282,956,1.586,957,1.179,958,2.996,959,2.077,960,6.08,961,1.849,962,1.849,963,1.849,964,1.282,965,1.849,966,3.723,967,4.342,968,4.342,969,5.404,970,5.097,971,5.723,972,5.615,973,5.097,974,5.213,975,1.849,976,1.849,977,1.849,978,1.586,979,4.342,980,2.996,981,1.849,982,1.849,983,1.849,984,3.723,985,1.849,986,5.6,987,1.849,988,3.776,989,3.776,990,1.849,991,3.238,992,1.849,993,1.849,994,1.849,995,1.849,996,4.342,997,1.849,998,1.849,999,1.849,1000,2.996,1001,3.776,1002,4.342,1003,2.996,1004,1.849,1005,1.849]],["title/components/EpistackComponent.html",[0,0.174,153,0.848]],["body/components/EpistackComponent.html",[0,0.291,1,0.922,2,1.477,3,0.2,4,0.174,5,1.188,6,1.25,7,1.188,8,1.188,9,0.15,11,1.205,12,1.82,13,1.144,14,2.048,15,1.944,16,1.633,18,1.633,20,0.336,21,0.975,22,1.93,23,1.209,24,0.822,27,0.705,28,0.02,29,1.269,30,0.837,31,0.557,32,0.2,33,0.174,114,1.13,115,1.477,116,1.553,117,0.971,118,1.835,119,1.188,143,0.367,144,1.188,145,0.971,146,1.188,147,0.971,148,1.188,149,1.269,150,1.188,151,0.971,152,1.188,153,1.499,154,1.188,155,0.971,156,1.188,157,0.971,158,1.13,159,1.188,160,0.971,161,1.188,162,0.971,163,1.188,164,0.971,165,1.188,166,0.971,167,1.188,168,1.075,169,1.188,170,0.971,171,1.188,172,0.922,173,1.188,174,1.269,175,1.188,176,0.971,177,1.188,178,0.971,179,1.188,180,0.971,181,1.188,182,1.13,183,1.021,184,1.13,185,1.188,186,0.014,187,0.014,218,2.665,249,1.805,276,2.899,307,4.172,412,2.303,417,2.028,483,3.585,495,2.47,1006,3.585,1007,6.087,1008,5.464,1009,4.181,1010,4.181,1011,4.181,1012,4.181]],["title/injectables/EpistackService.html",[484,2.327,893,1.576]],["body/injectables/EpistackService.html",[3,0.218,4,0.19,9,0.163,20,0.365,21,1.029,23,1.259,24,1.034,27,0.768,28,0.02,29,1.34,30,0.792,31,0.607,32,0.218,33,0.19,87,1.448,143,0.275,186,0.015,187,0.015,189,2.69,192,0.676,194,0.463,195,0.916,196,1.483,197,1.34,231,2.349,360,0.953,361,1.004,408,2.721,417,2.208,476,4.407,481,4.839,484,3.679,495,2.69,502,3.476,505,2.902,510,3.157,528,4.152,893,2.491,894,2.69,952,5.251,957,2.902,1013,3.904,1014,6.338,1015,6.338,1016,5.772,1017,5.772,1018,4.553,1019,6.338,1020,4.553,1021,4.553,1022,4.553,1023,4.553,1024,4.553,1025,4.553,1026,4.553,1027,4.553,1028,4.949,1029,5.772,1030,4.553,1031,4.553]],["title/components/ExperimentComponent.html",[0,0.174,155,0.848]],["body/components/ExperimentComponent.html",[0,0.231,1,0.602,2,1.096,3,0.13,4,0.114,5,0.776,6,0.816,7,0.776,8,1.627,9,0.228,11,0.894,12,1.446,13,0.849,14,1.962,15,1.859,16,1.212,18,1.212,20,0.219,21,0.723,22,1.601,23,0.542,24,1.035,27,0.966,28,0.02,29,1.243,30,0.715,31,0.364,32,0.13,33,0.114,45,1.178,87,1.391,114,0.738,115,1.096,116,1.153,117,0.634,118,1.522,119,0.776,143,0.415,144,0.776,145,0.634,146,0.776,147,0.634,148,0.776,149,0.634,150,0.776,151,0.634,152,0.776,153,0.634,154,0.776,155,1.243,156,0.776,157,0.634,158,0.738,159,0.776,160,0.634,161,0.776,162,0.634,163,0.776,164,0.634,165,0.776,166,0.634,167,0.776,168,0.702,169,0.776,170,0.634,171,0.776,172,0.602,173,0.776,174,0.634,175,0.776,176,0.634,177,0.776,178,0.634,179,0.776,180,0.634,181,0.776,182,0.738,183,0.667,184,0.738,185,0.776,186,0.011,187,0.011,192,0.475,194,0.553,195,0.799,196,1.042,197,0.942,240,1.613,254,2.092,262,3.097,323,1.775,325,1.685,334,0.991,335,1.243,342,1.067,343,2.565,344,1.853,345,1.656,346,1.853,347,1.656,348,2.468,349,1.248,360,1.198,361,1.262,403,1.178,413,1.75,420,0.951,461,2.585,469,2.084,477,2.396,480,2.396,505,2.585,510,1.893,515,1.324,529,3.695,575,3.097,593,3.714,678,1.893,681,2.234,686,2.341,692,1.613,730,3.695,959,1.893,1032,2.341,1033,4.839,1034,4.055,1035,4.839,1036,5.723,1037,4.839,1038,4.839,1039,4.055,1040,4.055,1041,4.055,1042,4.055,1043,4.09,1044,2.73,1045,4.158,1046,5.356,1047,6.209,1048,4.055,1049,2.73,1050,4.055,1051,2.73,1052,4.055,1053,2.73,1054,2.73,1055,4.055,1056,2.73,1057,2.73,1058,4.055,1059,2.73,1060,2.73,1061,2.73,1062,2.73,1063,2.73,1064,2.73,1065,2.084,1066,2.73,1067,2.341,1068,2.73,1069,2.73,1070,2.73,1071,2.73,1072,4.055,1073,2.73,1074,2.73,1075,2.73,1076,4.149,1077,2.73,1078,2.73,1079,2.73,1080,2.73,1081,2.73,1082,2.73,1083,2.73,1084,2.73,1085,4.055,1086,4.055,1087,4.055,1088,4.055,1089,4.055,1090,4.055,1091,2.73,1092,2.585,1093,3.477,1094,4.149,1095,2.73,1096,2.73,1097,2.73,1098,2.73,1099,2.73,1100,2.73,1101,2.084,1102,2.341,1103,2.73,1104,2.73]],["title/injectables/ExperimentService.html",[893,1.576,1045,2.532]],["body/injectables/ExperimentService.html",[3,0.221,4,0.193,9,0.165,20,0.371,21,1.038,23,0.917,24,1.007,27,0.779,28,0.02,30,0.882,31,0.615,32,0.221,33,0.193,143,0.351,186,0.015,187,0.015,189,2.727,192,0.682,194,0.371,196,1.496,197,1.352,228,3.524,325,2.222,334,1.723,342,1.018,343,1.786,348,1.786,360,1.219,361,1.284,417,2.238,420,1.608,424,2.028,495,3.768,593,3.201,893,2.513,894,2.727,914,3.958,915,5.743,917,4.992,950,4.992,953,3.958,955,3.201,956,3.958,957,2.942,969,3.958,970,3.958,971,3.958,972,3.958,973,3.958,974,3.958,1043,3.524,1045,4.037,1067,3.958,1105,3.958,1106,5.469,1107,5.469,1108,5.822,1109,5.822,1110,5.822,1111,4.616,1112,4.616,1113,5.822,1114,4.616,1115,2.543,1116,4.616,1117,3.958,1118,4.616]],["title/components/ExperimentsListComponent.html",[0,0.174,157,0.848]],["body/components/ExperimentsListComponent.html",[0,0.292,1,0.928,2,1.483,3,0.201,4,0.176,5,1.196,6,1.258,7,1.196,8,1.196,9,0.151,11,1.21,12,1.825,13,1.149,14,2.049,15,1.945,16,1.64,18,1.64,20,0.338,21,0.979,22,1.934,23,1.213,24,0.825,27,0.71,28,0.019,29,1.274,30,0.526,31,0.561,32,0.201,33,0.176,114,1.137,115,1.483,116,1.56,117,0.977,118,1.839,119,1.196,143,0.368,144,1.196,145,0.977,146,1.196,147,0.977,148,1.196,149,0.977,150,1.196,151,0.977,152,1.196,153,0.977,154,1.196,155,0.977,156,1.196,157,1.502,158,1.96,159,1.196,160,0.977,161,1.196,162,0.977,163,1.196,164,0.977,165,1.196,166,0.977,167,1.196,168,1.081,169,1.196,170,0.977,171,1.196,172,0.928,173,1.196,174,0.977,175,1.196,176,0.977,177,1.196,178,0.977,179,1.196,180,0.977,181,1.196,182,1.137,183,1.028,184,1.137,185,1.196,186,0.014,187,0.014,290,4.662,978,5.548,1119,5.235,1120,3.608,1121,6.106,1122,5.487,1123,4.208,1124,4.208,1125,5.487]],["title/interfaces/FieldValues.html",[314,0.764,1126,1.884]],["body/interfaces/FieldValues.html",[3,0.258,4,0.225,9,0.193,20,0.434,28,0.019,32,0.306,143,0.427,186,0.017,187,0.017,192,0.75,194,0.549,195,0.911,314,1.342,316,2.205,323,2.508,527,2.468,609,2.975,610,3.895,1115,3.895,1126,3.307,1127,4.124,1128,5.399]],["title/interfaces/Fields.html",[314,0.764,527,1.668]],["body/interfaces/Fields.html",[3,0.266,4,0.232,9,0.199,20,0.446,28,0.019,32,0.312,143,0.335,186,0.017,187,0.017,192,0.763,194,0.446,195,0.741,314,1.365,316,2.27,323,2.04,527,2.98,609,3.932,610,3.062,1115,3.932,1126,2.868,1127,4.244,1128,4.244]],["title/interfaces/File.html",[9,0.131,314,0.764]],["body/interfaces/File.html",[3,0.189,4,0.165,9,0.247,20,0.317,28,0.02,32,0.339,33,0.165,87,1.045,143,0.357,186,0.014,187,0.014,192,0.616,193,2.148,194,0.475,195,0.998,314,1.468,315,2.837,316,1.611,317,1.803,318,1.803,319,2.917,320,3.141,321,1.914,322,1.914,323,1.93,324,2.27,325,2.061,326,2.837,327,2.55,328,3.187,329,2.837,330,2.404,331,2.837,332,2.55,333,1.703,334,0.964,335,1.69,336,1.914,337,2.55,338,1.914,339,1.914,340,3.025,341,1.914,342,1.546,343,2.035,344,1.803,345,1.611,346,1.803,347,1.611,348,2.035,349,1.803,350,1.241,351,1.803]],["title/components/FilterComponent.html",[0,0.174,160,0.848]],["body/components/FilterComponent.html",[0,0.216,1,0.539,2,1.009,3,0.117,4,0.102,5,0.695,6,0.731,7,0.695,8,0.695,9,0.087,11,0.823,12,1.353,13,0.781,14,1.935,15,1.832,16,1.116,18,1.116,20,0.196,21,0.666,22,1.514,23,0.486,24,1.072,27,1.041,28,0.02,29,1.607,30,0.719,31,0.326,32,0.117,33,0.102,87,1.409,114,0.661,115,1.009,116,1.061,117,0.568,118,1.44,119,0.695,143,0.389,144,0.695,145,0.568,146,0.695,147,0.568,148,0.695,149,0.568,150,0.695,151,0.568,152,0.695,153,0.568,154,0.695,155,0.568,156,0.695,157,0.568,158,0.661,159,0.695,160,1.176,161,0.695,162,0.568,163,0.695,164,0.568,165,0.695,166,0.568,167,0.695,168,1.854,169,0.695,170,0.568,171,0.695,172,0.539,173,0.695,174,0.568,175,0.695,176,0.568,177,0.695,178,0.568,179,0.695,180,0.568,181,0.695,182,0.661,183,0.597,184,0.661,185,0.695,186,0.01,187,0.01,192,0.437,194,0.54,195,0.727,196,1.402,197,1.497,231,1.261,249,1.055,250,1.444,251,1.444,319,1.611,335,0.866,342,0.823,360,1.253,361,1.319,393,3.735,403,1.611,413,1.055,424,1.764,435,1.261,477,3.644,480,2.205,515,1.185,527,2.493,528,2.993,547,2.111,588,1.261,589,1.695,605,2.85,609,2.494,610,3.398,620,2.588,674,1.695,681,1.347,1092,1.558,1115,1.347,1126,1.925,1129,2.096,1130,4.527,1131,3.732,1132,2.588,1133,2.588,1134,2.588,1135,2.85,1136,2.85,1137,2.85,1138,2.85,1139,2.85,1140,3.868,1141,2.588,1142,2.85,1143,2.85,1144,2.85,1145,2.85,1146,2.056,1147,2.445,1148,6.083,1149,2.096,1150,2.096,1151,3.2,1152,2.85,1153,2.096,1154,2.096,1155,2.85,1156,2.096,1157,2.85,1158,2.096,1159,2.85,1160,2.096,1161,2.85,1162,2.096,1163,2.85,1164,2.096,1165,3.139,1166,2.096,1167,2.096,1168,2.096,1169,2.096,1170,2.096,1171,2.096,1172,2.096,1173,2.096,1174,2.096,1175,2.096,1176,2.096,1177,2.096,1178,1.867,1179,2.85,1180,2.85,1181,1.867,1182,1.867,1183,2.096,1184,2.096,1185,2.096,1186,2.096,1187,2.096,1188,2.096,1189,2.096,1190,2.096,1191,2.096,1192,2.096,1193,2.85,1194,1.867,1195,3.868,1196,2.096,1197,2.096,1198,2.096,1199,2.096,1200,2.096,1201,2.096,1202,2.096,1203,2.096,1204,2.096,1205,2.096,1206,2.096,1207,3.2,1208,2.096,1209,2.096,1210,1.867,1211,1.867,1212,1.867,1213,1.867,1214,1.867,1215,1.867,1216,2.85,1217,2.85,1218,2.85,1219,2.096,1220,2.096,1221,2.096,1222,1.867,1223,3.456,1224,2.445]],["title/interfaces/Folder.html",[314,0.764,348,1.412]],["body/interfaces/Folder.html",[3,0.182,4,0.159,9,0.24,20,0.306,28,0.02,32,0.337,33,0.159,87,1.022,143,0.404,186,0.013,187,0.013,192,0.602,193,2.1,194,0.566,195,1,314,1.457,315,2.805,316,1.558,317,1.744,318,1.744,319,2.805,320,3.102,321,1.851,322,1.851,323,1.887,324,2.22,325,2.026,326,2.805,327,2.494,328,2.494,329,2.805,330,2.35,331,2.805,332,2.494,333,1.647,334,0.932,335,1.681,336,1.851,337,2.494,338,1.851,339,1.851,340,3.003,341,1.851,342,1.534,343,2.408,344,1.744,345,1.558,346,1.744,347,1.558,348,2.514,349,2.845,350,1.829,351,2.845]],["title/pipes/GetPipe.html",[208,2.327,352,1.77]],["body/pipes/GetPipe.html",[3,0.234,4,0.205,9,0.176,11,1.082,13,1.027,21,0.875,24,0.738,27,0.827,28,0.02,30,0.613,31,0.653,32,0.234,33,0.205,143,0.396,186,0.016,187,0.016,194,0.394,195,0.984,208,3.854,335,1.662,342,1.446,352,2.932,353,3.126,357,3.401,360,1.027,361,1.082,362,4.193,408,2.003,831,4.746,864,3.745,959,4.546,1225,4.205,1226,6.047,1227,4.904,1228,5.622,1229,4.904,1230,6.047,1231,4.904,1232,4.205,1233,4.904]],["title/components/HLFilterComponent.html",[0,0.174,168,0.938]],["body/components/HLFilterComponent.html",[0,0.221,1,0.557,2,1.034,3,0.121,4,0.105,5,1.087,7,0.718,8,0.718,9,0.09,11,0.844,12,1.38,13,0.967,14,1.943,15,1.84,20,0.203,21,0.682,22,1.54,23,0.502,24,1.077,27,1.051,28,0.02,29,1.616,30,0.692,31,0.336,32,0.121,33,0.105,87,1.463,114,0.683,115,1.034,116,1.087,117,0.586,118,1.464,119,0.718,143,0.392,144,0.718,145,0.586,146,0.718,147,0.586,148,0.718,149,0.586,150,0.718,151,0.586,152,0.718,153,0.586,154,0.718,155,0.586,156,0.718,157,0.586,158,0.683,159,0.718,160,0.586,161,0.718,162,0.586,163,0.718,164,0.586,165,0.718,166,0.586,167,0.718,168,1.324,169,0.718,170,0.586,171,0.718,172,0.557,173,0.718,174,0.586,175,0.718,176,0.586,177,0.718,178,0.586,179,0.718,180,0.586,181,0.718,182,0.683,183,0.617,184,0.683,185,0.718,186,0.01,187,0.01,192,0.448,194,0.544,195,0.867,196,1.422,197,1.51,231,1.303,249,1.09,250,1.492,251,1.492,335,1.196,342,0.844,360,1.267,361,1.334,393,3.769,403,1.651,413,1.993,420,0.88,424,1.794,435,1.303,477,3.681,480,2.26,527,2.765,528,3.441,547,2.253,609,1.391,610,3.433,620,2.653,1115,2.107,1126,2.383,1132,3.202,1133,3.202,1134,3.202,1135,3.526,1136,3.526,1137,3.526,1138,3.526,1139,2.921,1140,3.933,1141,2.653,1142,2.921,1143,2.921,1144,2.921,1145,2.921,1146,1.391,1152,2.921,1155,2.921,1157,2.921,1159,2.921,1161,2.921,1163,2.921,1165,3.838,1178,1.928,1179,2.921,1180,2.921,1181,1.928,1182,1.928,1183,2.166,1184,2.166,1185,2.166,1186,2.166,1187,2.166,1188,2.166,1189,2.166,1190,2.166,1191,2.166,1192,2.166,1193,2.921,1194,1.928,1195,3.933,1196,2.166,1197,2.166,1198,2.166,1199,2.166,1200,2.166,1201,2.166,1202,2.166,1203,2.166,1204,2.166,1205,2.166,1206,2.166,1207,3.28,1208,2.166,1209,2.166,1210,1.928,1211,1.928,1212,1.928,1213,1.928,1214,1.928,1215,1.928,1216,2.921,1217,2.921,1218,2.921,1219,2.166,1220,2.166,1221,2.166,1234,2.166,1235,3.826,1236,3.826,1237,2.526,1238,2.526,1239,2.526,1240,2.526,1241,2.526,1242,2.526,1243,2.526,1244,2.526,1245,2.526,1246,2.526,1247,2.526,1248,2.526,1249,2.526,1250,2.526,1251,2.526,1252,2.526,1253,2.526,1254,2.526,1255,2.526,1256,2.166]],["title/components/HeaderComponent.html",[0,0.174,162,0.848]],["body/components/HeaderComponent.html",[0,0.29,1,0.919,2,1.474,3,0.199,4,0.174,5,1.185,6,1.246,7,1.185,8,1.185,9,0.149,11,1.203,12,1.817,13,1.142,14,2.048,15,1.944,16,1.63,18,1.63,20,0.335,21,0.973,22,1.927,23,1.207,24,0.82,27,0.703,28,0.02,29,1.266,30,0.521,31,0.555,32,0.199,33,0.174,56,4.676,62,4.676,66,4.676,97,3.781,114,1.127,115,1.474,116,1.55,117,0.968,118,1.832,119,1.185,143,0.367,144,1.185,145,0.968,146,1.185,147,0.968,148,1.185,149,0.968,150,1.185,151,0.968,152,1.185,153,0.968,154,1.185,155,0.968,156,1.185,157,0.968,158,1.127,159,1.185,160,0.968,161,1.185,162,1.497,163,1.185,164,0.968,165,1.185,166,0.968,167,1.185,168,1.071,169,1.185,170,0.968,171,1.185,172,0.919,173,1.185,174,0.968,175,1.185,176,0.968,177,1.185,178,0.968,179,1.185,180,0.968,181,1.185,182,1.127,183,1.018,184,1.127,185,1.185,186,0.014,187,0.014,418,2.814,515,2.021,516,2.89,702,4.676,1257,3.574,1258,6.078,1259,5.453,1260,4.168,1261,4.168,1262,4.676,1263,5.453,1264,5.453,1265,5.453,1266,4.168]],["title/components/HeatmapComponent.html",[0,0.174,164,0.848]],["body/components/HeatmapComponent.html",[0,0.236,1,0.622,2,1.123,3,0.135,4,0.118,5,0.802,6,0.844,7,0.802,8,0.802,9,0.101,11,0.917,12,1.475,13,0.87,14,1.97,15,1.867,16,1.243,18,1.243,20,0.227,21,0.741,22,1.627,23,0.561,24,1.032,27,0.918,28,0.02,29,1.457,30,0.822,31,0.376,32,0.135,33,0.118,45,1.218,87,1.399,114,0.763,115,1.123,116,1.181,117,0.655,118,1.547,119,0.802,143,0.366,144,0.802,145,0.655,146,0.802,147,1.264,148,0.802,149,0.655,150,0.802,151,0.655,152,0.802,153,0.655,154,0.802,155,0.655,156,0.802,157,0.655,158,0.763,159,0.802,160,0.655,161,0.802,162,0.655,163,0.802,164,1.264,165,0.802,166,0.655,167,0.802,168,0.725,169,0.802,170,0.965,171,0.802,172,0.622,173,0.802,174,0.655,175,0.802,176,0.655,177,0.802,178,1.264,179,0.802,180,0.655,181,0.802,182,0.763,183,0.69,184,0.763,185,0.802,186,0.011,187,0.011,192,0.487,194,0.537,195,0.809,196,1.268,197,1.146,222,1.799,223,1.667,253,2.456,257,3.775,258,4.352,259,1.799,260,1.799,325,0.983,334,1.33,335,0.965,350,1.712,360,1.033,361,1.088,377,4.231,382,4.792,386,4.667,388,3.238,398,5.204,399,1.799,400,2.456,403,2.709,407,3.564,408,1.697,409,2.155,411,2.155,412,1.555,413,1.218,418,2.994,419,1.799,420,0.983,424,0.983,442,2.42,547,2.348,548,4.667,588,1.456,624,2.155,648,2.42,652,3.422,659,2.42,984,4.667,1146,1.555,1267,2.42,1268,4.934,1269,4.157,1270,3.768,1271,4.934,1272,4.231,1273,4.157,1274,4.157,1275,3.768,1276,4.156,1277,4.157,1278,4.157,1279,2.822,1280,2.822,1281,2.822,1282,4.157,1283,2.822,1284,4.157,1285,2.822,1286,2.822,1287,2.822,1288,2.822,1289,4.157,1290,2.822,1291,4.157,1292,2.822,1293,2.822,1294,2.822,1295,2.822,1296,2.822,1297,2.822,1298,4.157,1299,2.42,1300,2.822,1301,2.822,1302,2.822,1303,4.934,1304,2.822,1305,2.822,1306,2.822,1307,2.822,1308,4.934,1309,2.822,1310,2.822,1311,2.822,1312,2.822,1313,2.822,1314,2.822,1315,2.822,1316,2.42,1317,2.822,1318,2.822,1319,2.822,1320,3.564]],["title/injectables/HeatmapInfoService.html",[388,1.884,893,1.576]],["body/injectables/HeatmapInfoService.html",[3,0.211,4,0.184,9,0.158,20,0.354,21,1.009,23,1.24,24,1.066,27,1.053,28,0.02,29,1.618,30,0.707,31,0.587,32,0.211,33,0.184,87,1.44,143,0.377,186,0.015,187,0.015,189,2.605,192,0.662,194,0.501,195,0.832,196,1.605,197,1.45,254,2.275,350,2.191,360,1.307,361,1.377,388,2.918,408,2.845,416,4.768,417,2.138,624,4.318,893,2.441,894,2.605,954,3.781,957,2.811,1272,5.354,1321,6.154,1322,3.781,1323,6.244,1324,6.244,1325,5.656,1326,5.656,1327,5.656,1328,5.656,1329,5.656,1330,4.409,1331,5.656,1332,4.409,1333,5.656,1334,4.409,1335,6.586,1336,4.409,1337,4.409,1338,4.409,1339,4.409,1340,4.409]],["title/components/HighlightComponent.html",[0,0.174,166,0.848]],["body/components/HighlightComponent.html",[0,0.225,1,0.576,2,1.06,3,0.125,4,0.109,5,0.742,6,0.78,7,0.742,8,0.742,9,0.093,11,0.865,12,1.408,13,0.821,14,1.952,15,1.848,16,1.172,18,1.172,20,0.21,21,0.699,22,1.566,23,0.518,24,1.09,27,1.086,28,0.02,29,1.613,30,0.702,31,0.348,32,0.125,33,0.109,87,1.422,114,0.705,115,1.06,116,1.115,117,0.606,118,1.489,119,0.742,143,0.402,144,0.742,145,0.606,146,0.742,147,0.606,148,0.742,149,0.606,150,0.742,151,0.606,152,0.742,153,0.606,154,0.742,155,0.606,156,0.742,157,0.606,158,0.705,159,0.742,160,0.606,161,0.742,162,0.606,163,0.742,164,0.606,165,0.742,166,1.216,167,0.742,168,1.869,169,0.742,170,0.606,171,0.742,172,0.576,173,0.742,174,0.606,175,0.742,176,0.606,177,0.742,178,0.606,179,0.742,180,0.606,181,0.742,182,0.705,183,0.638,184,0.705,185,0.742,186,0.01,187,0.01,192,0.459,194,0.553,195,0.815,196,1.443,197,1.369,231,1.346,249,1.126,250,1.542,251,1.542,254,3.043,319,1.692,335,0.91,360,1.318,361,1.388,393,3.935,413,1.692,435,1.346,477,3.094,480,2.317,515,1.265,527,2.393,528,3.094,547,2.172,588,1.346,609,2.16,610,3.249,613,3.362,619,2.238,621,2.238,630,2.238,681,1.438,1092,1.663,1115,1.438,1126,1.346,1132,2.719,1133,2.719,1134,2.719,1135,2.994,1136,2.994,1137,2.994,1138,2.994,1139,2.994,1140,3.597,1141,2.719,1142,2.994,1143,2.994,1144,2.994,1145,2.994,1146,2.16,1148,6.14,1149,2.238,1150,2.238,1151,3.362,1152,2.994,1153,2.238,1154,2.238,1155,2.994,1156,2.238,1157,1.993,1158,2.238,1159,1.993,1160,2.238,1161,2.994,1162,2.238,1163,2.994,1164,2.238,1165,3.266,1166,2.238,1167,2.238,1168,2.238,1169,2.238,1170,2.238,1171,2.238,1172,2.238,1173,2.238,1174,2.238,1175,2.238,1176,2.238,1177,2.238,1193,2.994,1194,1.993,1195,1.993,1210,1.993,1211,1.993,1212,1.993,1213,1.993,1214,1.993,1215,1.993,1216,1.993,1217,1.993,1218,1.993,1222,1.993,1223,1.993,1341,2.238,1342,4.71,1343,3.921,1344,3.921,1345,3.921,1346,3.921,1347,2.61,1348,2.61,1349,2.61,1350,2.61,1351,2.61,1352,2.61,1353,2.61,1354,2.61,1355,2.61]],["title/directives/HostDirective.html",[117,0.848,183,0.892]],["body/directives/HostDirective.html",[0,0.242,3,0.242,4,0.211,9,0.181,13,1.06,14,1.368,20,0.406,23,1.006,24,1.041,28,0.02,30,0.633,31,0.674,32,0.242,33,0.211,45,2.661,117,1.175,143,0.305,182,1.368,183,1.506,184,1.666,186,0.016,187,0.016,192,0.722,193,2.896,194,0.534,195,0.821,196,1.585,197,1.432,360,1.06,361,1.117,399,4.521,400,2.991,413,2.185,420,1.763,1356,4.341,1357,6.166,1358,5.701,1359,5.063,1360,6.92,1361,6.649,1362,6.166,1363,5.063,1364,5.063,1365,5.063,1366,5.063]],["title/modules/IconsModule.html",[199,2.788,211,2.327]],["body/modules/IconsModule.html",[3,0.247,4,0.215,9,0.185,28,0.02,30,0.871,31,0.688,32,0.247,33,0.215,186,0.016,187,0.016,201,3.049,211,3.976,216,4.425,217,3.94,218,3.976,226,4.763,249,2.692,311,3.049,313,4.425,347,2.547,685,4.763,687,4.763,1065,3.94,1367,3.94,1368,5.161,1369,6.238,1370,4.326,1371,5.349,1372,5.349,1373,5.349,1374,5.349,1375,5.349,1376,5.349,1377,5.349,1378,5.161,1379,5.161]],["title/components/LegendComponent.html",[0,0.174,170,0.848]],["body/components/LegendComponent.html",[0,0.252,1,0.702,2,1.226,3,0.152,4,0.133,5,0.905,6,0.951,7,0.905,8,0.905,9,0.114,11,1,12,1.579,13,0.95,14,1.997,15,1.893,16,1.356,18,1.356,20,0.256,21,0.809,22,1.721,23,0.632,24,0.979,27,0.891,28,0.02,29,1.337,30,0.66,31,0.424,32,0.152,33,0.133,45,2.485,87,1.345,114,1.897,115,1.226,116,1.289,117,0.739,118,1.637,119,0.905,143,0.367,144,0.905,145,0.739,146,0.905,147,0.739,148,0.905,149,0.739,150,0.905,151,0.739,152,0.905,153,0.739,154,0.905,155,0.739,156,0.905,157,0.739,158,0.86,159,0.905,160,0.739,161,0.905,162,0.739,163,0.905,164,0.739,165,0.905,166,0.739,167,0.905,168,0.818,169,0.905,170,1.337,171,0.905,172,0.702,173,0.905,174,0.739,175,0.905,176,0.739,177,0.905,178,0.739,179,0.905,180,0.739,181,0.905,182,0.86,183,0.778,184,0.86,185,0.905,186,0.012,187,0.012,192,0.531,194,0.489,195,0.811,197,0.739,254,2.971,311,3.121,334,0.778,335,1.337,360,0.95,361,1,388,3.359,413,1.374,418,1.642,419,2.029,420,1.109,424,1.109,477,1.88,505,2.029,515,2.199,547,2.447,588,1.642,672,4.396,673,2.43,674,3.663,675,2.43,676,2.729,677,3.888,678,2.207,679,2.43,681,2.91,682,2.729,688,2.729,691,2.729,692,1.88,694,2.207,696,2.43,906,4.937,1101,2.43,1146,1.753,1223,2.43,1299,2.729,1380,2.729,1381,5.283,1382,4.535,1383,5.283,1384,4.535,1385,4.535,1386,3.183,1387,3.183,1388,4.535,1389,5.283,1390,3.183,1391,3.183,1392,3.183,1393,3.183,1394,3.183,1395,3.183,1396,3.183,1397,3.183,1398,2.729,1399,3.183,1400,3.183,1401,3.183,1402,3.183,1403,3.183,1404,3.183,1405,3.183,1406,3.183,1407,3.183,1408,5.283,1409,3.183,1410,3.183,1411,3.183,1412,3.183,1413,2.729,1414,4.535,1415,2.729,1416,2.729,1417,4.535,1418,2.729,1419,2.729,1420,3.183,1421,3.183,1422,2.729]],["title/components/MainComponent.html",[0,0.174,172,0.805]],["body/components/MainComponent.html",[0,0.285,1,0.883,2,1.436,3,0.191,4,0.167,5,1.138,6,1.197,7,1.138,8,1.138,9,0.143,11,1.172,12,1.782,13,1.112,14,2.041,15,1.941,16,1.588,18,1.588,20,0.322,21,0.947,22,1.897,23,1.184,24,0.955,27,0.676,28,0.02,29,1.233,30,0.745,31,0.534,32,0.191,33,0.167,114,1.083,115,1.436,116,1.51,117,0.93,118,1.804,119,1.138,143,0.36,144,1.138,145,0.93,146,1.138,147,0.93,148,1.138,149,0.93,150,1.138,151,1.474,152,1.138,153,0.93,154,1.138,155,0.93,156,1.138,157,0.93,158,1.083,159,1.138,160,0.93,161,1.138,162,0.93,163,1.138,164,0.93,165,1.138,166,0.93,167,1.138,168,1.029,169,1.138,170,0.93,171,1.138,172,1.4,173,1.138,174,0.93,175,1.138,176,0.93,177,1.138,178,0.93,179,1.138,180,1.474,181,1.804,182,1.083,183,0.979,184,1.083,185,1.138,186,0.014,187,0.014,192,0.622,194,0.426,400,3.138,412,2.206,516,3.683,523,4.401,692,3.138,1423,3.434,1424,5.312,1425,5.96,1426,5.312,1427,5.312,1428,4.005,1429,5.312,1430,4.005,1431,5.312,1432,4.005,1433,4.005,1434,4.005]],["title/components/MenuComponent.html",[0,0.174,174,0.848]],["body/components/MenuComponent.html",[0,0.209,1,0.508,2,0.964,3,0.11,4,0.096,5,0.655,6,0.689,7,0.655,8,0.655,9,0.082,11,0.787,12,1.304,13,0.747,14,1.92,15,1.817,16,1.066,18,1.066,20,0.185,21,0.636,22,1.468,23,0.458,24,1.058,27,1.021,28,0.02,29,1.442,30,0.757,31,0.307,32,0.11,33,0.096,45,1.883,47,4.197,87,1.459,114,0.623,115,0.964,116,1.014,117,0.535,118,1.396,119,0.655,143,0.353,144,0.655,145,0.535,146,0.655,147,0.535,148,0.655,149,0.535,150,0.655,151,0.535,152,0.655,153,0.535,154,0.655,155,0.535,156,0.655,157,0.535,158,1.179,159,0.655,160,0.535,161,0.655,162,0.535,163,0.655,164,0.535,165,0.655,166,0.535,167,0.655,168,0.592,169,0.655,170,0.535,171,0.655,172,0.508,173,0.655,174,1.14,175,0.655,176,0.535,177,0.655,178,0.535,179,0.655,180,0.535,181,0.655,182,0.623,183,0.563,184,0.623,185,0.655,186,0.009,187,0.009,192,0.418,194,0.554,195,0.828,196,1.365,197,1.442,231,1.189,249,0.995,250,1.362,251,1.362,254,1.84,334,0.871,335,1.14,342,0.787,350,1.122,356,2.724,360,1.028,361,1.083,393,2.578,403,0.995,413,2.12,417,1.118,420,0.803,424,1.52,435,1.84,476,3.332,480,2.108,481,3.332,484,3.734,495,3.671,497,1.976,527,2.998,528,3.319,541,4.212,545,1.976,546,4.212,547,2.266,550,3.059,583,1.976,584,1.976,585,1.976,589,1.598,590,3.059,591,1.976,592,1.976,593,3.684,600,3.059,601,1.976,602,1.976,605,2.724,609,2.404,610,1.27,616,1.976,618,3.059,620,2.474,657,1.976,660,4.212,661,2.724,672,2.724,673,2.724,674,4.062,678,2.474,681,2.404,694,2.474,696,2.724,705,2.724,790,2.724,952,1.76,1028,1.976,1043,2.724,1094,4.212,1101,1.76,1115,1.27,1117,1.976,1126,1.189,1128,2.724,1132,3.026,1133,3.026,1134,3.026,1141,2.474,1165,3.684,1178,1.76,1179,1.76,1180,1.76,1181,1.76,1182,1.76,1256,1.976,1415,1.976,1416,1.976,1422,1.976,1435,1.976,1436,3.567,1437,4.364,1438,3.567,1439,4.364,1440,4.364,1441,4.912,1442,4.912,1443,3.567,1444,3.567,1445,4.912,1446,3.567,1447,2.305,1448,2.305,1449,2.305,1450,3.567,1451,2.305,1452,3.567,1453,2.305,1454,2.305,1455,2.305,1456,3.567,1457,2.305,1458,2.305,1459,4.364,1460,3.567,1461,4.364,1462,3.059,1463,5.312,1464,4.364,1465,3.567,1466,4.364,1467,3.567,1468,2.305,1469,2.305,1470,2.305,1471,2.305,1472,2.305,1473,2.305,1474,2.305,1475,2.305,1476,2.305,1477,2.305,1478,2.305,1479,2.305,1480,2.305,1481,2.305,1482,2.305,1483,2.305,1484,2.305,1485,2.305,1486,2.305,1487,2.305,1488,3.567,1489,2.305,1490,2.305,1491,2.305,1492,3.567,1493,2.305,1494,2.305,1495,2.305,1496,3.567,1497,3.567,1498,3.567,1499,3.567,1500,2.305,1501,3.567,1502,2.305,1503,2.305]],["title/components/MetadataTableComponent.html",[0,0.174,176,0.848]],["body/components/MetadataTableComponent.html",[0,0.191,1,0.444,2,0.866,3,0.096,4,0.084,5,0.572,6,0.601,7,0.572,8,0.572,9,0.072,11,0.707,12,1.194,13,1.278,14,1.881,15,1.779,16,0.958,18,0.958,20,0.161,21,0.572,22,1.362,23,0.4,24,1.052,27,0.974,28,0.02,29,1.292,30,0.499,31,0.268,32,0.096,33,0.084,45,2.401,48,2.222,87,1.396,114,0.544,115,0.866,116,1.136,117,0.467,118,1.295,119,0.572,143,0.388,144,0.572,145,0.467,146,0.572,147,0.467,148,0.572,149,0.467,150,0.572,151,0.467,152,0.572,153,0.467,154,0.572,155,0.467,156,0.572,157,0.467,158,0.544,159,0.572,160,0.467,161,0.572,162,0.467,163,0.572,164,0.467,165,0.572,166,0.467,167,0.572,168,0.517,169,0.572,170,0.467,171,0.572,172,0.444,173,0.572,174,0.467,175,0.572,176,1.058,177,0.572,178,0.467,179,0.572,180,0.467,181,0.572,182,0.544,183,0.491,184,0.544,185,0.572,186,0.008,187,0.008,192,0.375,194,0.549,195,0.741,196,1.279,197,1.156,264,1.536,265,1.536,293,4.874,311,2.941,323,1.826,324,0.868,325,0.701,334,1.359,335,1.472,342,1.313,350,1.565,351,0.919,360,1.165,361,1.227,399,3.546,400,2.36,402,2.748,403,0.868,412,1.108,420,0.701,424,1.587,427,1.724,430,2.447,435,1.654,461,2.043,493,1.724,514,3.426,515,2.21,529,3.051,547,2.051,575,2.447,588,1.038,679,3.051,681,1.108,692,1.893,694,2.77,710,1.724,831,2.77,882,1.395,909,2.748,959,2.222,964,3.677,1092,1.282,1093,1.724,1146,1.108,1222,1.536,1228,1.724,1232,1.724,1270,1.536,1320,3.426,1358,2.748,1398,3.426,1413,1.724,1418,2.748,1462,2.748,1504,5.367,1505,1.536,1506,3.995,1507,3.205,1508,3.995,1509,3.995,1510,4.977,1511,3.995,1512,3.995,1513,3.995,1514,3.995,1515,4.977,1516,3.995,1517,3.995,1518,4.557,1519,3.205,1520,4.557,1521,3.205,1522,3.205,1523,2.011,1524,2.011,1525,3.205,1526,2.011,1527,3.205,1528,2.011,1529,3.205,1530,2.011,1531,4.977,1532,3.205,1533,2.011,1534,3.205,1535,2.011,1536,3.205,1537,2.011,1538,2.011,1539,5.593,1540,2.011,1541,2.011,1542,2.011,1543,5.563,1544,3.205,1545,2.011,1546,2.011,1547,2.011,1548,2.011,1549,3.205,1550,3.205,1551,3.205,1552,3.205,1553,3.205,1554,3.205,1555,2.011,1556,3.205,1557,2.011,1558,3.205,1559,2.011,1560,2.011,1561,2.011,1562,2.011,1563,2.011,1564,3.995,1565,3.205,1566,2.011,1567,2.011,1568,2.011,1569,2.011,1570,2.011,1571,2.011,1572,2.011,1573,2.011,1574,2.011,1575,2.011,1576,2.011,1577,3.205,1578,3.205,1579,2.011,1580,2.011,1581,3.205,1582,3.205,1583,2.011,1584,5.563,1585,2.011,1586,2.011,1587,2.011,1588,2.011,1589,2.011,1590,2.011,1591,2.011,1592,2.011,1593,2.011,1594,3.995,1595,2.011,1596,3.205,1597,2.011,1598,2.011,1599,3.205,1600,2.011,1601,2.011,1602,3.995,1603,2.011,1604,2.011,1605,2.011,1606,3.995,1607,4.977,1608,2.011,1609,2.011,1610,3.205,1611,2.011,1612,2.011,1613,2.011,1614,2.011,1615,2.011,1616,2.011,1617,2.011,1618,3.205,1619,3.205,1620,3.205,1621,2.011,1622,3.205,1623,3.205,1624,3.205,1625,2.011,1626,2.011,1627,2.011,1628,2.011,1629,2.011,1630,2.011,1631,2.011]],["title/interfaces/Ontology.html",[314,0.764,326,1.576]],["body/interfaces/Ontology.html",[3,0.189,4,0.165,9,0.242,20,0.317,28,0.02,32,0.339,33,0.165,87,1.045,143,0.357,186,0.014,187,0.014,192,0.616,193,2.148,194,0.475,195,0.998,314,1.468,315,2.837,316,1.611,317,1.803,318,1.803,319,2.917,320,3.141,321,1.914,322,1.914,323,1.93,324,2.27,325,2.061,326,2.917,327,3.187,328,2.55,329,2.837,330,2.404,331,2.837,332,2.55,333,1.703,334,0.964,335,1.69,336,1.914,337,2.55,338,1.914,339,1.914,340,3.025,341,1.914,342,1.546,343,2.035,344,1.803,345,1.611,346,1.803,347,1.611,348,2.035,349,1.803,350,1.241,351,1.803]],["title/interfaces/Organization.html",[314,0.764,331,1.576]],["body/interfaces/Organization.html",[3,0.187,4,0.163,9,0.241,20,0.314,28,0.02,32,0.338,33,0.163,87,1.038,143,0.407,186,0.014,187,0.014,192,0.611,193,2.133,194,0.504,195,1.002,314,1.464,315,2.827,316,1.595,317,1.785,318,1.785,319,2.909,320,3.136,321,1.894,322,1.894,323,1.917,324,2.254,325,2.05,326,2.827,327,2.533,328,2.533,329,2.827,330,2.387,331,2.909,332,3.176,333,1.686,334,0.954,335,1.687,336,1.894,337,2.533,338,1.894,339,1.894,340,3.018,341,1.894,342,1.542,343,2.021,344,1.785,345,1.595,346,1.785,347,1.595,348,2.021,349,1.785,350,1.228,351,1.785]],["title/components/PlotlyComponent.html",[0,0.174,178,0.848]],["body/components/PlotlyComponent.html",[0,0.253,1,0.706,2,1.231,3,0.153,4,0.134,5,0.91,6,0.957,7,0.91,8,0.91,9,0.115,11,1.004,12,1.584,13,0.954,14,1.998,15,1.894,16,1.361,18,1.361,20,0.257,21,0.812,22,1.726,23,0.636,24,1.02,27,0.974,28,0.02,29,1.548,30,0.663,31,0.427,32,0.153,33,0.134,45,1.966,87,1.396,114,0.865,115,1.231,116,1.294,117,0.743,118,1.641,119,0.91,143,0.382,144,0.91,145,0.743,146,0.91,147,0.743,148,0.91,149,0.743,150,0.91,151,0.743,152,0.91,153,0.743,154,0.91,155,0.743,156,0.91,157,0.743,158,0.865,159,0.91,160,0.743,161,0.91,162,0.743,163,0.91,164,0.743,165,0.91,166,0.743,167,0.91,168,0.823,169,0.91,170,0.743,171,0.91,172,0.706,173,0.91,174,0.743,175,0.91,176,0.743,177,0.91,178,1.34,179,0.91,180,0.743,181,0.91,182,0.865,183,0.782,184,0.865,185,0.91,186,0.012,187,0.012,192,0.533,193,1.86,194,0.524,234,4.047,334,0.782,335,1.632,360,1.11,361,1.169,388,3.365,418,2.979,419,2.041,420,1.115,424,1.846,435,1.652,486,4.545,515,1.553,547,2.452,588,1.652,652,3.675,692,1.892,991,2.746,1092,2.903,1146,1.764,1270,4.408,1316,3.905,1419,2.746,1632,2.746,1633,5.3,1634,4.554,1635,5.3,1636,4.554,1637,5.773,1638,4.554,1639,4.554,1640,4.554,1641,3.202,1642,3.202,1643,4.554,1644,3.202,1645,3.202,1646,3.202,1647,3.202,1648,3.202,1649,4.554,1650,4.554,1651,5.3,1652,3.202,1653,4.554,1654,4.554,1655,3.202,1656,3.202,1657,3.202,1658,4.554,1659,4.554,1660,3.202,1661,3.202,1662,3.202,1663,3.202,1664,3.202,1665,3.202,1666,3.202,1667,3.202,1668,3.202,1669,4.554,1670,3.202,1671,3.202,1672,3.202,1673,3.202,1674,3.202,1675,3.202,1676,3.202,1677,3.202,1678,4.554]],["title/injectables/RequestOptionsService.html",[893,1.576,1679,2.788]],["body/injectables/RequestOptionsService.html",[3,0.259,4,0.226,9,0.194,23,1.077,24,0.816,28,0.02,30,0.803,31,0.723,32,0.259,33,0.226,143,0.327,186,0.017,187,0.017,189,3.204,194,0.435,253,3.204,258,5.082,259,3.457,260,3.457,360,1.135,361,1.196,420,1.889,893,2.773,894,3.204,957,3.457,1679,4.906,1680,5.51,1681,4.65,1682,5.423,1683,5.423]],["title/interfaces/RouteStorageObject.html",[314,0.764,817,2.532]],["body/interfaces/RouteStorageObject.html",[0,0.175,3,0.114,4,0.099,9,0.085,11,0.525,20,0.191,27,1.032,28,0.02,29,0.552,30,0.297,32,0.114,33,0.153,89,1.817,93,2.791,143,0.144,186,0.012,187,0.009,192,0.666,194,0.357,195,0.317,196,0.611,197,0.552,214,1.517,240,1.406,284,2.791,285,1.517,286,2.791,304,4.109,310,2.791,314,0.932,316,0.971,334,0.581,335,1.571,340,1.578,342,1.558,350,2.127,360,0.498,363,3.184,403,2.763,408,0.971,424,2.064,523,2.535,713,1.817,714,1.817,715,2.04,721,5.377,724,2.04,725,2.04,726,4.283,727,2.04,728,4.879,729,2.04,730,5.602,731,5.259,732,5.081,733,2.04,734,4.879,736,2.04,737,2.04,738,3.134,739,5.585,740,4.283,742,3.816,743,2.04,744,2.04,745,2.04,746,2.04,747,4.621,748,2.04,749,2.04,750,4.283,751,4.283,752,2.04,753,3.134,754,2.04,755,3.134,756,5.081,757,4.621,758,2.04,759,3.134,760,2.04,761,2.04,762,2.04,763,4.879,764,2.04,765,2.04,766,2.04,767,4.621,768,2.04,769,2.04,770,2.04,771,5.667,773,2.04,774,2.04,775,4.879,776,5.377,777,2.04,778,3.134,779,2.04,781,3.816,782,3.134,783,3.134,784,2.04,786,3.134,787,2.04,788,2.04,789,2.04,790,1.817,791,2.04,792,2.04,793,2.04,794,3.816,795,2.04,796,2.04,797,1.817,798,2.04,799,3.134,800,4.621,801,2.04,802,3.134,804,3.816,805,2.04,806,3.134,807,2.04,808,2.04,809,2.04,810,2.04,811,2.04,812,2.04,813,2.04,814,5.49,816,2.04,817,3.737,818,2.04,819,3.816,820,2.04,821,3.816,822,2.04,823,3.816,824,3.816,825,3.816,826,2.04,827,3.134,828,3.134,829,4.621,830,4.621,831,3.086,832,2.04,833,5.49,834,3.816,835,2.04,836,3.816,837,2.04,838,2.04,839,2.04,840,2.04,841,4.283,842,2.04,843,3.134,844,3.134,845,2.04,846,2.04,847,3.816,848,2.04,849,2.04,850,2.04,851,2.04,852,2.04,853,2.04,854,3.134,855,2.04,856,2.04,857,3.134,858,3.816,859,2.04,860,3.816,861,2.04,862,3.134,863,2.04,864,2.791,865,3.134,866,2.04,867,2.04,868,3.816,869,3.816,870,2.04,871,2.04,872,3.134,873,2.04,874,2.04,875,2.04,876,2.04,877,2.04,878,2.04,879,3.134,880,2.04,881,2.04,882,2.535,883,4.283,884,2.04,885,2.791,886,2.04,887,2.04,888,2.04,889,2.04,890,2.04,891,2.04,892,2.04]],["title/pipes/SafeHTMLPipe.html",[209,2.327,352,1.77]],["body/pipes/SafeHTMLPipe.html",[3,0.254,4,0.222,9,0.19,11,1.172,13,1.113,21,0.948,24,0.799,27,0.897,28,0.02,30,0.794,31,0.708,32,0.254,33,0.222,143,0.41,186,0.016,187,0.016,197,1.234,209,4.047,222,3.388,223,3.14,342,1.172,352,3.079,353,3.388,357,3.685,358,4.848,360,1.113,361,1.172,362,4.403,420,1.851,1275,4.058,1276,4.848,1684,5.444,1685,4.557,1686,5.444,1687,5.315,1688,5.315,1689,4.557]],["title/pipes/SafePipe.html",[210,2.327,352,1.77]],["body/pipes/SafePipe.html",[3,0.227,4,0.198,9,0.17,11,1.049,13,0.996,21,0.848,24,0.715,27,0.802,28,0.02,30,0.742,31,0.634,32,0.227,33,0.198,87,1.178,109,3.298,115,1.285,143,0.39,186,0.015,187,0.015,194,0.579,195,0.861,196,1.222,197,1.104,210,3.782,222,3.031,223,2.81,325,1.656,342,1.537,352,2.877,353,3.031,357,3.298,358,4.53,360,0.996,361,1.049,362,4.114,363,4.441,408,1.942,966,4.078,1102,4.078,1275,3.631,1276,4.53,1686,5.544,1689,4.078,1690,4.078,1691,6.466,1692,4.756,1693,6.466,1694,6.466,1695,6.466,1696,6.466,1697,4.756,1698,4.756,1699,4.756,1700,4.756,1701,4.756,1702,4.756,1703,4.756,1704,4.756,1705,4.756]],["title/interfaces/TextUnit.html",[314,0.764,329,1.576]],["body/interfaces/TextUnit.html",[3,0.189,4,0.165,9,0.242,20,0.317,28,0.02,32,0.339,33,0.165,87,1.045,143,0.357,186,0.014,187,0.014,192,0.616,193,2.148,194,0.475,195,0.998,314,1.468,315,2.837,316,1.611,317,1.803,318,1.803,319,2.917,320,3.141,321,1.914,322,1.914,323,1.93,324,2.27,325,2.061,326,2.837,327,2.55,328,2.55,329,2.917,330,3.003,331,2.837,332,2.55,333,1.703,334,0.964,335,1.69,336,1.914,337,2.55,338,1.914,339,1.914,340,3.025,341,1.914,342,1.546,343,2.035,344,1.803,345,1.611,346,1.803,347,1.611,348,2.035,349,1.803,350,1.241,351,1.803]],["title/interfaces/TextUrl.html",[314,0.764,320,1.576]],["body/interfaces/TextUrl.html",[3,0.187,4,0.163,9,0.241,20,0.314,28,0.02,32,0.339,33,0.163,87,1.04,143,0.356,186,0.014,187,0.014,192,0.613,193,2.137,194,0.505,195,1.002,314,1.465,315,2.83,316,1.599,317,1.79,318,1.79,319,2.83,320,3.138,321,1.899,322,1.899,323,1.92,324,2.83,325,2.349,326,2.83,327,2.538,328,2.538,329,2.83,330,2.392,331,2.83,332,2.538,333,1.691,334,0.957,335,1.688,336,1.899,337,2.538,338,1.899,339,1.899,340,3.02,341,1.899,342,1.543,343,2.025,344,1.79,345,1.599,346,1.79,347,1.599,348,2.025,349,1.79,350,1.232,351,1.79]],["title/components/ViewComponent.html",[0,0.174,180,0.848]],["body/components/ViewComponent.html",[0,0.289,1,0.906,2,1.46,3,0.196,4,0.172,5,1.168,6,1.229,7,1.168,8,1.168,9,0.147,11,1.192,12,1.804,13,1.131,14,2.045,15,1.941,16,1.615,18,1.615,20,0.33,21,0.964,22,1.917,23,1.199,24,0.908,27,0.693,28,0.02,29,0.954,30,0.755,31,0.548,32,0.196,33,0.172,114,1.111,115,1.46,116,1.536,117,0.954,118,1.823,119,1.168,143,0.364,144,1.168,145,0.954,146,1.168,147,0.954,148,1.168,149,0.954,150,1.168,151,0.954,152,1.168,153,0.954,154,1.168,155,0.954,156,1.168,157,0.954,158,1.111,159,1.168,160,0.954,161,1.168,162,0.954,163,1.168,164,1.255,165,1.168,166,0.954,167,1.168,168,1.056,169,1.168,170,0.954,171,1.168,172,0.906,173,1.168,174,0.954,175,1.168,176,0.954,177,1.168,178,0.954,179,1.168,180,1.489,181,1.716,182,1.111,183,1.004,184,1.111,185,1.168,186,0.014,187,0.014,192,0.632,194,0.33,195,0.548,196,1.056,197,0.954,399,2.62,411,3.138,412,2.264,418,3.308,547,1.59,588,2.121,964,3.747,1706,3.524,1707,6.037,1708,5.403,1709,6.037,1710,5.403,1711,4.11,1712,4.11]],["title/coverage.html",[1713,4.279]],["body/coverage.html",[0,0.354,1,0.784,9,0.175,10,3.05,28,0.02,33,0.205,117,0.826,145,0.826,147,0.826,149,0.826,151,0.826,153,0.826,155,0.826,157,0.826,160,0.826,162,0.826,164,0.826,166,0.826,168,0.914,170,0.826,172,0.784,174,0.826,176,0.826,178,0.826,180,0.826,183,0.869,186,0.013,187,0.013,188,3.05,194,0.286,207,2.267,208,2.267,209,2.267,210,2.267,285,2.267,290,2.716,293,2.466,314,1.486,315,1.535,317,3.174,318,3.174,320,1.535,326,1.535,329,1.535,331,1.535,333,1.535,343,1.376,348,1.376,352,2.931,354,3.05,355,3.05,376,3.05,388,1.835,408,1.452,461,4.89,472,3.05,484,2.267,522,3.05,527,1.625,547,1.376,713,3.743,714,3.743,817,2.466,893,2.737,895,3.05,955,3.889,964,2.466,1006,3.05,1013,3.05,1032,3.05,1045,2.466,1105,3.05,1119,3.05,1120,3.05,1126,1.835,1127,3.743,1129,3.05,1225,3.05,1234,3.05,1257,3.05,1267,3.05,1321,3.05,1322,3.05,1341,3.05,1356,3.05,1367,2.716,1370,2.466,1380,3.05,1423,3.05,1435,3.05,1504,2.716,1505,2.716,1632,3.05,1679,2.716,1680,3.05,1681,3.05,1684,3.05,1685,3.05,1690,3.05,1706,3.05,1713,3.05,1714,3.557,1715,3.557,1716,3.557,1717,6.555,1718,6.555,1719,6.843,1720,6.045,1721,3.557,1722,3.557,1723,6.341,1724,3.557,1725,6.045,1726,3.557,1727,4.902,1728,4.902,1729,3.557,1730,3.557,1731,3.557,1732,3.557,1733,5.609,1734,3.557,1735,3.557,1736,3.557,1737,3.557,1738,3.05,1739,3.05,1740,3.05,1741,3.557]],["title/dependencies.html",[202,3.046,1742,2.611]],["body/dependencies.html",[28,0.02,31,0.601,186,0.015,187,0.015,202,3.13,218,4.024,222,3.659,223,3.392,231,2.329,233,3.871,234,3.447,240,2.667,244,4.923,247,4.384,249,2.867,250,2.667,251,2.667,253,3.925,254,2.329,255,3.871,257,3.13,259,2.877,260,2.877,262,3.447,264,3.447,265,3.447,276,3.13,417,2.189,675,3.447,1065,3.447,1370,4.378,1743,4.514,1744,7.336,1745,4.514,1746,4.514,1747,6.644,1748,4.514,1749,4.514,1750,4.514,1751,4.514,1752,4.514,1753,4.514,1754,4.514,1755,5.413,1756,4.514,1757,4.514,1758,5.741,1759,4.514,1760,5.741,1761,4.514,1762,4.514,1763,4.514,1764,4.514,1765,4.514,1766,4.514,1767,4.514,1768,4.514,1769,4.514,1770,4.514,1771,4.514,1772,5.741,1773,5.741,1774,4.514,1775,4.514,1776,4.514,1777,3.871,1778,4.514,1779,4.514,1780,4.514,1781,4.514,1782,4.514,1783,4.514,1784,3.871,1785,4.514,1786,4.514,1787,4.514,1788,4.514,1789,4.514,1790,4.514]],["title/index.html",[20,0.244,1791,3.045,1792,3.045]],["body/index.html",[0,0.315,4,0.207,15,1.274,28,0.016,85,4.252,97,3.439,143,0.299,186,0.016,187,0.016,214,3.161,247,5.031,249,3.138,330,2.782,408,2.025,663,5.649,731,3.786,797,3.786,1076,4.252,1262,5.649,1784,4.252,1793,6.088,1794,4.959,1795,6.588,1796,4.252,1797,4.959,1798,4.959,1799,6.088,1800,7.052,1801,4.959,1802,4.959,1803,4.959,1804,4.959,1805,4.959,1806,4.959,1807,4.959,1808,4.959,1809,6.588,1810,4.959,1811,7.052,1812,4.959,1813,4.959,1814,4.959,1815,4.959,1816,4.252,1817,6.088,1818,6.871,1819,4.959,1820,6.088,1821,6.088,1822,4.959,1823,6.871,1824,4.959,1825,4.959,1826,4.959,1827,4.959,1828,4.959,1829,4.959]],["title/modules.html",[201,2.948]],["body/modules.html",[28,0.017,48,4.635,186,0.017,187,0.017,200,4.022,201,3.427,211,3.697,223,3.427,282,4.022,668,5.731,1755,4.974,1830,5.801,1831,7.041]],["title/overview.html",[1832,4.279]],["body/overview.html",[1,1.364,2,1.169,28,0.02,117,1.004,145,1.638,147,1.436,149,1.436,151,1.436,153,1.436,155,1.436,157,1.436,160,1.436,162,1.436,164,1.436,166,1.436,170,1.436,172,1.364,174,1.436,176,1.436,178,1.436,180,1.436,186,0.014,187,0.014,200,5.376,201,2.554,202,3.872,203,3.707,204,3.707,205,3.707,206,3.707,207,3.943,208,3.943,209,3.943,210,3.943,211,3.943,212,4.789,213,3.707,214,2.756,316,1.765,353,2.756,435,2.231,517,3.301,705,3.301,894,2.554,1832,3.707,1833,4.324,1834,4.324,1835,4.324,1836,4.324,1837,4.324]],["title/properties.html",[192,0.514,1742,2.611]],["body/properties.html",[28,0.018,186,0.018,187,0.018,192,0.694,1777,5.084,1796,5.084]],["title/miscellaneous/typealiases.html",[1838,2.111,1839,4.393]],["body/miscellaneous/typealiases.html",[20,0.467,28,0.017,186,0.017,187,0.017,194,0.537,293,4.031,722,4.985,1504,4.439,1505,5.11,1539,5.738,1838,4.031,1840,5.813,1841,5.813]],["title/miscellaneous/variables.html",[1838,2.111,1842,3.767]],["body/miscellaneous/variables.html",[20,0.411,28,0.02,186,0.016,187,0.016,194,0.558,196,1.785,197,1.613,335,1.613,347,2.091,403,2.68,424,1.784,685,3.91,687,3.91,955,5.016,1106,5.324,1107,5.324,1367,3.91,1370,4.305,1371,4.391,1372,4.391,1373,4.391,1374,4.391,1375,4.391,1376,4.391,1377,4.391,1738,4.391,1739,4.391,1740,4.391,1816,5.73,1838,3.551,1842,4.391,1843,5.121,1844,5.121,1845,5.121,1846,5.121,1847,5.121,1848,5.121,1849,5.121,1850,5.121]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":461,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ExperimentComponent.html":{},"components/MetadataTableComponent.html":{},"coverage.html":{}}}],["0.0",{"_index":1670,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["0.0.0",{"_index":1777,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.05",{"_index":1671,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["0.1",{"_index":1673,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["0.11.3",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["0.2.10",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["0082ff",{"_index":615,"title":{},"body":{"components/ControllerComponent.html":{}}}],["0px",{"_index":1223,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{}}}],["1",{"_index":435,"title":{},"body":{"components/CanvasComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"overview.html":{}}}],["1.1",{"_index":1265,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1.10.20",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["1.2.28",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":1797,"title":{},"body":{"index.html":{}}}],["10.1.0",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":516,"title":{},"body":{"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["1000px",{"_index":1678,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["100vh",{"_index":693,"title":{},"body":{"components/ControllerComponent.html":{}}}],["10px",{"_index":1094,"title":{},"body":{"components/ExperimentComponent.html":{},"components/MenuComponent.html":{}}}],["11",{"_index":1837,"title":{},"body":{"overview.html":{}}}],["12.0.0",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["14.13.1",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1834,"title":{},"body":{"overview.html":{}}}],["2",{"_index":705,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{},"overview.html":{}}}],["2.0.16",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1556,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["20.0.0",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":1417,"title":{},"body":{"components/LegendComponent.html":{}}}],["255).tofixed",{"_index":1408,"title":{},"body":{"components/LegendComponent.html":{}}}],["2px",{"_index":688,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{}}}],["3",{"_index":1833,"title":{},"body":{"overview.html":{}}}],["3.4.1",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1836,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1835,"title":{},"body":{"overview.html":{}}}],["5.13.0",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["500px",{"_index":1093,"title":{},"body":{"components/ExperimentComponent.html":{},"components/MetadataTableComponent.html":{}}}],["55px",{"_index":1224,"title":{},"body":{"components/FilterComponent.html":{}}}],["577c95",{"_index":703,"title":{},"body":{"components/ControllerComponent.html":{}}}],["5px",{"_index":674,"title":{},"body":{"components/ControllerComponent.html":{},"components/FilterComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["6.6.3",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":1623,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["696b6d",{"_index":698,"title":{},"body":{"components/ControllerComponent.html":{}}}],["7.0.0",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":1629,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["70px",{"_index":1355,"title":{},"body":{"components/HighlightComponent.html":{}}}],["717a80",{"_index":709,"title":{},"body":{"components/ControllerComponent.html":{}}}],["815668",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{}}}],["815668)and",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{}}}],["817923",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["817998",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["87",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":989,"title":{},"body":{"injectables/DataService.html":{}}}],["_traditionally_",{"_index":870,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["_when_",{"_index":832,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["about'},{'name",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["about.component.css",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":468,"title":{},"body":{"components/CanvasComponent.html":{}}}],["accession",{"_index":1549,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["accessors",{"_index":542,"title":{},"body":{"components/ControllerComponent.html":{}}}],["accordion>.card",{"_index":711,"title":{},"body":{"components/ControllerComponent.html":{}}}],["activatedroute",{"_index":1046,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["activatedroutesnapshot",{"_index":771,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["active",{"_index":1709,"title":{},"body":{"components/ViewComponent.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["add",{"_index":664,"title":{},"body":{"components/ControllerComponent.html":{}}}],["addfilter",{"_index":532,"title":{},"body":{"components/ControllerComponent.html":{}}}],["addfilter():void",{"_index":603,"title":{},"body":{"components/ControllerComponent.html":{}}}],["addhighlight",{"_index":533,"title":{},"body":{"components/ControllerComponent.html":{}}}],["addselected",{"_index":1139,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["addselected(e",{"_index":1152,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["adjustcolumnminwidth",{"_index":1518,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["afterviewinit",{"_index":411,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{},"components/ViewComponent.html":{}}}],["aliases",{"_index":1840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliceblue",{"_index":1501,"title":{},"body":{"components/MenuComponent.html":{}}}],["align",{"_index":1419,"title":{},"body":{"components/LegendComponent.html":{},"components/PlotlyComponent.html":{}}}],["allcolumns",{"_index":1508,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["alldata",{"_index":1635,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["allow",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["allows",{"_index":727,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["allowsearchfilter",{"_index":1180,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["allrows",{"_index":1509,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["alpha",{"_index":1264,"title":{},"body":{"components/HeaderComponent.html":{}}}],["already",{"_index":750,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["anchor",{"_index":1460,"title":{},"body":{"components/MenuComponent.html":{}}}],["anchor_type",{"_index":1459,"title":{},"body":{"components/MenuComponent.html":{}}}],["angular",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/observers",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":1065,"title":{},"body":{"components/ExperimentComponent.html":{},"modules/IconsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["angular/compiler",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ControllerComponent.html":{},"injectables/EpistackService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/HeatmapComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CustomReuseStrategy.html":{},"components/ExperimentComponent.html":{},"interfaces/RouteStorageObject.html":{},"dependencies.html":{}}}],["angularjs",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["animal",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["annotate",{"_index":665,"title":{},"body":{"components/ControllerComponent.html":{}}}],["annotated",{"_index":597,"title":{},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{}}}],["annotation",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/ControllerComponent.html":{}}}],["another",{"_index":759,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["anr",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["anr.the",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["app.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["app.faang",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{}}}],["appcomponent",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{}}}],["applications",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["appmodule",{"_index":200,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":282,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}}}],["aquafaang",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["aquafaang(grant",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{}}}],["around",{"_index":765,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["array",{"_index":1389,"title":{},"body":{"components/LegendComponent.html":{}}}],["array.from(object.keys(this.fields",{"_index":1184,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["arraycontrol",{"_index":606,"title":{},"body":{"components/ControllerComponent.html":{}}}],["arraycontrol.push(newgroup",{"_index":611,"title":{},"body":{"components/ControllerComponent.html":{}}}],["arraycontrol.removeat(index",{"_index":629,"title":{},"body":{"components/ControllerComponent.html":{}}}],["article",{"_index":315,"title":{"interfaces/Article.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["artifacts",{"_index":1812,"title":{},"body":{"index.html":{}}}],["associations",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["assume",{"_index":744,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["atac",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["attach",{"_index":829,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["attachment",{"_index":820,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["auto",{"_index":694,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{}}}],["automatically",{"_index":1805,"title":{},"body":{"index.html":{}}}],["autosize",{"_index":1659,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["available",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DataService.html":{},"components/MetadataTableComponent.html":{},"modules.html":{}}}],["awards",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["b",{"_index":1413,"title":{},"body":{"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{}}}],["b=(rgb[2",{"_index":1410,"title":{},"body":{"components/LegendComponent.html":{}}}],["backendurl",{"_index":1106,"title":{},"body":{"injectables/ExperimentService.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":696,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["base",{"_index":763,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["base[baseproperty",{"_index":879,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["base[baseproperty].tostring",{"_index":888,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["baseline",{"_index":1421,"title":{},"body":{"components/LegendComponent.html":{}}}],["baseproperty",{"_index":873,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["baseurl",{"_index":896,"title":{},"body":{"injectables/DataService.html":{}}}],["basically",{"_index":810,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["before",{"_index":842,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["behavior",{"_index":1627,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["behaviorsubject",{"_index":954,"title":{},"body":{"injectables/DataService.html":{},"injectables/HeatmapInfoService.html":{}}}],["behaviorsubject(false",{"_index":1335,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["believe",{"_index":787,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["beta",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["betternames",{"_index":356,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["betternamespipe",{"_index":207,"title":{"pipes/BetterNamesPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/BetterNamesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["between",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["bi.download",{"_index":1095,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["blob",{"_index":984,"title":{},"body":{"injectables/DataService.html":{},"components/HeatmapComponent.html":{}}}],["body",{"_index":710,"title":{},"body":{"components/ControllerComponent.html":{},"components/MetadataTableComponent.html":{}}}],["bold",{"_index":1416,"title":{},"body":{"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["bool",{"_index":624,"title":{},"body":{"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{}}}],["boolean",{"_index":350,"title":{},"body":{"interfaces/Article.html":{},"components/CanvasComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/CarouselComponent.html":{},"components/EpistackComponent.html":{},"modules/IconsModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/CarouselComponent.html":{},"components/EpistackComponent.html":{},"dependencies.html":{}}}],["bootstrapiconsmodule",{"_index":1369,"title":{},"body":{"modules/IconsModule.html":{}}}],["bootstrapiconsmodule.pick(icons",{"_index":1379,"title":{},"body":{"modules/IconsModule.html":{}}}],["border",{"_index":672,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["bos_taurus",{"_index":364,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["both",{"_index":757,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["bottom",{"_index":682,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{}}}],["bound",{"_index":1467,"title":{},"body":{"components/MenuComponent.html":{}}}],["bound_id",{"_index":1466,"title":{},"body":{"components/MenuComponent.html":{}}}],["bovreg",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["break",{"_index":885,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"interfaces/RouteStorageObject.html":{}}}],["breed",{"_index":1551,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["browse",{"_index":1831,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/HeatmapComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["bs4",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":684,"title":{},"body":{"components/ControllerComponent.html":{}}}],["bugger",{"_index":737,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["build",{"_index":1811,"title":{},"body":{"index.html":{}}}],["build_url",{"_index":898,"title":{},"body":{"injectables/DataService.html":{}}}],["build_url(uri",{"_index":918,"title":{},"body":{"injectables/DataService.html":{}}}],["builder",{"_index":550,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["button.disabled",{"_index":683,"title":{},"body":{"components/ControllerComponent.html":{}}}],["c.name",{"_index":1606,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["call",{"_index":881,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["called",{"_index":790,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"components/MenuComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["canattach",{"_index":843,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["canvas",{"_index":377,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{}}}],["canvas'},{'name",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["canvas.component.css",{"_index":378,"title":{},"body":{"components/CanvasComponent.html":{}}}],["canvas.component.html",{"_index":379,"title":{},"body":{"components/CanvasComponent.html":{}}}],["canvas/canvas.component",{"_index":1294,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["canvascomponent",{"_index":147,"title":{"components/CanvasComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["canvasdir",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["canvasrenderingcontext2d",{"_index":405,"title":{},"body":{"components/CanvasComponent.html":{}}}],["capra_hircus",{"_index":366,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["card",{"_index":701,"title":{},"body":{"components/ControllerComponent.html":{}}}],["card[disabled=\"true",{"_index":708,"title":{},"body":{"components/ControllerComponent.html":{}}}],["carousel",{"_index":473,"title":{},"body":{"components/CarouselComponent.html":{}}}],["carousel'},{'name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["carousel.component.css",{"_index":474,"title":{},"body":{"components/CarouselComponent.html":{}}}],["carousel.component.html",{"_index":475,"title":{},"body":{"components/CarouselComponent.html":{}}}],["carousel/carousel.component",{"_index":1012,"title":{},"body":{"components/EpistackComponent.html":{}}}],["carouselcomponent",{"_index":149,"title":{"components/CarouselComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":363,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafePipe.html":{}}}],["cast",{"_index":518,"title":{},"body":{"classes/CastTextUrl.html":{}}}],["cast(object",{"_index":339,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["casttexturl",{"_index":333,"title":{"classes/CastTextUrl.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["catch",{"_index":647,"title":{},"body":{"components/ControllerComponent.html":{}}}],["catcherror",{"_index":1116,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["cell",{"_index":1462,"title":{},"body":{"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{}}}],["celltemplate",{"_index":1510,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["celltype",{"_index":1461,"title":{},"body":{"components/MenuComponent.html":{}}}],["center",{"_index":1675,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["change",{"_index":1807,"title":{},"body":{"index.html":{}}}],["changeannotation",{"_index":534,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changeannotation(e",{"_index":553,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changed",{"_index":1318,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["changedata",{"_index":1636,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["changedata(data",{"_index":1640,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["changeexperiment",{"_index":535,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changeexperiment(e",{"_index":555,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changeplotlybool",{"_index":536,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changeplotlybool(e",{"_index":557,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changesize",{"_index":537,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changesize(e",{"_index":559,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changespecies",{"_index":538,"title":{},"body":{"components/ControllerComponent.html":{}}}],["changespecies(e",{"_index":561,"title":{},"body":{"components/ControllerComponent.html":{}}}],["check",{"_index":797,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{}}}],["checked",{"_index":1609,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["chevrondown",{"_index":1372,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["chevronup",{"_index":1371,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["chicken",{"_index":371,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["chip",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["choose",{"_index":660,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["class",{"_index":33,"title":{"classes/CastTextUrl.html":{},"classes/CustomReuseStrategy.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["classes",{"_index":517,"title":{},"body":{"classes/CastTextUrl.html":{},"classes/CustomReuseStrategy.html":{},"overview.html":{}}}],["cli",{"_index":1795,"title":{},"body":{"index.html":{}}}],["closedropdownonselection",{"_index":1181,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["cluster_appmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["codethe",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{}}}],["coercive",{"_index":755,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["col",{"_index":1531,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["col.name",{"_index":1607,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["color",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["colorpickermodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["cols",{"_index":1511,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["column",{"_index":1539,"title":{},"body":{"components/MetadataTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["column.name",{"_index":1618,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["columns",{"_index":1602,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["columns:2",{"_index":1665,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["commonmodule",{"_index":1368,"title":{},"body":{"modules/IconsModule.html":{}}}],["compare",{"_index":734,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare.hasownproperty(baseproperty",{"_index":877,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare[baseproperty",{"_index":883,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compare[baseproperty].tostring",{"_index":889,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["compareobjects",{"_index":716,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["compareobjects(base",{"_index":733,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["comparison",{"_index":756,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["comparrison",{"_index":875,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/ViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"overview.html":{}}}],["config",{"_index":486,"title":{},"body":{"components/CarouselComponent.html":{},"components/PlotlyComponent.html":{}}}],["config.interval",{"_index":500,"title":{},"body":{"components/CarouselComponent.html":{}}}],["config.shownavigationarrows",{"_index":498,"title":{},"body":{"components/CarouselComponent.html":{}}}],["config.shownavigationindicators",{"_index":499,"title":{},"body":{"components/CarouselComponent.html":{}}}],["console.error(err",{"_index":1578,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log",{"_index":837,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"adding",{"_index":604,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(\"adjusting",{"_index":1611,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log(\"annotated",{"_index":1653,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["console.log(\"canvas",{"_index":421,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(\"changing",{"_index":630,"title":{},"body":{"components/ControllerComponent.html":{},"components/HighlightComponent.html":{}}}],["console.log(\"currently",{"_index":1217,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["console.log(\"deciding",{"_index":862,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"deselected",{"_index":1220,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["console.log(\"detaching",{"_index":835,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"experiment",{"_index":634,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(\"fetching",{"_index":969,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["console.log(\"files",{"_index":1080,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["console.log(\"folders",{"_index":1074,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["console.log(\"form",{"_index":1482,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log(\"getmetaobs",{"_index":1486,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log(\"getting",{"_index":1310,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["console.log(\"getvalues",{"_index":1490,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log(\"heatmap",{"_index":1317,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["console.log(\"image",{"_index":443,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(\"left",{"_index":1027,"title":{},"body":{"injectables/EpistackService.html":{}}}],["console.log(\"loading",{"_index":441,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(\"metadata",{"_index":1601,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log(\"param",{"_index":852,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"plotly",{"_index":1661,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["console.log(\"query",{"_index":855,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"reformatted",{"_index":1205,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["console.log(\"removing",{"_index":627,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(\"retrieving",{"_index":866,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(\"right",{"_index":1031,"title":{},"body":{"injectables/EpistackService.html":{}}}],["console.log(\"selected",{"_index":1193,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["console.log(\"source",{"_index":445,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(\"species",{"_index":641,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(\"submitting",{"_index":657,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["console.log(\"unformatted",{"_index":1199,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["console.log(\"updating",{"_index":1575,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log(`fetching",{"_index":996,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(col.name",{"_index":1608,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log(data",{"_index":991,"title":{},"body":{"injectables/DataService.html":{},"components/PlotlyComponent.html":{}}}],["console.log(e",{"_index":1210,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["console.log(e.target.checked",{"_index":653,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(error",{"_index":1307,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["console.log(formdata[\"annotated",{"_index":1654,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["console.log(legend",{"_index":1401,"title":{},"body":{"components/LegendComponent.html":{}}}],["console.log(meta",{"_index":622,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(newform",{"_index":599,"title":{},"body":{"components/ControllerComponent.html":{}}}],["console.log(side",{"_index":1024,"title":{},"body":{"injectables/EpistackService.html":{}}}],["console.log(this.alldata",{"_index":1662,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["console.log(this.canvas",{"_index":457,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(this.compareobjects(route.params",{"_index":853,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(this.compareobjects(route.queryparams",{"_index":856,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["console.log(this.datacols",{"_index":1598,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["console.log(this.fields",{"_index":1191,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["console.log(this.formgroup",{"_index":1483,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log(this.formgroup.value",{"_index":616,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["console.log(this.img",{"_index":448,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(this.img.height",{"_index":450,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(this.img.src",{"_index":449,"title":{},"body":{"components/CanvasComponent.html":{}}}],["console.log(this.legend",{"_index":1406,"title":{},"body":{"components/LegendComponent.html":{}}}],["console.log(this.selectedvalues",{"_index":1214,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["console.log(this.side",{"_index":501,"title":{},"body":{"components/CarouselComponent.html":{}}}],["console.log(value",{"_index":1688,"title":{},"body":{"pipes/SafeHTMLPipe.html":{}}}],["consortia",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["const",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"components/ViewComponent.html":{}}}],["constructor(builder",{"_index":545,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["constructor(config",{"_index":482,"title":{},"body":{"components/CarouselComponent.html":{}}}],["constructor(cookieservice",{"_index":1682,"title":{},"body":{"injectables/RequestOptionsService.html":{}}}],["constructor(dataservice",{"_index":1146,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["constructor(elementref",{"_index":1359,"title":{},"body":{"directives/HostDirective.html":{}}}],["constructor(experimentservice",{"_index":1044,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["constructor(heatmapinfoservice",{"_index":387,"title":{},"body":{"components/CanvasComponent.html":{}}}],["constructor(http",{"_index":914,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["constructor(object",{"_index":336,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["constructor(private",{"_index":420,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"pipes/SafeHTMLPipe.html":{}}}],["constructor(protected",{"_index":1697,"title":{},"body":{"pipes/SafePipe.html":{}}}],["constructs",{"_index":816,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["container",{"_index":691,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{}}}],["container.inner",{"_index":1630,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["container.outer",{"_index":1625,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["content",{"_index":351,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["context",{"_index":380,"title":{},"body":{"components/CanvasComponent.html":{}}}],["control",{"_index":690,"title":{},"body":{"components/ControllerComponent.html":{}}}],["controller",{"_index":523,"title":{},"body":{"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"components/MainComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["controller'},{'name",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["controller.component.css",{"_index":524,"title":{},"body":{"components/ControllerComponent.html":{}}}],["controller.component.html",{"_index":525,"title":{},"body":{"components/ControllerComponent.html":{}}}],["controller/controller.component",{"_index":1433,"title":{},"body":{"components/MainComponent.html":{}}}],["controllercomponent",{"_index":151,"title":{"components/ControllerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cookie",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{},"injectables/RequestOptionsService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{},"injectables/RequestOptionsService.html":{}}}],["core",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["correlation",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["count",{"_index":1128,"title":{},"body":{"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/MenuComponent.html":{}}}],["coverage",{"_index":1713,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":365,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["cur",{"_index":1573,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["cur[key",{"_index":1572,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["curr",{"_index":802,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["curr.routeconfig",{"_index":869,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["current",{"_index":804,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["currently",{"_index":799,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["cursor",{"_index":1100,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["custom_elements_schema",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["customreusestrategy",{"_index":285,"title":{"classes/CustomReuseStrategy.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["d.key",{"_index":1414,"title":{},"body":{"components/LegendComponent.html":{}}}],["data",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"components/HeatmapComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["data.faang.org",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["data.service",{"_index":588,"title":{},"body":{"components/ControllerComponent.html":{},"components/FilterComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["data?:object",{"_index":979,"title":{},"body":{"injectables/DataService.html":{}}}],["data[\"columns",{"_index":1582,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["data[\"data",{"_index":1583,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["data['species'].replace",{"_index":988,"title":{},"body":{"injectables/DataService.html":{}}}],["data[0",{"_index":1657,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["datacols",{"_index":1512,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["datajson",{"_index":343,"title":{"interfaces/DataJSON.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["dataservice",{"_index":547,"title":{"injectables/DataService.html":{}},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["datasets",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["datatable",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/MetadataTableComponent.html":{},"dependencies.html":{}}}],["datatable\"].map((obj",{"_index":1585,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["datatablecomponent",{"_index":1564,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["datatables",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["datatables.net",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["datathis",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{}}}],["dataurl",{"_index":1107,"title":{},"body":{"injectables/ExperimentService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1089,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["dcedf5",{"_index":677,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{}}}],["decides",{"_index":786,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/IconsModule.html":{}}}],["decorators",{"_index":400,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{},"directives/HostDirective.html":{},"components/MainComponent.html":{},"components/MetadataTableComponent.html":{}}}],["deep",{"_index":700,"title":{},"body":{"components/ControllerComponent.html":{}}}],["default",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["default_cols",{"_index":1513,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["default_fields",{"_index":1439,"title":{},"body":{"components/MenuComponent.html":{}}}],["default_minwidth",{"_index":1514,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["delete",{"_index":689,"title":{},"body":{"components/ControllerComponent.html":{}}}],["delfromarray",{"_index":539,"title":{},"body":{"components/ControllerComponent.html":{}}}],["delfromarray(name",{"_index":563,"title":{},"body":{"components/ControllerComponent.html":{}}}],["dependencies",{"_index":202,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1057,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["depth*10",{"_index":1083,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["description",{"_index":766,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["detach",{"_index":834,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["detachedroutehandle",{"_index":776,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["determine",{"_index":874,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["determines",{"_index":781,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["determining",{"_index":828,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["dev",{"_index":1802,"title":{},"body":{"index.html":{}}}],["development",{"_index":1798,"title":{},"body":{"index.html":{}}}],["directive",{"_index":117,"title":{"directives/HostDirective.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive({selector",{"_index":1365,"title":{},"body":{"directives/HostDirective.html":{}}}],["directives",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1810,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1813,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1784,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["dist/plotly.js",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["div",{"_index":1434,"title":{},"body":{"components/MainComponent.html":{}}}],["div.datatable",{"_index":1624,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["div.disabledpanel",{"_index":695,"title":{},"body":{"components/ControllerComponent.html":{}}}],["div.nav::after",{"_index":1266,"title":{},"body":{"components/HeaderComponent.html":{}}}],["div.plotly",{"_index":1677,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["div.selected",{"_index":1622,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["div.step1",{"_index":1500,"title":{},"body":{"components/MenuComponent.html":{}}}],["div.step2",{"_index":1502,"title":{},"body":{"components/MenuComponent.html":{}}}],["dna",{"_index":1465,"title":{},"body":{"components/MenuComponent.html":{}}}],["documentation",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["domain",{"_index":1669,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["domsanitizer",{"_index":1276,"title":{},"body":{"components/HeatmapComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["done",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["download",{"_index":347,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"modules/IconsModule.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"miscellaneous/variables.html":{}}}],["dragdropmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["draw_img",{"_index":383,"title":{},"body":{"components/CanvasComponent.html":{}}}],["drawing",{"_index":447,"title":{},"body":{"components/CanvasComponent.html":{}}}],["drop",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["dynamic",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":393,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["e.pagex",{"_index":428,"title":{},"body":{"components/CanvasComponent.html":{}}}],["e.pagey",{"_index":431,"title":{},"body":{"components/CanvasComponent.html":{}}}],["e.target.checked",{"_index":656,"title":{},"body":{"components/ControllerComponent.html":{}}}],["e.target.value",{"_index":632,"title":{},"body":{"components/ControllerComponent.html":{}}}],["e2e",{"_index":1824,"title":{},"body":{"index.html":{}}}],["e9ecef",{"_index":697,"title":{},"body":{"components/ControllerComponent.html":{}}}],["each",{"_index":743,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["element",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["element.getelementsbytagname(\"datatable",{"_index":1616,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["elementref",{"_index":399,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{},"directives/HostDirective.html":{},"components/MetadataTableComponent.html":{},"components/ViewComponent.html":{}}}],["embl",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["enablecheckall",{"_index":1182,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["end",{"_index":1823,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":955,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurl",{"_index":950,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["environment.dataurl",{"_index":1113,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["environments/environment",{"_index":956,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["epigenetic",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["epigenomic",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["epistack",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{}}}],["epistack'},{'name",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["epistack.component.css",{"_index":1007,"title":{},"body":{"components/EpistackComponent.html":{}}}],["epistack.component.html",{"_index":1008,"title":{},"body":{"components/EpistackComponent.html":{}}}],["epistack.service",{"_index":497,"title":{},"body":{"components/CarouselComponent.html":{},"components/MenuComponent.html":{}}}],["epistack/carousel/carousel.component",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["epistack/epistack.component",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["epistack/menu/menu.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["epistackcomponent",{"_index":153,"title":{"components/EpistackComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["epistackservice",{"_index":484,"title":{"injectables/EpistackService.html":{}},"body":{"components/CarouselComponent.html":{},"injectables/EpistackService.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["equal",{"_index":742,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["equus_caballus",{"_index":368,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["err",{"_index":1577,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["error",{"_index":648,"title":{},"body":{"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{}}}],["error(\"invalid",{"_index":967,"title":{},"body":{"injectables/DataService.html":{}}}],["error(`invalid",{"_index":1704,"title":{},"body":{"pipes/SafePipe.html":{}}}],["event",{"_index":493,"title":{},"body":{"components/CarouselComponent.html":{},"components/MetadataTableComponent.html":{}}}],["event.current",{"_index":513,"title":{},"body":{"components/CarouselComponent.html":{}}}],["events",{"_index":470,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{}}}],["exclude",{"_index":1567,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["exclude.includes(key",{"_index":1570,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["execute",{"_index":1820,"title":{},"body":{"index.html":{}}}],["exists",{"_index":774,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["exp",{"_index":662,"title":{},"body":{"components/ControllerComponent.html":{}}}],["expanded",{"_index":349,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["experiment",{"_index":593,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/MenuComponent.html":{}}}],["experiment'},{'name",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["experiment.component.css",{"_index":1033,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["experiment.component.html",{"_index":1034,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["experiment.service",{"_index":1066,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["experiment/:id",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["experiment/list",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["experimentcomponent",{"_index":155,"title":{"components/ExperimentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["experimentisset",{"_index":526,"title":{},"body":{"components/ControllerComponent.html":{}}}],["experiments",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["experiments/experiment/experiment.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["experiments/experiments",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["experimentservice",{"_index":1045,"title":{"injectables/ExperimentService.html":{}},"body":{"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"coverage.html":{}}}],["experimentslistcomponent",{"_index":157,"title":{"components/ExperimentsListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["exploration",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{}}}],["exports",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/IconsModule.html":{}}}],["expression",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["extends",{"_index":319,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"components/HighlightComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["f.key",{"_index":1498,"title":{},"body":{"components/MenuComponent.html":{}}}],["f.value",{"_index":1499,"title":{},"body":{"components/MenuComponent.html":{}}}],["f.value[\"name",{"_index":666,"title":{},"body":{"components/ControllerComponent.html":{}}}],["f.value['count",{"_index":667,"title":{},"body":{"components/ControllerComponent.html":{}}}],["f.value[\\'count",{"_index":712,"title":{},"body":{"components/ControllerComponent.html":{}}}],["faang",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["faang)is",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{}}}],["faangfunctionnal",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{}}}],["false",{"_index":403,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/RouteStorageObject.html":{},"miscellaneous/variables.html":{}}}],["farm",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["farmanimal",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{}}}],["fhl",{"_index":671,"title":{},"body":{"components/ControllerComponent.html":{}}}],["field",{"_index":609,"title":{},"body":{"components/ControllerComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["field.key",{"_index":1497,"title":{},"body":{"components/MenuComponent.html":{}}}],["field.value",{"_index":1496,"title":{},"body":{"components/MenuComponent.html":{}}}],["fielddropdownsettings",{"_index":1132,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["fieldmap",{"_index":1133,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["fields",{"_index":527,"title":{"interfaces/Fields.html":{}},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["fields[field",{"_index":1491,"title":{},"body":{"components/MenuComponent.html":{}}}],["fields[field])).subscribe((values",{"_index":1489,"title":{},"body":{"components/MenuComponent.html":{}}}],["fieldvalues",{"_index":1126,"title":{"interfaces/FieldValues.html":{}},"body":{"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["file",{"_index":9,"title":{"interfaces/File.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["file.mtime",{"_index":1088,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["file.name",{"_index":1086,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["file.size",{"_index":1087,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["file_list",{"_index":1035,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["filename",{"_index":328,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["filereader",{"_index":1312,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["files",{"_index":1076,"title":{},"body":{"components/ExperimentComponent.html":{},"index.html":{}}}],["filesize",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/ExperimentComponent.html":{},"dependencies.html":{}}}],["filter",{"_index":605,"title":{},"body":{"components/ControllerComponent.html":{},"components/FilterComponent.html":{},"components/MenuComponent.html":{}}}],["filter'},{'name",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["filter(key",{"_index":1569,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["filter.component.css",{"_index":1130,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":1131,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":587,"title":{},"body":{"components/ControllerComponent.html":{}}}],["filter_highlight",{"_index":899,"title":{},"body":{"injectables/DataService.html":{}}}],["filter_highlight(data",{"_index":922,"title":{},"body":{"injectables/DataService.html":{}}}],["filtercomponent",{"_index":160,"title":{"components/FilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filters",{"_index":594,"title":{},"body":{"components/ControllerComponent.html":{}}}],["filtertexturl",{"_index":1519,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["filtertexturl(obj",{"_index":1525,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["finds",{"_index":738,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["fire",{"_index":788,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["flag",{"_index":1815,"title":{},"body":{"index.html":{}}}],["flexlayoutmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["folder",{"_index":348,"title":{"interfaces/Folder.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["folder.name",{"_index":1085,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["folder2",{"_index":1376,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["folder2open",{"_index":1377,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["folders",{"_index":1036,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["folders.concat(this.getfolders(files",{"_index":1081,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["folders.push({\"name",{"_index":1078,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["font",{"_index":1101,"title":{},"body":{"components/ExperimentComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["fontawesome",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["forgemia.inra.fr/laura.morel/vizfada",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["form",{"_index":699,"title":{},"body":{"components/ControllerComponent.html":{}}}],["formarray",{"_index":584,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["formatted_fields",{"_index":1134,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["formatted_values",{"_index":1135,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["formatvalues",{"_index":1140,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["formbuilder",{"_index":546,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["formcontrol",{"_index":585,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["formcontrol(`(${s",{"_index":650,"title":{},"body":{"components/ControllerComponent.html":{}}}],["formdata",{"_index":1270,"title":{},"body":{"components/HeatmapComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["formdata).subscribe",{"_index":1580,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["formdata).subscribe(data",{"_index":1656,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["formfilters",{"_index":543,"title":{},"body":{"components/ControllerComponent.html":{}}}],["formgroup",{"_index":528,"title":{},"body":{"components/ControllerComponent.html":{},"injectables/EpistackService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["formhighlights",{"_index":544,"title":{},"body":{"components/ControllerComponent.html":{}}}],["formsmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":1211,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["fromevent",{"_index":415,"title":{},"body":{"components/CanvasComponent.html":{}}}],["fromevent(this.canvas.nativeelement",{"_index":463,"title":{},"body":{"components/CanvasComponent.html":{}}}],["function",{"_index":747,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["function.tostring",{"_index":887,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["functionnal",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["functions",{"_index":886,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["funded",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["funding",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["funnel",{"_index":687,"title":{},"body":{"components/ControllerComponent.html":{},"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["funnelfill",{"_index":1374,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":1826,"title":{},"body":{"index.html":{}}}],["future",{"_index":806,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["future.routeconfig",{"_index":868,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["g",{"_index":1412,"title":{},"body":{"components/LegendComponent.html":{}}}],["g=(rgb[1",{"_index":1409,"title":{},"body":{"components/LegendComponent.html":{}}}],["gallus_gallus",{"_index":370,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["gathering",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["gene",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["generate",{"_index":1809,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1794,"title":{},"body":{"index.html":{}}}],["genome",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{}}}],["get(uri",{"_index":1001,"title":{},"body":{"injectables/DataService.html":{}}}],["get.pipe",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["get_annotated_plotly",{"_index":900,"title":{},"body":{"injectables/DataService.html":{}}}],["get_annotated_plotly(data",{"_index":924,"title":{},"body":{"injectables/DataService.html":{}}}],["get_blob",{"_index":901,"title":{},"body":{"injectables/DataService.html":{}}}],["get_blob(type",{"_index":926,"title":{},"body":{"injectables/DataService.html":{}}}],["get_epistack(type",{"_index":1003,"title":{},"body":{"injectables/DataService.html":{}}}],["get_epistack_img(data",{"_index":1004,"title":{},"body":{"injectables/DataService.html":{}}}],["get_epistack_meta",{"_index":902,"title":{},"body":{"injectables/DataService.html":{}}}],["get_epistack_meta(data",{"_index":928,"title":{},"body":{"injectables/DataService.html":{}}}],["get_experiment",{"_index":1108,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["get_experiment(id",{"_index":1110,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["get_experiments",{"_index":903,"title":{},"body":{"injectables/DataService.html":{}}}],["get_experiments(species",{"_index":930,"title":{},"body":{"injectables/DataService.html":{}}}],["get_fields",{"_index":904,"title":{},"body":{"injectables/DataService.html":{}}}],["get_fields(data",{"_index":932,"title":{},"body":{"injectables/DataService.html":{}}}],["get_json",{"_index":905,"title":{},"body":{"injectables/DataService.html":{}}}],["get_json(type",{"_index":934,"title":{},"body":{"injectables/DataService.html":{}}}],["get_legend",{"_index":906,"title":{},"body":{"injectables/DataService.html":{},"components/LegendComponent.html":{}}}],["get_list",{"_index":907,"title":{},"body":{"injectables/DataService.html":{}}}],["get_list(type",{"_index":937,"title":{},"body":{"injectables/DataService.html":{}}}],["get_meta",{"_index":908,"title":{},"body":{"injectables/DataService.html":{}}}],["get_meta(type",{"_index":939,"title":{},"body":{"injectables/DataService.html":{}}}],["get_metadata",{"_index":909,"title":{},"body":{"injectables/DataService.html":{},"components/MetadataTableComponent.html":{}}}],["get_metadata(data",{"_index":941,"title":{},"body":{"injectables/DataService.html":{}}}],["get_metadata(formdata",{"_index":1527,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["get_pixel_color",{"_index":384,"title":{},"body":{"components/CanvasComponent.html":{}}}],["get_pixel_color(e",{"_index":391,"title":{},"body":{"components/CanvasComponent.html":{}}}],["get_plotly",{"_index":910,"title":{},"body":{"injectables/DataService.html":{}}}],["get_plotly(data",{"_index":943,"title":{},"body":{"injectables/DataService.html":{}}}],["get_size",{"_index":911,"title":{},"body":{"injectables/DataService.html":{}}}],["get_size(data",{"_index":945,"title":{},"body":{"injectables/DataService.html":{}}}],["get_species",{"_index":912,"title":{},"body":{"injectables/DataService.html":{}}}],["getexp",{"_index":478,"title":{},"body":{"components/CarouselComponent.html":{}}}],["getexp(source",{"_index":488,"title":{},"body":{"components/CarouselComponent.html":{}}}],["getfolders",{"_index":1039,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["getfolders(tree",{"_index":1050,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["getformfilters",{"_index":579,"title":{},"body":{"components/ControllerComponent.html":{}}}],["getformhighlights",{"_index":581,"title":{},"body":{"components/ControllerComponent.html":{}}}],["getimgs",{"_index":1441,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlegend",{"_index":1637,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["getmetadata",{"_index":540,"title":{},"body":{"components/ControllerComponent.html":{}}}],["getmetaobs",{"_index":1442,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpipe",{"_index":208,"title":{"pipes/GetPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GetPipe.html":{},"coverage.html":{},"overview.html":{}}}],["getplotly",{"_index":1638,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["getplotly(formdata",{"_index":1643,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["getsize",{"_index":623,"title":{},"body":{"components/ControllerComponent.html":{}}}],["getting",{"_index":1791,"title":{"index.html":{}},"body":{}}],["getvalues",{"_index":1141,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["getvalues(e",{"_index":1155,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["getvalues(field",{"_index":1450,"title":{},"body":{"components/MenuComponent.html":{}}}],["github.com/lauramble/chipseq_vizfada",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["github.com/lauramble/chipseq_vizfada.fundingvizfada",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{}}}],["github.com/lauramble/rnaseq",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["gitlab",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{}}}],["go",{"_index":1828,"title":{},"body":{"index.html":{}}}],["goat",{"_index":367,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["going",{"_index":807,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["grant",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["graph",{"_index":668,"title":{},"body":{"components/ControllerComponent.html":{},"modules.html":{}}}],["grid",{"_index":1663,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["h2020",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["handle",{"_index":814,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["header",{"_index":702,"title":{},"body":{"components/ControllerComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["header.card",{"_index":706,"title":{},"body":{"components/ControllerComponent.html":{}}}],["header.component.css",{"_index":1258,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1259,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.disabledpanel",{"_index":707,"title":{},"body":{"components/ControllerComponent.html":{}}}],["header/header.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":162,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headertemplate",{"_index":1515,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["health",{"_index":1552,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["heatmap",{"_index":418,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/LegendComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["heatmap'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["heatmap.component.css",{"_index":1268,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["heatmap.component.html",{"_index":1269,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["heatmap/heatmap.component",{"_index":1712,"title":{},"body":{"components/ViewComponent.html":{}}}],["heatmapcomponent",{"_index":164,"title":{"components/HeatmapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["heatmapinfoservice",{"_index":388,"title":{"injectables/HeatmapInfoService.html":{}},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/LegendComponent.html":{},"components/PlotlyComponent.html":{},"coverage.html":{}}}],["heatmaps",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["heatmapsallow",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{}}}],["height",{"_index":692,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["help",{"_index":1262,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["here",{"_index":796,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["hide",{"_index":381,"title":{},"body":{"components/CanvasComponent.html":{}}}],["highlight",{"_index":613,"title":{},"body":{"components/ControllerComponent.html":{},"components/HighlightComponent.html":{}}}],["highlight'},{'name",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["highlight.component.css",{"_index":1342,"title":{},"body":{"components/HighlightComponent.html":{}}}],["highlight.component.html",{"_index":1343,"title":{},"body":{"components/HighlightComponent.html":{}}}],["highlightcomponent",{"_index":166,"title":{"components/HighlightComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["highlights",{"_index":596,"title":{},"body":{"components/ControllerComponent.html":{}}}],["hlfilter",{"_index":1235,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["hlfilter'},{'name",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["hlfiltercomponent",{"_index":168,"title":{"components/HLFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["hlfiltercomponent:105",{"_index":1160,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:14",{"_index":1150,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:15",{"_index":1149,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:17",{"_index":1168,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:18",{"_index":1169,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:19",{"_index":1167,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:21",{"_index":1151,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:23",{"_index":1172,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:24",{"_index":1170,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:25",{"_index":1174,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:27",{"_index":1171,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:29",{"_index":1166,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:30",{"_index":1173,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:56",{"_index":1156,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:64",{"_index":1154,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:78",{"_index":1153,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:83",{"_index":1164,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:91",{"_index":1162,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["hlfiltercomponent:98",{"_index":1158,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["horse",{"_index":369,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["hostbinding",{"_index":1364,"title":{},"body":{"directives/HostDirective.html":{}}}],["hostbinding('data",{"_index":1366,"title":{},"body":{"directives/HostDirective.html":{}}}],["hostbinding('title",{"_index":1362,"title":{},"body":{"directives/HostDirective.html":{}}}],["hostbindings",{"_index":1357,"title":{},"body":{"directives/HostDirective.html":{}}}],["hostdirective",{"_index":183,"title":{"directives/HostDirective.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["hostlistener",{"_index":1363,"title":{},"body":{"directives/HostDirective.html":{}}}],["hoverlabel",{"_index":1674,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["html",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["html.pipe",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["html.pipe.ts",{"_index":1685,"title":{},"body":{"pipes/SafeHTMLPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:11",{"_index":1687,"title":{},"body":{"pipes/SafeHTMLPipe.html":{}}}],["htmlelement",{"_index":1614,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["htmlimageelement",{"_index":407,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{}}}],["htmls",{"_index":1037,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["http",{"_index":917,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["http://127.0.0.1:8080",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://127.0.0.1:90",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://45.88.80.133/data",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://45.88.80.133/django",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1804,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":915,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["httpclientmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1114,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["httpparams",{"_index":953,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["i=this.selectedvalues.indexof(e",{"_index":1354,"title":{},"body":{"components/HighlightComponent.html":{}}}],["icon",{"_index":686,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{}}}],["icons",{"_index":1370,"title":{},"body":{"modules/IconsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["icons/icons",{"_index":1378,"title":{},"body":{"modules/IconsModule.html":{}}}],["icons/icons.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["iconsmodule",{"_index":211,"title":{"modules/IconsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IconsModule.html":{},"modules.html":{},"overview.html":{}}}],["id",{"_index":1043,"title":{},"body":{"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/MenuComponent.html":{}}}],["idea",{"_index":795,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["identifier",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["idropdownsettings",{"_index":1165,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["id}}files",{"_index":1104,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["iframe",{"_index":1091,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["image",{"_index":409,"title":{},"body":{"components/CanvasComponent.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{}}}],["images",{"_index":476,"title":{},"body":{"components/CarouselComponent.html":{},"injectables/EpistackService.html":{},"components/MenuComponent.html":{}}}],["img",{"_index":382,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/HeatmapComponent.html":{}}}],["img.src",{"_index":1309,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["img_loaded",{"_index":1325,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["img_loaded(bool",{"_index":1329,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["imgdata",{"_index":433,"title":{},"body":{"components/CanvasComponent.html":{}}}],["imgdata.data",{"_index":437,"title":{},"body":{"components/CanvasComponent.html":{}}}],["imgfromblob",{"_index":1273,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["imgfromblob(img",{"_index":1278,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["imgloaded",{"_index":1323,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["imgloading",{"_index":1271,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["imgs",{"_index":1019,"title":{},"body":{"injectables/EpistackService.html":{}}}],["imgs.length",{"_index":1029,"title":{},"body":{"injectables/EpistackService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["important",{"_index":760,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["imports",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IconsModule.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexa",{"_index":1594,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["indexb",{"_index":1596,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["indexed",{"_index":725,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["indicating",{"_index":767,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{}}}],["info.service",{"_index":419,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{},"components/LegendComponent.html":{},"components/PlotlyComponent.html":{}}}],["info.service.ts",{"_index":1322,"title":{},"body":{"injectables/HeatmapInfoService.html":{},"coverage.html":{}}}],["info.service.ts:10",{"_index":1337,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["info.service.ts:11",{"_index":1336,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["info.service.ts:12",{"_index":1328,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["info.service.ts:16",{"_index":1332,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["info.service.ts:20",{"_index":1330,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["info.service.ts:24",{"_index":1334,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["inherit",{"_index":1097,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["inherited",{"_index":1148,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["init",{"_index":422,"title":{},"body":{"components/CanvasComponent.html":{}}}],["initiated",{"_index":503,"title":{},"body":{"components/CarouselComponent.html":{}}}],["injectable",{"_index":893,"title":{"injectables/DataService.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"injectables/RequestOptionsService.html":{}},"body":{"injectables/DataService.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"injectables/RequestOptionsService.html":{},"coverage.html":{}}}],["injectables",{"_index":894,"title":{},"body":{"injectables/DataService.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"injectables/RequestOptionsService.html":{},"overview.html":{}}}],["input",{"_index":413,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["input_id",{"_index":1464,"title":{},"body":{"components/MenuComponent.html":{}}}],["inputs",{"_index":480,"title":{},"body":{"components/CarouselComponent.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["inspection",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["instance",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["instance:forgemia.inra.fr/laura.morel/vizfada",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{}}}],["intends",{"_index":811,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["interface",{"_index":314,"title":{"interfaces/Article.html":{},"interfaces/DataJSON.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["interfaces",{"_index":316,"title":{},"body":{"interfaces/Article.html":{},"interfaces/DataJSON.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"overview.html":{}}}],["investigate",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["investigatethe",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{}}}],["ischecked",{"_index":1520,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["ischecked(col",{"_index":1529,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["isfolder",{"_index":1040,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["isfolder(file",{"_index":1052,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["isselected",{"_index":1443,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(field",{"_index":1452,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstring",{"_index":1521,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["isstring(val",{"_index":1532,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["italic",{"_index":1103,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["item",{"_index":1418,"title":{},"body":{"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{}}}],["item.text",{"_index":1619,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["item[key",{"_index":1620,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["items",{"_index":1420,"title":{},"body":{"components/LegendComponent.html":{}}}],["jounal",{"_index":321,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["jquery",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":749,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["json",{"_index":972,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["karma",{"_index":1822,"title":{},"body":{"index.html":{}}}],["key",{"_index":831,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"pipes/GetPipe.html":{},"components/MetadataTableComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["keys",{"_index":340,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["know",{"_index":794,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["label",{"_index":1222,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{},"components/MetadataTableComponent.html":{}}}],["later",{"_index":819,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["layout",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/PlotlyComponent.html":{},"dependencies.html":{}}}],["leave",{"_index":812,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["left",{"_index":505,"title":{},"body":{"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"components/LegendComponent.html":{}}}],["left:5px",{"_index":1621,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["leftimages",{"_index":1014,"title":{},"body":{"injectables/EpistackService.html":{}}}],["leg",{"_index":1403,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["legend'},{'name",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["legend.component.css",{"_index":1381,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1382,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.component",{"_index":1293,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["legendcomponent",{"_index":170,"title":{"components/LegendComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["levels",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["levels.correlation",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{}}}],["list",{"_index":978,"title":{},"body":{"injectables/DataService.html":{},"components/ExperimentsListComponent.html":{}}}],["list'},{'name",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["list.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":1121,"title":{},"body":{"components/ExperimentsListComponent.html":{}}}],["list.component.html",{"_index":1122,"title":{},"body":{"components/ExperimentsListComponent.html":{}}}],["list.component.ts",{"_index":1120,"title":{},"body":{"components/ExperimentsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":1124,"title":{},"body":{"components/ExperimentsListComponent.html":{}}}],["list.component.ts:8",{"_index":1123,"title":{},"body":{"components/ExperimentsListComponent.html":{}}}],["list/experiments",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/ExperimentsListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":722,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["loaded",{"_index":444,"title":{},"body":{"components/CanvasComponent.html":{}}}],["loading",{"_index":1320,"title":{},"body":{"components/HeatmapComponent.html":{},"components/MetadataTableComponent.html":{}}}],["locally",{"_index":773,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["location",{"_index":1047,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["loop",{"_index":871,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["loops",{"_index":892,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["main",{"_index":1424,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["main.component.css",{"_index":1425,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.html",{"_index":1426,"title":{},"body":{"components/MainComponent.html":{}}}],["main/controller/controller.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["main/controller/filter/filter.component",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["main/controller/highlight/highlight.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["main/data.service",{"_index":1256,"title":{},"body":{"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["main/main.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["main/metadata",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["main/safe",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["main/view/heatmap/canvas/canvas.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["main/view/heatmap/heatmap.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["main/view/heatmap/legend/legend.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["main/view/heatmap/plotly/plotly.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["main/view/view.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["maincomponent",{"_index":172,"title":{"components/MainComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":1115,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["margin",{"_index":681,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{}}}],["mark",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["match",{"_index":847,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["matching",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrices",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["matricesepigenetic",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{}}}],["matter",{"_index":793,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["max",{"_index":514,"title":{},"body":{"components/CarouselComponent.html":{},"components/MetadataTableComponent.html":{}}}],["menu",{"_index":1436,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["menu.component.css",{"_index":1437,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":1438,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":1011,"title":{},"body":{"components/EpistackComponent.html":{}}}],["menucomponent",{"_index":174,"title":{"components/MenuComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meta",{"_index":621,"title":{},"body":{"components/ControllerComponent.html":{},"components/HighlightComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["metadatatablecomponent",{"_index":176,"title":{"components/MetadataTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["method",{"_index":761,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["min",{"_index":1092,"title":{},"body":{"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HighlightComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["miscellaneous",{"_index":1838,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":199,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IconsModule.html":{}},"body":{}}],["modules",{"_index":201,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IconsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1827,"title":{},"body":{"index.html":{}}}],["mousemove",{"_index":462,"title":{},"body":{"components/CanvasComponent.html":{}}}],["mousemove$.subscribe((event",{"_index":464,"title":{},"body":{"components/CanvasComponent.html":{}}}],["mtime",{"_index":344,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["multiselect",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["names.pipe",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["names.pipe.ts",{"_index":355,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:8",{"_index":359,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["nasty",{"_index":736,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["navigate",{"_index":1803,"title":{},"body":{"index.html":{}}}],["new",{"_index":408,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"pipes/GetPipe.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafePipe.html":{},"coverage.html":{},"index.html":{}}}],["newform",{"_index":590,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["newgroup",{"_index":608,"title":{},"body":{"components/ControllerComponent.html":{}}}],["nextflow",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{}}}],["ng",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"modules/IconsModule.html":{},"components/MenuComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":385,"title":{},"body":{"components/CanvasComponent.html":{}}}],["ngb",{"_index":704,"title":{},"body":{"components/ControllerComponent.html":{}}}],["ngbcarouselconfig",{"_index":483,"title":{},"body":{"components/CarouselComponent.html":{},"components/EpistackComponent.html":{}}}],["ngbmodule",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbslideevent",{"_index":496,"title":{},"body":{"components/CarouselComponent.html":{}}}],["ngmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/IconsModule.html":{}}}],["ngmultiselectdropdownmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["nguniversal/express",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{},"injectables/RequestOptionsService.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxfilesizemodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnermodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":548,"title":{},"body":{"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{}}}],["no_heatmap",{"_index":1291,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["node",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1099,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["none",{"_index":471,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{}}}],["notably",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{}}}],["note",{"_index":753,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["notes",{"_index":1463,"title":{},"body":{"components/MenuComponent.html":{}}}],["null",{"_index":864,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"pipes/GetPipe.html":{},"interfaces/RouteStorageObject.html":{}}}],["number",{"_index":323,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["obj",{"_index":1228,"title":{},"body":{"pipes/GetPipe.html":{},"components/MetadataTableComponent.html":{}}}],["obj.name",{"_index":1586,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["obj[key",{"_index":1232,"title":{},"body":{"pipes/GetPipe.html":{},"components/MetadataTableComponent.html":{}}}],["object",{"_index":335,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"miscellaneous/variables.html":{}}}],["object(obj[key",{"_index":1233,"title":{},"body":{"pipes/GetPipe.html":{}}}],["object.entries(tree",{"_index":1077,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["object.keys",{"_index":575,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/MetadataTableComponent.html":{}}}],["object.keys(obj",{"_index":1568,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["object.keys(object",{"_index":341,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["object.keys(this.values[\"values",{"_index":1198,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["objectkeys",{"_index":529,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/MetadataTableComponent.html":{}}}],["objects",{"_index":740,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["observable",{"_index":495,"title":{},"body":{"components/CarouselComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"components/MenuComponent.html":{}}}],["observersmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["offered",{"_index":824,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["offers",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["offset",{"_index":1041,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["offset(depth",{"_index":1055,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["onchangecolor",{"_index":1344,"title":{},"body":{"components/HighlightComponent.html":{}}}],["onchangecolor(e",{"_index":1346,"title":{},"body":{"components/HighlightComponent.html":{}}}],["ondeselectvalue",{"_index":1142,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["ondeselectvalue(e",{"_index":1157,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["one",{"_index":751,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["onselectallvalues",{"_index":1143,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["onselectallvalues(e",{"_index":1159,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["onselectvalue",{"_index":1144,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["onselectvalue(e",{"_index":1161,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["onslide",{"_index":479,"title":{},"body":{"components/CarouselComponent.html":{}}}],["onslide(event",{"_index":491,"title":{},"body":{"components/CarouselComponent.html":{}}}],["onsubmit",{"_index":541,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["ontology",{"_index":326,"title":{"interfaces/Ontology.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["ontologyterms",{"_index":327,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["open",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["optional",{"_index":361,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["options",{"_index":598,"title":{},"body":{"components/ControllerComponent.html":{}}}],["options.service.ts",{"_index":1681,"title":{},"body":{"injectables/RequestOptionsService.html":{},"coverage.html":{}}}],["options.service.ts:8",{"_index":1683,"title":{},"body":{"injectables/RequestOptionsService.html":{}}}],["optionscontrol",{"_index":643,"title":{},"body":{"components/ControllerComponent.html":{}}}],["optionscontrol.addcontrol('figsize",{"_index":649,"title":{},"body":{"components/ControllerComponent.html":{}}}],["optionscontrol.controls['figsize'].setvalue(`(${s",{"_index":646,"title":{},"body":{"components/ControllerComponent.html":{}}}],["organization",{"_index":331,"title":{"interfaces/Organization.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["otherwise",{"_index":890,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":414,"title":{},"body":{"components/CanvasComponent.html":{}}}],["overflow",{"_index":679,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{}}}],["overview",{"_index":1832,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovis_aries",{"_index":372,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["p",{"_index":1422,"title":{},"body":{"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["package",{"_index":1742,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":678,"title":{},"body":{"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["palettefill",{"_index":1375,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":502,"title":{},"body":{"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/EpistackService.html":{}}}],["param",{"_index":833,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["parameter",{"_index":968,"title":{},"body":{"injectables/DataService.html":{}}}],["parameters",{"_index":360,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["paramsmatch",{"_index":858,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["parent",{"_index":346,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["particularly",{"_index":792,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["patchvalue",{"_index":1444,"title":{},"body":{"components/MenuComponent.html":{}}}],["patchvalue(field",{"_index":1456,"title":{},"body":{"components/MenuComponent.html":{}}}],["path",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["paths",{"_index":846,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["peaks",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["picker",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pig",{"_index":375,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["pipe",{"_index":352,"title":{"pipes/BetterNamesPipe.html":{},"pipes/GetPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}},"body":{"pipes/BetterNamesPipe.html":{},"pipes/GetPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"coverage.html":{}}}],["pipeline",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipeline:github.com/lauramble/rnaseq",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipes",{"_index":353,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"pipes/GetPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":362,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"pipes/GetPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["pixel",{"_index":436,"title":{},"body":{"components/CanvasComponent.html":{}}}],["pixel[1",{"_index":439,"title":{},"body":{"components/CanvasComponent.html":{}}}],["pixel[2",{"_index":440,"title":{},"body":{"components/CanvasComponent.html":{}}}],["pixel_color",{"_index":1326,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["pixel_color(color",{"_index":1331,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["place",{"_index":783,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["placeholder",{"_index":1361,"title":{},"body":{"directives/HostDirective.html":{}}}],["plotly",{"_index":652,"title":{},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{},"components/PlotlyComponent.html":{}}}],["plotly'},{'name",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["plotly.component.css",{"_index":1633,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["plotly.component.html",{"_index":1634,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["plotly.js",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plotly/plotly.component",{"_index":1295,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["plotlybool",{"_index":1272,"title":{},"body":{"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{}}}],["plotlychecked",{"_index":530,"title":{},"body":{"components/ControllerComponent.html":{}}}],["plotlycomponent",{"_index":178,"title":{"components/PlotlyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plotlyjs",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["plotlymodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["plotlymodule.plotlyjs",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["point",{"_index":845,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["pointer",{"_index":469,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{}}}],["portal",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["portal:data.faang.org.visualisations",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{}}}],["position",{"_index":467,"title":{},"body":{"components/CanvasComponent.html":{}}}],["private",{"_index":334,"title":{},"body":{"interfaces/Article.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/HeatmapComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["processed",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["processing",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["prod",{"_index":1814,"title":{},"body":{"index.html":{}}}],["production",{"_index":1816,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profiles",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["profilesprocessed",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{}}}],["project",{"_index":1793,"title":{},"body":{"index.html":{}}}],["promoters",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["properties",{"_index":192,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"properties.html":{}}}],["property",{"_index":876,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["protractor",{"_index":1825,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":957,"title":{},"body":{"injectables/DataService.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"injectables/RequestOptionsService.html":{}}}],["public",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Article.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["put",{"_index":746,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["px",{"_index":1084,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["pxcolor",{"_index":1324,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["q=${json.stringify(data",{"_index":960,"title":{},"body":{"injectables/DataService.html":{}}}],["qc",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["qcsource",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{}}}],["queryparamsmatch",{"_index":860,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["r=(rgb[0",{"_index":1407,"title":{},"body":{"components/LegendComponent.html":{}}}],["radius",{"_index":673,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["reactiveformsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":1311,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["reader.addeventlistener(\"load",{"_index":1313,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["reader.readasdataurl(img",{"_index":1319,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["readme",{"_index":1829,"title":{},"body":{"index.html":{}}}],["recursively",{"_index":880,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["reduce((cur",{"_index":1571,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["regular",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["reload",{"_index":1806,"title":{},"body":{"index.html":{}}}],["removeselected",{"_index":1145,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["removeselected(e",{"_index":1163,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["render",{"_index":778,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["rendered",{"_index":782,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["replaysubject",{"_index":416,"title":{},"body":{"components/CanvasComponent.html":{},"injectables/DataService.html":{},"injectables/HeatmapInfoService.html":{}}}],["reportprogress",{"_index":973,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["requested",{"_index":732,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["requestoptionsservice",{"_index":1679,"title":{"injectables/RequestOptionsService.html":{}},"body":{"injectables/RequestOptionsService.html":{},"coverage.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourceurl",{"_index":1702,"title":{},"body":{"pipes/SafePipe.html":{}}}],["response",{"_index":1002,"title":{},"body":{"injectables/DataService.html":{}}}],["responsetype",{"_index":971,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["responsive",{"_index":1652,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["results",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":717,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["retrieve(route",{"_index":770,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["retrieved",{"_index":822,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["return",{"_index":342,"title":{},"body":{"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["return(`rgb(${r",{"_index":1411,"title":{},"body":{"components/LegendComponent.html":{}}}],["return(this.formgroup.get(field).value===value",{"_index":1495,"title":{},"body":{"components/MenuComponent.html":{}}}],["returned",{"_index":891,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{}}}],["reuse",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["reused",{"_index":805,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["rgb",{"_index":1391,"title":{},"body":{"components/LegendComponent.html":{}}}],["rgb_conversion",{"_index":1384,"title":{},"body":{"components/LegendComponent.html":{}}}],["rgb_conversion(rgb",{"_index":1388,"title":{},"body":{"components/LegendComponent.html":{}}}],["right",{"_index":510,"title":{},"body":{"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{}}}],["rightimages",{"_index":1015,"title":{},"body":{"injectables/EpistackService.html":{}}}],["role",{"_index":332,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["root",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"injectables/RequestOptionsService.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["route",{"_index":730,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"components/ExperimentComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.params",{"_index":849,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.queryparams",{"_index":850,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.routeconfig",{"_index":844,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["route.routeconfig.path",{"_index":726,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["router",{"_index":809,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routerconfig",{"_index":865,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routereusestrategy",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routermodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routestorageobject",{"_index":817,"title":{"interfaces/RouteStorageObject.html":{}},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["routestorageobjects",{"_index":724,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["routing.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1617,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["rows",{"_index":1615,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["rows:1",{"_index":1664,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["run",{"_index":1800,"title":{},"body":{"index.html":{}}}],["running",{"_index":1817,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":417,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"injectables/ExperimentService.html":{},"injectables/HeatmapInfoService.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1117,"title":{},"body":{"injectables/ExperimentService.html":{},"components/MenuComponent.html":{}}}],["s",{"_index":642,"title":{},"body":{"components/ControllerComponent.html":{}}}],["safe",{"_index":1691,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safe.pipe",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["safehtml",{"_index":1686,"title":{},"body":{"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["safehtmlpipe",{"_index":209,"title":{"pipes/SafeHTMLPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SafeHTMLPipe.html":{},"coverage.html":{},"overview.html":{}}}],["safepipe",{"_index":210,"title":{"pipes/SafePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SafePipe.html":{},"coverage.html":{},"overview.html":{}}}],["saferesourceurl",{"_index":1696,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safescript",{"_index":1694,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safestyle",{"_index":1693,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safeurl",{"_index":1695,"title":{},"body":{"pipes/SafePipe.html":{}}}],["same",{"_index":768,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["sample",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["sanitizer",{"_index":1275,"title":{},"body":{"components/HeatmapComponent.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["scaffolding",{"_index":1808,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["science",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["script",{"_index":1699,"title":{},"body":{"pipes/SafePipe.html":{}}}],["scroll",{"_index":1626,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["see",{"_index":728,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["selected",{"_index":477,"title":{},"body":{"components/CarouselComponent.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{}}}],["selectedcolor",{"_index":1383,"title":{},"body":{"components/LegendComponent.html":{}}}],["selectedcols",{"_index":1516,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["selectedexperiments",{"_index":1517,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["selectedfile",{"_index":1038,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["selectedvalues",{"_index":1136,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["selectfile",{"_index":1042,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["selectfile(file",{"_index":1058,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["seq",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["serve",{"_index":1801,"title":{},"body":{"index.html":{}}}],["server",{"_index":1799,"title":{},"body":{"index.html":{}}}],["service",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"components/HeatmapComponent.html":{},"injectables/RequestOptionsService.html":{},"dependencies.html":{}}}],["set",{"_index":635,"title":{},"body":{"components/ControllerComponent.html":{}}}],["set_plotlybool",{"_index":1327,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["set_plotlybool(bool",{"_index":1333,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["setimg",{"_index":386,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{}}}],["setimg(src",{"_index":396,"title":{},"body":{"components/CanvasComponent.html":{}}}],["setsrc",{"_index":1274,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["setsrc(src",{"_index":1282,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["sex",{"_index":1554,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["sheep",{"_index":373,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["short",{"_index":1090,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["shouldattach",{"_index":718,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["shouldattach(route",{"_index":779,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["shoulddetach",{"_index":719,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["shoulddetach(route",{"_index":784,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["shouldreuseroute",{"_index":720,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["shouldreuseroute(future",{"_index":801,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["side",{"_index":481,"title":{},"body":{"components/CarouselComponent.html":{},"injectables/EpistackService.html":{},"components/MenuComponent.html":{}}}],["signals",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["single",{"_index":840,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["singleselection",{"_index":1179,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["size",{"_index":345,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["slider",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["smooth",{"_index":1628,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["snapshot",{"_index":830,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["solid",{"_index":675,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{},"dependencies.html":{}}}],["someone",{"_index":745,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["sortnull",{"_index":1445,"title":{},"body":{"components/MenuComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/ExperimentsListComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"modules/IconsModule.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["source.split(\"/\").pop().split(\".png\")[0",{"_index":512,"title":{},"body":{"components/CarouselComponent.html":{}}}],["sp",{"_index":661,"title":{},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/MenuComponent.html":{}}}],["species",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/MenuComponent.html":{}}}],["species.faang",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{}}}],["speciesdropdownsettings",{"_index":1440,"title":{},"body":{"components/MenuComponent.html":{}}}],["speciesisset",{"_index":531,"title":{},"body":{"components/ControllerComponent.html":{}}}],["specified",{"_index":1705,"title":{},"body":{"pipes/SafePipe.html":{}}}],["spinner",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{},"dependencies.html":{}}}],["src",{"_index":398,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{}}}],["src/.../environment.dev.ts",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../icons.module.ts",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../metadata",{"_index":1841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:12",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/better",{"_index":354,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"coverage.html":{}}}],["src/app/epistack/carousel/carousel.component.ts",{"_index":472,"title":{},"body":{"components/CarouselComponent.html":{},"coverage.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:15",{"_index":494,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:16",{"_index":487,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:17",{"_index":485,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:26",{"_index":490,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:35",{"_index":489,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/carousel/carousel.component.ts:39",{"_index":492,"title":{},"body":{"components/CarouselComponent.html":{}}}],["src/app/epistack/epistack.component.ts",{"_index":1006,"title":{},"body":{"components/EpistackComponent.html":{},"coverage.html":{}}}],["src/app/epistack/epistack.component.ts:14",{"_index":1009,"title":{},"body":{"components/EpistackComponent.html":{}}}],["src/app/epistack/epistack.component.ts:18",{"_index":1010,"title":{},"body":{"components/EpistackComponent.html":{}}}],["src/app/epistack/epistack.service.ts",{"_index":1013,"title":{},"body":{"injectables/EpistackService.html":{},"coverage.html":{}}}],["src/app/epistack/epistack.service.ts:10",{"_index":1021,"title":{},"body":{"injectables/EpistackService.html":{}}}],["src/app/epistack/epistack.service.ts:11",{"_index":1022,"title":{},"body":{"injectables/EpistackService.html":{}}}],["src/app/epistack/epistack.service.ts:12",{"_index":1017,"title":{},"body":{"injectables/EpistackService.html":{}}}],["src/app/epistack/epistack.service.ts:16",{"_index":1020,"title":{},"body":{"injectables/EpistackService.html":{}}}],["src/app/epistack/menu/menu.component.ts",{"_index":1435,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/epistack/menu/menu.component.ts:102",{"_index":1453,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:19",{"_index":1475,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:20",{"_index":1470,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:21",{"_index":1468,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:28",{"_index":1473,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:29",{"_index":1458,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:30",{"_index":1469,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:31",{"_index":1472,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:32",{"_index":1447,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:34",{"_index":1471,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:35",{"_index":1474,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:37",{"_index":1476,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:38",{"_index":1446,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:44",{"_index":1454,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:73",{"_index":1457,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:78",{"_index":1449,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:83",{"_index":1451,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:90",{"_index":1448,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/epistack/menu/menu.component.ts:96",{"_index":1455,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/experiments/experiment.service.ts",{"_index":1105,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["src/app/experiments/experiment.service.ts:15",{"_index":1112,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["src/app/experiments/experiment.service.ts:16",{"_index":1109,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["src/app/experiments/experiment.service.ts:20",{"_index":1111,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["src/app/experiments/experiment/experiment.component.ts",{"_index":1032,"title":{},"body":{"components/ExperimentComponent.html":{},"coverage.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:15",{"_index":1049,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:16",{"_index":1060,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:17",{"_index":1062,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:18",{"_index":1063,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:19",{"_index":1064,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:20",{"_index":1061,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:22",{"_index":1048,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:28",{"_index":1054,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:37",{"_index":1053,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:41",{"_index":1051,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:53",{"_index":1059,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiment/experiment.component.ts:57",{"_index":1056,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["src/app/experiments/experiments",{"_index":1119,"title":{},"body":{"components/ExperimentsListComponent.html":{},"coverage.html":{}}}],["src/app/get.pipe.ts",{"_index":1225,"title":{},"body":{"pipes/GetPipe.html":{},"coverage.html":{}}}],["src/app/get.pipe.ts:8",{"_index":1227,"title":{},"body":{"pipes/GetPipe.html":{}}}],["src/app/header/header.component.ts",{"_index":1257,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:12",{"_index":1261,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:8",{"_index":1260,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/icons/icons.module.ts",{"_index":1367,"title":{},"body":{"modules/IconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/controller/controller.component.ts",{"_index":522,"title":{},"body":{"components/ControllerComponent.html":{},"coverage.html":{}}}],["src/app/main/controller/controller.component.ts:111",{"_index":562,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:123",{"_index":560,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:135",{"_index":554,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:141",{"_index":558,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:148",{"_index":567,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:20",{"_index":574,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:22",{"_index":571,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:23",{"_index":577,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:24",{"_index":569,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:27",{"_index":570,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:28",{"_index":576,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:29",{"_index":578,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:30",{"_index":568,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:32",{"_index":572,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:34",{"_index":549,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:41",{"_index":566,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:56",{"_index":551,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:67",{"_index":552,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:79",{"_index":565,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:88",{"_index":580,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:90",{"_index":582,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:92",{"_index":564,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/controller.component.ts:99",{"_index":556,"title":{},"body":{"components/ControllerComponent.html":{}}}],["src/app/main/controller/filter/filter.component.ts",{"_index":1129,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/main/controller/filter/filter.component.ts:15",{"_index":1147,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/main/controller/highlight/highlight.component.ts",{"_index":1341,"title":{},"body":{"components/HighlightComponent.html":{},"coverage.html":{}}}],["src/app/main/controller/highlight/highlight.component.ts:15",{"_index":1345,"title":{},"body":{"components/HighlightComponent.html":{}}}],["src/app/main/controller/highlight/highlight.component.ts:25",{"_index":1347,"title":{},"body":{"components/HighlightComponent.html":{}}}],["src/app/main/data.service.ts",{"_index":895,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/main/data.service.ts:103",{"_index":936,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:109",{"_index":949,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:113",{"_index":923,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:123",{"_index":944,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:133",{"_index":925,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:143",{"_index":933,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:15",{"_index":951,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:150",{"_index":931,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:156",{"_index":947,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:16",{"_index":916,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:162",{"_index":946,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:169",{"_index":942,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:176",{"_index":929,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:22",{"_index":919,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:30",{"_index":940,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:53",{"_index":938,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:73",{"_index":935,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/data.service.ts:90",{"_index":927,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/main/heatmap",{"_index":1321,"title":{},"body":{"injectables/HeatmapInfoService.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts",{"_index":1423,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:12",{"_index":1430,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:13",{"_index":1427,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:17",{"_index":1428,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/metadata",{"_index":1504,"title":{},"body":{"components/MetadataTableComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/main/request",{"_index":1680,"title":{},"body":{"injectables/RequestOptionsService.html":{},"coverage.html":{}}}],["src/app/main/safe",{"_index":1684,"title":{},"body":{"pipes/SafeHTMLPipe.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts",{"_index":376,"title":{},"body":{"components/CanvasComponent.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:12",{"_index":410,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:13",{"_index":406,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:14",{"_index":404,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:16",{"_index":389,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:20",{"_index":395,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:28",{"_index":394,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:31",{"_index":392,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:41",{"_index":397,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.component.ts:52",{"_index":390,"title":{},"body":{"components/CanvasComponent.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.directives.ts",{"_index":1356,"title":{},"body":{"directives/HostDirective.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/canvas/canvas.directives.ts:5",{"_index":1360,"title":{},"body":{"directives/HostDirective.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts",{"_index":1267,"title":{},"body":{"components/HeatmapComponent.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:19",{"_index":1285,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:20",{"_index":1290,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:22",{"_index":1286,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:24",{"_index":1292,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:25",{"_index":1287,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:26",{"_index":1288,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:27",{"_index":1277,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:36",{"_index":1280,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:49",{"_index":1281,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:60",{"_index":1283,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/heatmap.component.ts:67",{"_index":1279,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts",{"_index":1380,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:13",{"_index":1392,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:14",{"_index":1393,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:15",{"_index":1385,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:20",{"_index":1387,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:37",{"_index":1386,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/legend/legend.component.ts:48",{"_index":1390,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts",{"_index":1632,"title":{},"body":{"components/PlotlyComponent.html":{},"coverage.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:12",{"_index":1646,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:13",{"_index":1648,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:14",{"_index":1647,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:15",{"_index":1639,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:20",{"_index":1645,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:26",{"_index":1644,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:57",{"_index":1641,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/heatmap/plotly/plotly.component.ts:61",{"_index":1642,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["src/app/main/view/view.component.ts",{"_index":1706,"title":{},"body":{"components/ViewComponent.html":{},"coverage.html":{}}}],["src/app/main/view/view.component.ts:12",{"_index":1710,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/main/view/view.component.ts:17",{"_index":1711,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/reuse",{"_index":713,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["src/app/safe.pipe.ts",{"_index":1690,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["src/app/safe.pipe.ts:11",{"_index":1692,"title":{},"body":{"pipes/SafePipe.html":{}}}],["src/app/utils/hlfilter.ts",{"_index":1234,"title":{},"body":{"components/HLFilterComponent.html":{},"coverage.html":{}}}],["src/app/utils/hlfilter.ts:105",{"_index":1244,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:14",{"_index":1238,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:15",{"_index":1237,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:17",{"_index":1249,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:18",{"_index":1250,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:19",{"_index":1248,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:21",{"_index":1254,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:23",{"_index":1253,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:24",{"_index":1251,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:25",{"_index":1255,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:27",{"_index":1252,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:29",{"_index":1247,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:30",{"_index":1236,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:34",{"_index":1242,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:56",{"_index":1241,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:64",{"_index":1240,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:78",{"_index":1239,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:83",{"_index":1246,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:91",{"_index":1245,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/hlfilter.ts:98",{"_index":1243,"title":{},"body":{"components/HLFilterComponent.html":{}}}],["src/app/utils/metadata.ts",{"_index":1127,"title":{},"body":{"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"coverage.html":{}}}],["src/app/utils/text",{"_index":317,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacks",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["started",{"_index":1792,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":402,"title":{},"body":{"components/CanvasComponent.html":{},"components/MetadataTableComponent.html":{}}}],["status",{"_index":1553,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["store",{"_index":721,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["store(route",{"_index":813,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["stored",{"_index":731,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"index.html":{}}}],["storedresults",{"_index":848,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["storedroute",{"_index":836,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["storedroutes",{"_index":715,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["stores",{"_index":818,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["strategy",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["strategy.ts",{"_index":714,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{},"coverage.html":{}}}],["strategy.ts:110",{"_index":803,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:123",{"_index":735,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:27",{"_index":723,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:37",{"_index":785,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:48",{"_index":815,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:64",{"_index":780,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strategy.ts:94",{"_index":772,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["strenghts",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["strict",{"_index":758,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["string",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{}}}],["style",{"_index":1102,"title":{},"body":{"components/ExperimentComponent.html":{},"pipes/SafePipe.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["subject",{"_index":952,"title":{},"body":{"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/MenuComponent.html":{}}}],["submit",{"_index":670,"title":{},"body":{"components/ControllerComponent.html":{}}}],["submit_data",{"_index":913,"title":{},"body":{"injectables/DataService.html":{}}}],["submit_data(data",{"_index":948,"title":{},"body":{"injectables/DataService.html":{}}}],["submitteddata",{"_index":897,"title":{},"body":{"injectables/DataService.html":{}}}],["subplots:[[\"xy",{"_index":1666,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["subscribe(meta",{"_index":619,"title":{},"body":{"components/ControllerComponent.html":{},"components/HighlightComponent.html":{}}}],["super(dataservice",{"_index":1176,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["super.ngoninit",{"_index":1177,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["support",{"_index":1830,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["sus_scrofa",{"_index":374,"title":{},"body":{"pipes/BetterNamesPipe.html":{}}}],["svg",{"_index":1755,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["swimlane/ngx",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/MetadataTableComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"pipes/BetterNamesPipe.html":{},"injectables/DataService.html":{},"pipes/SafePipe.html":{}}}],["switch(type",{"_index":980,"title":{},"body":{"injectables/DataService.html":{}}}],["switch(typeof",{"_index":878,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["sz",{"_index":669,"title":{},"body":{"components/ControllerComponent.html":{}}}],["table",{"_index":964,"title":{},"body":{"injectables/DataService.html":{},"components/MetadataTableComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["table.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":1506,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.html",{"_index":1507,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts",{"_index":1505,"title":{},"body":{"components/MetadataTableComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:110",{"_index":1524,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:128",{"_index":1540,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:20",{"_index":1545,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:21",{"_index":1559,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:22",{"_index":1566,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:24",{"_index":1555,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:25",{"_index":1557,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:26",{"_index":1562,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:27",{"_index":1546,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:28",{"_index":1547,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:29",{"_index":1560,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:30",{"_index":1563,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:31",{"_index":1548,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:32",{"_index":1541,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:33",{"_index":1542,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:35",{"_index":1561,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:36",{"_index":1533,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:37",{"_index":1526,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:44",{"_index":1523,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:48",{"_index":1535,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:58",{"_index":1528,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:85",{"_index":1537,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table.component.ts:99",{"_index":1530,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["table/metadata",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/MetadataTableComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1550,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["td.td",{"_index":1098,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["tells",{"_index":762,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["templateref",{"_index":1543,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["test",{"_index":1819,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1818,"title":{},"body":{"index.html":{}}}],["text",{"_index":324,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["textunit",{"_index":329,"title":{"interfaces/TextUnit.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["texturl",{"_index":320,"title":{"interfaces/TextUrl.html":{}},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["thevisual",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{}}}],["thin",{"_index":676,"title":{},"body":{"components/ControllerComponent.html":{},"components/LegendComponent.html":{}}}],["thing",{"_index":752,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.addselected(e",{"_index":1215,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.adjustcolumnminwidth",{"_index":1599,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.allcolumns",{"_index":1590,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.alldata",{"_index":1649,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.alldata.push(data",{"_index":1676,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.alldata.push(data[0",{"_index":1660,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.alldata.push(data[1",{"_index":1658,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.allrows",{"_index":1600,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.backendurl}/experiment/${id",{"_index":1118,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["this.baseurl}/${uri",{"_index":958,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/${species}/experiments",{"_index":995,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/annotated_plotly",{"_index":993,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/epistack",{"_index":1000,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/epistack_imgs",{"_index":1005,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/fields",{"_index":994,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/img",{"_index":990,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/json",{"_index":992,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/legend",{"_index":985,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/metadata",{"_index":999,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/size",{"_index":998,"title":{},"body":{"injectables/DataService.html":{}}}],["this.baseurl}/api/species",{"_index":997,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('data/list/species",{"_index":976,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('epistack/filter",{"_index":961,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('epistack/imgs",{"_index":975,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('heatmap/img",{"_index":983,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('heatmap/legend",{"_index":982,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('heatmap/plotly",{"_index":981,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('metadata/all",{"_index":963,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('metadata/fields",{"_index":962,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url('metadata/table",{"_index":965,"title":{},"body":{"injectables/DataService.html":{}}}],["this.build_url(`data/list/species/${data",{"_index":977,"title":{},"body":{"injectables/DataService.html":{}}}],["this.builder.array",{"_index":595,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.builder.group",{"_index":591,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["this.canvas.nativeelement.getcontext('2d",{"_index":459,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":452,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.nativeelement.offsetleft",{"_index":429,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.nativeelement.offsettop",{"_index":432,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":454,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.setimg(this.src",{"_index":1315,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.canvas.style.height",{"_index":455,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.canvas.style.width",{"_index":456,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.cast(object",{"_index":338,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["this.celltemplate",{"_index":1587,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.color",{"_index":1348,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.cols",{"_index":1581,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.compareobjects(base[baseproperty",{"_index":884,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.compareobjects(route.params",{"_index":859,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.compareobjects(route.queryparams",{"_index":861,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.config",{"_index":1650,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.context",{"_index":458,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.context.drawimage(this.img",{"_index":460,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.context.getimagedata(x",{"_index":434,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.data",{"_index":1398,"title":{},"body":{"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{}}}],["this.datacols",{"_index":1584,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.datacols.filter((obj",{"_index":1591,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.datacols.filter(c",{"_index":1605,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.datacols.find(c",{"_index":1610,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.datacols.sort((a",{"_index":1593,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.dataservice.get_blob('heatmap",{"_index":1304,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.dataservice.get_fields(this.formgroup.value",{"_index":1350,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.dataservice.get_json('legend').subscribe(legend",{"_index":1400,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.dataservice.get_json('plotly",{"_index":1655,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.dataservice.get_list('epistack",{"_index":1492,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataservice.get_list('experiments",{"_index":637,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.dataservice.get_list('species').subscribe(species",{"_index":601,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["this.dataservice.get_meta('epistack",{"_index":1487,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataservice.get_meta('fields",{"_index":617,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.dataservice.get_meta('table",{"_index":1579,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.dataservice.submit_data(this.formgroup.value",{"_index":658,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.dataservice.submitteddata.subscribe",{"_index":1574,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.dataservice.submitteddata.subscribe(data",{"_index":1299,"title":{},"body":{"components/HeatmapComponent.html":{},"components/LegendComponent.html":{}}}],["this.default_cols.includes(obj.name",{"_index":1592,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.default_cols.indexof(a.name",{"_index":1595,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.default_cols.indexof(b.name",{"_index":1597,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.default_minwidth",{"_index":1589,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.draw_img",{"_index":426,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.elementref.nativeelement",{"_index":1613,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.epistackservice.formgroup",{"_index":1478,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.epistackservice.leftimages$.subscribe(data",{"_index":506,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.epistackservice.rightimages$.subscribe(data",{"_index":511,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.epistackservice.updateimages(this.side",{"_index":1494,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.experimentisset",{"_index":633,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.experiments=experiment",{"_index":639,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.experimentservice.get_experiment(this.id).subscribe(data",{"_index":1070,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.fielddropdownsettings",{"_index":1178,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["this.fieldmap[e",{"_index":1192,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fieldmap[this.formatted_fields[i",{"_index":1189,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fields",{"_index":620,"title":{},"body":{"components/ControllerComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/MenuComponent.html":{}}}],["this.fields$.pipe(map(fields",{"_index":1488,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.fields$.subscribe(fields",{"_index":1481,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.fields.map",{"_index":1186,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fields[field]['count",{"_index":1188,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fields[field]['name",{"_index":1187,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fields[i",{"_index":1190,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.fields[selected",{"_index":1196,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.folders",{"_index":1072,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.formatted_fields",{"_index":1185,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.formatted_values",{"_index":1200,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.formatvalues",{"_index":1197,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.formdata",{"_index":1300,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.formdata).subscribe(img",{"_index":1305,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.formgroup",{"_index":600,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["this.formgroup.controls['annotated'].setvalue(e.target.value",{"_index":651,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['color'].setvalue(e.substr(1",{"_index":1349,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.formgroup.controls['experiment'].setvalue(e.target.value",{"_index":631,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['field'].setvalue(selected",{"_index":1194,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.formgroup.controls['filters",{"_index":607,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['highlights",{"_index":614,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['options",{"_index":644,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['species'].setvalue(e.target.value",{"_index":636,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['species'].value).subscribe(experiment",{"_index":638,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.controls['values",{"_index":1218,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.formgroup.controls['values'].setvalue(this.selectedvalues",{"_index":1216,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.formgroup.controls[field].patchvalue(e.target.value",{"_index":1484,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.formgroup.controls[name",{"_index":628,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.get('filters",{"_index":625,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.get('highlights",{"_index":626,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.formgroup.value",{"_index":618,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["this.formgroup.value).subscribe",{"_index":1493,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.formgroup.valuechanges.subscribe(data",{"_index":1477,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.get_legend",{"_index":1397,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.get_legend(this.data",{"_index":1399,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.get_metadata(data",{"_index":1576,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.get_pixel_color(event",{"_index":465,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.getexp(this.images[0",{"_index":509,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.getfolders(data[this.id",{"_index":1073,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.getimgs",{"_index":1480,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getmetadata",{"_index":612,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.getmetaobs",{"_index":1479,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.headertemplate",{"_index":1588,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.heatmapinfoservice.img_loaded(false",{"_index":659,"title":{},"body":{"components/ControllerComponent.html":{},"components/HeatmapComponent.html":{}}}],["this.heatmapinfoservice.img_loaded(true",{"_index":1316,"title":{},"body":{"components/HeatmapComponent.html":{},"components/PlotlyComponent.html":{}}}],["this.heatmapinfoservice.imgloaded.subscribe(value",{"_index":1396,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.heatmapinfoservice.pixel_color(`rgb(${pixel[0",{"_index":438,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.heatmapinfoservice.plotlybool.subscribe(bool",{"_index":1297,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.heatmapinfoservice.pxcolor.subscribe(color",{"_index":1394,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.heatmapinfoservice.set_plotlybool(e.target.checked",{"_index":654,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.hide",{"_index":423,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.http.get(`${url",{"_index":970,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["this.http.get(url",{"_index":986,"title":{},"body":{"injectables/DataService.html":{}}}],["this.id",{"_index":1068,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.images",{"_index":507,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.img",{"_index":442,"title":{},"body":{"components/CanvasComponent.html":{},"components/HeatmapComponent.html":{}}}],["this.img.addeventlistener(\"load",{"_index":425,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.img.height",{"_index":453,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.img.src",{"_index":446,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.img.width",{"_index":451,"title":{},"body":{"components/CanvasComponent.html":{}}}],["this.imgfromblob(img",{"_index":1306,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.imgloaded.next(bool",{"_index":1339,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["this.imgloading",{"_index":1303,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.ischecked(col",{"_index":1604,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.isfolder(files",{"_index":1079,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.layout",{"_index":1651,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["this.leftimages$.next(imgs",{"_index":1026,"title":{},"body":{"injectables/EpistackService.html":{}}}],["this.legend",{"_index":1402,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.legend[leg",{"_index":1404,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.loading",{"_index":1603,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["this.metadata",{"_index":1351,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.metadata[selected][\"values",{"_index":1352,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.onselectvalue(value",{"_index":1221,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.plotly.getplotly(this.formdata",{"_index":1301,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.plotlybool",{"_index":1298,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.plotlybool.next(bool",{"_index":1340,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["this.plotlychecked",{"_index":655,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.pxcolor.next(color",{"_index":1338,"title":{},"body":{"injectables/HeatmapInfoService.html":{}}}],["this.removeselected(e",{"_index":1219,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.retrieve",{"_index":823,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.rgb_conversion(legend[leg",{"_index":1405,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.rightimages$.next(imgs",{"_index":1030,"title":{},"body":{"injectables/EpistackService.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":1069,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(value",{"_index":1689,"title":{},"body":{"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(value",{"_index":1703,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.sanitizer.bypasssecuritytrustscript(value",{"_index":1700,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.sanitizer.bypasssecuritytruststyle(value",{"_index":1698,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(value",{"_index":1701,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.selected",{"_index":508,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.selectedcolor",{"_index":1395,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.selectedfile",{"_index":1082,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.selectedvalues",{"_index":1212,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.selectedvalues.indexof(e",{"_index":1209,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.selectedvalues.push(e",{"_index":1353,"title":{},"body":{"components/HighlightComponent.html":{}}}],["this.selectedvalues.push(selected",{"_index":1208,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.selectedvalues.splice(i",{"_index":1213,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.setimg",{"_index":1302,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.setsrc(reader.result",{"_index":1314,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.shouldattach",{"_index":821,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.side",{"_index":504,"title":{},"body":{"components/CarouselComponent.html":{}}}],["this.species=species",{"_index":602,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["this.speciesisset",{"_index":640,"title":{},"body":{"components/ControllerComponent.html":{}}}],["this.spinner.show",{"_index":1296,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.src",{"_index":1308,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["this.store",{"_index":789,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes",{"_index":838,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path",{"_index":841,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].handle",{"_index":867,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].snapshot",{"_index":863,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].snapshot.params",{"_index":854,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.storedroutes[route.routeconfig.path].snapshot.queryparams",{"_index":857,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["this.submitteddata.next(data",{"_index":987,"title":{},"body":{"injectables/DataService.html":{}}}],["this.texturl",{"_index":337,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["this.tree",{"_index":1071,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["this.updatefielddisplay",{"_index":1485,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.values",{"_index":1195,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["this.values.map",{"_index":1201,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.values[\"values\"][value",{"_index":1202,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.values[i",{"_index":1204,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.valuesdropdownsettings",{"_index":1183,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.valuesmap",{"_index":1206,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.valuesmap[e",{"_index":1207,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["this.valuesmap[this.formatted_values[i",{"_index":1203,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{}}}],["those",{"_index":769,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["though",{"_index":791,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["through",{"_index":872,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["throw",{"_index":966,"title":{},"body":{"injectables/DataService.html":{},"pipes/SafePipe.html":{}}}],["title",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"directives/HostDirective.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["toggle",{"_index":1358,"title":{},"body":{"directives/HostDirective.html":{},"components/MetadataTableComponent.html":{}}}],["toggle(col",{"_index":1536,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["tooltip",{"_index":466,"title":{},"body":{"components/CanvasComponent.html":{}}}],["top",{"_index":1503,"title":{},"body":{"components/MenuComponent.html":{}}}],["traditionally",{"_index":741,"title":{},"body":{"classes/CustomReuseStrategy.html":{}}}],["transcriptomic",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["transform",{"_index":357,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"pipes/GetPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["transform(obj",{"_index":1226,"title":{},"body":{"pipes/GetPipe.html":{}}}],["transform(value",{"_index":358,"title":{},"body":{"pipes/BetterNamesPipe.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{}}}],["trash",{"_index":685,"title":{},"body":{"components/ControllerComponent.html":{},"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["trashfill",{"_index":1373,"title":{},"body":{"modules/IconsModule.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["triggered",{"_index":808,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["true",{"_index":424,"title":{},"body":{"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/ExperimentService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":645,"title":{},"body":{"components/ControllerComponent.html":{}}}],["tslib",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"classes/CastTextUrl.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"interfaces/File.html":{},"components/FilterComponent.html":{},"interfaces/Folder.html":{},"pipes/GetPipe.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"components/PlotlyComponent.html":{},"injectables/RequestOptionsService.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"components/ViewComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1839,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeobj",{"_index":1230,"title":{},"body":{"pipes/GetPipe.html":{}}}],["typeof",{"_index":882,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/MetadataTableComponent.html":{},"interfaces/RouteStorageObject.html":{}}}],["typeof(file.name",{"_index":1075,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["typeof(obj",{"_index":1229,"title":{},"body":{"pipes/GetPipe.html":{}}}],["typeof(obj[key",{"_index":1231,"title":{},"body":{"pipes/GetPipe.html":{}}}],["undefined",{"_index":959,"title":{},"body":{"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"pipes/GetPipe.html":{},"components/MetadataTableComponent.html":{}}}],["under",{"_index":839,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["understand",{"_index":798,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["unit",{"_index":330,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"index.html":{}}}],["up",{"_index":825,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["updated",{"_index":1028,"title":{},"body":{"injectables/EpistackService.html":{},"components/MenuComponent.html":{}}}],["updatefilter",{"_index":1522,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["updatefilter(event",{"_index":1538,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["updateimages",{"_index":1016,"title":{},"body":{"injectables/EpistackService.html":{}}}],["updateimages(side",{"_index":1018,"title":{},"body":{"injectables/EpistackService.html":{}}}],["updateimages(side:string",{"_index":1023,"title":{},"body":{"injectables/EpistackService.html":{}}}],["updating",{"_index":1025,"title":{},"body":{"injectables/EpistackService.html":{}}}],["uri",{"_index":920,"title":{},"body":{"injectables/DataService.html":{}}}],["url",{"_index":325,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"injectables/DataService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"components/HeatmapComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"pipes/SafePipe.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["url.ts",{"_index":318,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{},"coverage.html":{}}}],["url.ts:31",{"_index":519,"title":{},"body":{"classes/CastTextUrl.html":{}}}],["url.ts:37",{"_index":520,"title":{},"body":{"classes/CastTextUrl.html":{}}}],["url.ts:58",{"_index":521,"title":{},"body":{"classes/CastTextUrl.html":{}}}],["use",{"_index":663,"title":{},"body":{"components/ControllerComponent.html":{},"index.html":{}}}],["used",{"_index":777,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["useful",{"_index":827,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["user",{"_index":775,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["uses",{"_index":754,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["using",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["utils/hlfilter",{"_index":1175,"title":{},"body":{"components/FilterComponent.html":{},"components/HighlightComponent.html":{}}}],["utils/metadata",{"_index":589,"title":{},"body":{"components/ControllerComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/MenuComponent.html":{}}}],["utils/text",{"_index":1067,"title":{},"body":{"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{}}}],["v",{"_index":1263,"title":{},"body":{"components/HeaderComponent.html":{}}}],["val",{"_index":1534,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["validators",{"_index":583,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["validators.required",{"_index":592,"title":{},"body":{"components/ControllerComponent.html":{},"components/MenuComponent.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"pipes/BetterNamesPipe.html":{},"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"injectables/ExperimentService.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"directives/HostDirective.html":{},"components/LegendComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"interfaces/RouteStorageObject.html":{},"pipes/SafeHTMLPipe.html":{},"pipes/SafePipe.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":610,"title":{},"body":{"components/ControllerComponent.html":{},"interfaces/FieldValues.html":{},"interfaces/Fields.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{},"components/MenuComponent.html":{}}}],["valuesdropdownsettings",{"_index":1137,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["valuesmap",{"_index":1138,"title":{},"body":{"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HighlightComponent.html":{}}}],["vanilla",{"_index":748,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["var",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["variable",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["version",{"_index":1796,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1821,"title":{},"body":{"index.html":{}}}],["view",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{}}}],["view.component.css",{"_index":1707,"title":{},"body":{"components/ViewComponent.html":{}}}],["view.component.html",{"_index":1708,"title":{},"body":{"components/ViewComponent.html":{}}}],["view/heatmap/legend/legend.component",{"_index":586,"title":{},"body":{"components/ControllerComponent.html":{}}}],["view/view.component",{"_index":1432,"title":{},"body":{"components/MainComponent.html":{}}}],["viewchild",{"_index":412,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/HeatmapComponent.html":{},"components/MainComponent.html":{},"components/MetadataTableComponent.html":{},"components/ViewComponent.html":{}}}],["viewchild('canvas",{"_index":401,"title":{},"body":{"components/CanvasComponent.html":{}}}],["viewchild('celltemplate",{"_index":1544,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["viewchild('headertemplate",{"_index":1558,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["viewchild(canvascomponent",{"_index":1284,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["viewchild(controllercomponent",{"_index":1429,"title":{},"body":{"components/MainComponent.html":{}}}],["viewchild(datatablecomponent",{"_index":1565,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["viewchild(legendcomponent",{"_index":573,"title":{},"body":{"components/ControllerComponent.html":{}}}],["viewchild(plotlycomponent",{"_index":1289,"title":{},"body":{"components/HeatmapComponent.html":{}}}],["viewchild(viewcomponent",{"_index":1431,"title":{},"body":{"components/MainComponent.html":{}}}],["viewcomponent",{"_index":180,"title":{"components/ViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/EpistackComponent.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visible",{"_index":680,"title":{},"body":{"components/ControllerComponent.html":{}}}],["visual",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["visualisations",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["visualy",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["visualyinvestigate",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{}}}],["vizfada",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["vizfada,and",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/CanvasComponent.html":{},"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"classes/CustomReuseStrategy.html":{},"injectables/DataService.html":{},"components/EpistackComponent.html":{},"injectables/EpistackService.html":{},"components/ExperimentComponent.html":{},"components/ExperimentsListComponent.html":{},"components/FilterComponent.html":{},"components/HLFilterComponent.html":{},"components/HeaderComponent.html":{},"components/HeatmapComponent.html":{},"injectables/HeatmapInfoService.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MainComponent.html":{},"components/MenuComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{},"interfaces/RouteStorageObject.html":{},"components/ViewComponent.html":{}}}],["want",{"_index":800,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["way",{"_index":764,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["we've",{"_index":729,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["web",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["weight",{"_index":1415,"title":{},"body":{"components/LegendComponent.html":{},"components/MenuComponent.html":{}}}],["whatever",{"_index":826,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["whether",{"_index":739,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["white",{"_index":1096,"title":{},"body":{"components/ExperimentComponent.html":{}}}],["width",{"_index":515,"title":{},"body":{"components/CarouselComponent.html":{},"components/ControllerComponent.html":{},"components/ExperimentComponent.html":{},"components/FilterComponent.html":{},"components/HeaderComponent.html":{},"components/HighlightComponent.html":{},"components/LegendComponent.html":{},"components/MetadataTableComponent.html":{},"components/PlotlyComponent.html":{}}}],["width:fit",{"_index":1631,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["widths",{"_index":1612,"title":{},"body":{"components/MetadataTableComponent.html":{}}}],["willattach",{"_index":851,"title":{},"body":{"classes/CustomReuseStrategy.html":{},"interfaces/RouteStorageObject.html":{}}}],["withcredentials",{"_index":974,"title":{},"body":{"injectables/DataService.html":{},"injectables/ExperimentService.html":{}}}],["works",{"_index":1125,"title":{},"body":{"components/ExperimentsListComponent.html":{}}}],["x",{"_index":427,"title":{},"body":{"components/CanvasComponent.html":{},"components/MetadataTableComponent.html":{}}}],["x2y",{"_index":1667,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["xaxis",{"_index":1668,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["xaxis2",{"_index":1672,"title":{},"body":{"components/PlotlyComponent.html":{}}}],["y",{"_index":430,"title":{},"body":{"components/CanvasComponent.html":{},"components/ControllerComponent.html":{},"components/MetadataTableComponent.html":{}}}],["year",{"_index":322,"title":{},"body":{"interfaces/Article.html":{},"classes/CastTextUrl.html":{},"interfaces/DataJSON.html":{},"interfaces/File.html":{},"interfaces/Folder.html":{},"interfaces/Ontology.html":{},"interfaces/Organization.html":{},"interfaces/TextUnit.html":{},"interfaces/TextUrl.html":{}}}],["yes",{"_index":921,"title":{},"body":{"injectables/DataService.html":{}}}],["zone.js",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\nAbout FAANG\n\nFunctionnal Annotation of the Animal Genome (FAANG)\nis an open consortia, notably gathering transcriptomic and epigenomic data in farm\nanimal species.\nFAANG data is available on the FAANG data portal:\ndata.faang.org.\n\n\nVisualisations of FAANG data\n\nThis web applications offers visualisations of FAANG data. Sample-sample correlation heatmaps\nallow the exploration of the various FAANG datasets. Epigenetic stacks allow the\nvisual inspection of epigenetic profiles (ChIP-seq, ATAC-seq) at peaks, to visualy\ninvestigate the strenghts of the signals, or at gene promoters, to investigate\nthe associations between epigenetic mark and gene expression levels.\n\n\nCorrelation matrices\n\nEpigenetic profiles\n\nProcessed data and QC\n\nSource code\n\nThe web application source code is available on a public GitLab instance:\nforgemia.inra.fr/laura.morel/vizfada-app.\n\nFAANG data processing was done using Nextflow pipeline:\ngithub.com/lauramble/rnaseq-vizfada,\nand github.com/lauramble/chipseq_vizfada.\n\n\nFunding\n\nVizFaDa is funded by an Open Science Grant from ANR.\n\nThe FAANG data portal is supported by the H2020 awards to AquaFAANG\n(grant no. 817923), GENE-SWitCH (grant no. 817998) and BovReg (grant no. 815668)\nand the EMBL.\n\n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'About FAANGFunctionnal Annotation of the Animal Genome (FAANG)is an open consortia, notably gathering transcriptomic and epigenomic data in farmanimal species.FAANG data is available on the FAANG data portal:data.faang.org.Visualisations of FAANG dataThis web applications offers visualisations of FAANG data. Sample-sample correlation heatmapsallow the exploration of the various FAANG datasets. Epigenetic stacks allow thevisual inspection of epigenetic profiles (ChIP-seq, ATAC-seq) at peaks, to visualyinvestigate the strenghts of the signals, or at gene promoters, to investigatethe associations between epigenetic mark and gene expression levels.Correlation matricesEpigenetic profilesProcessed data and QCSource codeThe web application source code is available on a public GitLab instance:forgemia.inra.fr/laura.morel/vizfada-app.FAANG data processing was done using Nextflow pipeline:github.com/lauramble/rnaseq-vizfada,and github.com/lauramble/chipseq_vizfada.FundingVizFaDa is funded by an Open Science Grant from ANR.The FAANG data portal is supported by the H2020 awards to AquaFAANG(grant no. 817923), GENE-SWitCH (grant no. 817998) and BovReg (grant no. 815668)and the EMBL.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'VizFaDa'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VizFaDa';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBetterNamesPipe\n\nBetterNamesPipe\n\nAppModule -->\n\nBetterNamesPipe->AppModule\n\n\n\n\n\nCanvasComponent\n\nCanvasComponent\n\nAppModule -->\n\nCanvasComponent->AppModule\n\n\n\n\n\nCarouselComponent\n\nCarouselComponent\n\nAppModule -->\n\nCarouselComponent->AppModule\n\n\n\n\n\nControllerComponent\n\nControllerComponent\n\nAppModule -->\n\nControllerComponent->AppModule\n\n\n\n\n\nEpistackComponent\n\nEpistackComponent\n\nAppModule -->\n\nEpistackComponent->AppModule\n\n\n\n\n\nExperimentComponent\n\nExperimentComponent\n\nAppModule -->\n\nExperimentComponent->AppModule\n\n\n\n\n\nExperimentsListComponent\n\nExperimentsListComponent\n\nAppModule -->\n\nExperimentsListComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nGetPipe\n\nGetPipe\n\nAppModule -->\n\nGetPipe->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nAppModule -->\n\nHeatmapComponent->AppModule\n\n\n\n\n\nHighlightComponent\n\nHighlightComponent\n\nAppModule -->\n\nHighlightComponent->AppModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nAppModule -->\n\nLegendComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMetadataTableComponent\n\nMetadataTableComponent\n\nAppModule -->\n\nMetadataTableComponent->AppModule\n\n\n\n\n\nPlotlyComponent\n\nPlotlyComponent\n\nAppModule -->\n\nPlotlyComponent->AppModule\n\n\n\n\n\nSafeHTMLPipe\n\nSafeHTMLPipe\n\nAppModule -->\n\nSafeHTMLPipe->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nAppModule -->\n\nViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIconsModule\n\nIconsModule\n\nAppModule -->\n\nIconsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BetterNamesPipe\n                        \n                        \n                            CanvasComponent\n                        \n                        \n                            CarouselComponent\n                        \n                        \n                            ControllerComponent\n                        \n                        \n                            EpistackComponent\n                        \n                        \n                            ExperimentComponent\n                        \n                        \n                            ExperimentsListComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            GetPipe\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            HighlightComponent\n                        \n                        \n                            LegendComponent\n                        \n                        \n                            MainComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            MetadataTableComponent\n                        \n                        \n                            PlotlyComponent\n                        \n                        \n                            SafeHTMLPipe\n                        \n                        \n                            SafePipe\n                        \n                        \n                            ViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconsModule } from './icons/icons.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { RouterModule } from '@angular/router';\nimport { ObserversModule } from \"@angular/cdk/observers\";\n\nimport * as PlotlyJS from 'plotly.js-dist/plotly.js';\nimport { PlotlyModule } from 'angular-plotly.js';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { NgxFilesizeModule } from 'ngx-filesize';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { AppComponent } from './app.component';\nimport { ControllerComponent } from './main/controller/controller.component';\nimport { HeatmapComponent } from './main/view/heatmap/heatmap.component';\nimport { FilterComponent } from './main/controller/filter/filter.component';\nimport { HighlightComponent } from './main/controller/highlight/highlight.component';\nimport { LegendComponent } from './main/view/heatmap/legend/legend.component';\nimport { ViewComponent } from './main/view/view.component';\nimport { MainComponent } from './main/main.component';\nimport { CanvasComponent } from './main/view/heatmap/canvas/canvas.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HeaderComponent } from './header/header.component';\nimport { AboutComponent } from './about/about.component';\n\nimport { PlotlyComponent } from './main/view/heatmap/plotly/plotly.component';\nimport { SafeHTMLPipe } from './main/safe-html.pipe';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { CustomReuseStrategy } from './reuse-strategy'\n\nimport { ExperimentComponent } from './experiments/experiment/experiment.component';\nimport { ExperimentsListComponent } from './experiments/experiments-list/experiments-list.component';\nimport { MetadataTableComponent } from './main/metadata-table/metadata-table.component';\nimport { SafePipe } from './safe.pipe';\nimport { BetterNamesPipe } from './better-names.pipe';\nimport { GetPipe } from './get.pipe';\nimport { CarouselComponent } from './epistack/carousel/carousel.component';\nimport { EpistackComponent } from './epistack/epistack.component';\nimport { MenuComponent } from './epistack/menu/menu.component';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\n@NgModule({\n  declarations: [\n    AboutComponent,\n    AppComponent,\n    BetterNamesPipe,\n    CanvasComponent,\n    ControllerComponent,\n    ExperimentComponent,\n    ExperimentsListComponent,\n    FilterComponent,\n    HeaderComponent,\n    HeatmapComponent,\n    HighlightComponent,\n    LegendComponent,\n    MainComponent,\n    MetadataTableComponent,\n    PlotlyComponent,\n    SafeHTMLPipe,\n    SafePipe,\n    ViewComponent,\n    GetPipe,\n    CarouselComponent,\n    EpistackComponent,\n    MenuComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    ColorPickerModule,\n    DragDropModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    IconsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule,\n    NgxDatatableModule,\n    NgxFilesizeModule,\n    NgxSpinnerModule,\n    ObserversModule,\n    PlotlyModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: MainComponent },\n      { path: 'about', component: AboutComponent },\n      { path: 'experiment/list', component: ExperimentsListComponent },\n      { path: 'experiment/:id', component: ExperimentComponent },\n      { path: 'epistack', component: EpistackComponent }\n    ]),\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {\n  constructor() {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  { path: '', component: MainComponent },\n  { path: 'about', component: AboutComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Article.html":{"url":"interfaces/Article.html","title":"interface - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextUrl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jounal\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jounal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jounal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BetterNamesPipe.html":{"url":"pipes/BetterNamesPipe.html","title":"pipe - BetterNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BetterNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/better-names.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        betterNames\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/better-names.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'betterNames'\n})\nexport class BetterNamesPipe implements PipeTransform {\n\n  transform(value: string): string {\n    switch (value) {\n      case 'Bos_taurus': return \"cow\";\n      case 'Capra_hircus': return \"goat\";\n      case 'Equus_caballus': return \"horse\";\n      case 'Gallus_gallus': return \"chicken\";\n      case 'Ovis_aries': return 'sheep';\n      case 'Sus_scrofa': return \"pig\";\n      default: return value;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CanvasComponent.html":{"url":"components/CanvasComponent.html","title":"component - CanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/view/heatmap/canvas/canvas.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-canvas\n            \n\n            \n                styleUrls\n                ./canvas.component.css\n            \n\n\n\n            \n                templateUrl\n                ./canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw_img\n                            \n                            \n                                get_pixel_color\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setImg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(heatmapInfoService: HeatmapInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heatmapInfoService\n                                                  \n                                                        \n                                                                        HeatmapInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draw_img\n                        \n                    \n                \n            \n            \n                \ndraw_img()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_pixel_color\n                        \n                    \n                \n            \n            \n                \nget_pixel_color(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setImg\n                        \n                    \n                \n            \n            \n                \nsetImg(src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasRenderingContext2D\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLImageElement\n\n                    \n                \n                \n                    \n                        Default value : new Image()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ViewChild, Input, Output, ElementRef } from '@angular/core';\nimport { fromEvent, ReplaySubject } from 'rxjs';\n\nimport { HeatmapInfoService } from '../../../heatmap-info.service';\n\n@Component({\n  selector: 'app-canvas',\n  templateUrl: './canvas.component.html',\n  styleUrls: ['./canvas.component.css']\n})\nexport class CanvasComponent implements OnInit {\n  private img: HTMLImageElement = new Image();\n  public hide: boolean;\n  @ViewChild('canvas', {static: false}) canvas: ElementRef;\n\n  public context: CanvasRenderingContext2D;\n\n  constructor(private heatmapInfoService: HeatmapInfoService,) { }\n\n  ngOnInit(): void {\n    console.log(\"Canvas Init\");\n    this.hide = true;\n    this.img.addEventListener(\"load\", () => {\n      this.draw_img()\n    })\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  get_pixel_color(e): void {\n    let x = e.pageX - this.canvas.nativeElement.offsetLeft;\n    let y = e.pageY - this.canvas.nativeElement.offsetTop;\n\n    let imgdata = this.context.getImageData(x, y, 1, 1);\n    let pixel = imgdata.data;\n\n    this.heatmapInfoService.pixel_color(`rgb(${pixel[0]}, ${pixel[1]}, ${pixel[2]})`);\n  }\n\n  setImg(src: string): void {\n    console.log(\"Loading image for canvas\");\n    this.img = new Image();\n    this.img.addEventListener(\"load\", () => {\n      console.log(\"Image loaded for canvas\");\n      this.draw_img()\n    })\n    //console.log(\"Source image for canvas: \", src);\n    this.img.src = src;\n  }\n\n  draw_img(): void {\n    //console.log(\"Canvas drawing image: \", this.img);\n    //console.log(this.img);\n    //console.log(this.img.src);\n    //console.log(this.img.height, this.img.width);\n    this.canvas.nativeElement.height = this.img.height;\n    this.canvas.nativeElement.width = this.img.width;\n    //this.canvas.style.height = this.img.height;\n    //this.canvas.style.width = this.img.width;\n    console.log(this.canvas);\n    this.context = this.canvas.nativeElement.getContext('2d');\n    this.context.drawImage(this.img, 0, 0);\n    this.hide = false;\n    let mousemove$ = fromEvent(this.canvas.nativeElement, 'mousemove');\n    mousemove$.subscribe((event) => {\n      this.get_pixel_color(event);\n    })\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./canvas.component.css\n                \n                #tooltip {\n  position: absolute;\n  pointer-events: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'CanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarouselComponent.html":{"url":"components/CarouselComponent.html","title":"component - CarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/epistack/carousel/carousel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carousel\n            \n\n            \n                styleUrls\n                ./carousel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                images\n                            \n                            \n                                    Public\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSlide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgbCarouselConfig, epistackService: EpistackService)\n                    \n                \n                        \n                            \n                                Defined in src/app/epistack/carousel/carousel.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgbCarouselConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        epistackService\n                                                  \n                                                        \n                                                                        EpistackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/epistack/carousel/carousel.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExp\n                        \n                    \n                \n            \n            \n                \ngetExp(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/carousel/carousel.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/carousel/carousel.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSlide\n                        \n                    \n                \n            \n            \n                \nonSlide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/carousel/carousel.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/carousel/carousel.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/carousel/carousel.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {NgbCarouselConfig, NgbSlideEvent} from '@ng-bootstrap/ng-bootstrap';\n\nimport { EpistackService } from '../epistack.service';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.css']\n})\nexport class CarouselComponent implements OnInit {\n  \n  public images: string[];\n  @Input() side: string;\n  public selected: string;\n\n  constructor(private config: NgbCarouselConfig,\n              private epistackService: EpistackService) {\n    config.showNavigationArrows = true;\n    config.showNavigationIndicators = true;\n    config.interval = 0;\n  }\n\n  ngOnInit(): void {\n    console.log(this.side, \"panel initiated\");\n    if (this.side == \"left\") {\n      this.epistackService.leftImages$.subscribe(data => {this.images = data; this.selected = this.getExp(this.images[0])});\n    } else if (this.side === \"right\") {\n      this.epistackService.rightImages$.subscribe(data => {this.images = data; this.selected = this.getExp(this.images[0])});\n    }\n  }\n\n  getExp(source: string): string {\n    return source.split(\"/\").pop().split(\".png\")[0];\n  }\n\n  onSlide(event): void {\n    this.selected = event.current;\n  }\n\n}\n\n    \n\n    \n        {{selected}}\n\n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./carousel.component.css\n                \n                img {\n  max-width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{selected}}                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastTextUrl.html":{"url":"classes/CastTextUrl.html","title":"class - CastTextUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastTextUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                texturl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cast\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(object: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/text-url.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        texturl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TextUrl | Ontology | Article | File | TextUnit | Organization | Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/text-url.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cast\n                        \n                    \n                \n            \n            \n                \n                    \n                    cast(object: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/text-url.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TextUrl | Ontology | Article | File | TextUnit | Organization | Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/text-url.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TextUrl | Ontology | Article | File | TextUnit | Organization | Object\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControllerComponent.html":{"url":"components/ControllerComponent.html","title":"component - ControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/controller/controller.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-controller\n            \n\n            \n                styleUrls\n                ./controller.component.css\n            \n\n\n\n            \n                templateUrl\n                ./controller.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                experimentIsSet\n                            \n                            \n                                    Public\n                                EXPERIMENTS\n                            \n                            \n                                    Public\n                                fields\n                            \n                            \n                                    Public\n                                FIELDS\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                legend\n                            \n                            \n                                objectKeys\n                            \n                            \n                                    Public\n                                plotlyChecked\n                            \n                            \n                                    Public\n                                SPECIES\n                            \n                            \n                                    Public\n                                speciesIsSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilter\n                            \n                            \n                                addHighlight\n                            \n                            \n                                changeAnnotation\n                            \n                            \n                                changeExperiment\n                            \n                            \n                                changePlotlyBool\n                            \n                            \n                                changeSize\n                            \n                            \n                                changeSpecies\n                            \n                            \n                                delFromArray\n                            \n                            \n                                getMetadata\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formFilters\n                                \n                                \n                                    formHighlights\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, dataService: DataService, spinner: NgxSpinnerService, heatmapInfoService: HeatmapInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/controller/controller.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        heatmapInfoService\n                                                  \n                                                        \n                                                                        HeatmapInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFilter\n                        \n                    \n                \n            \n            \n                \naddFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHighlight\n                        \n                    \n                \n            \n            \n                \naddHighlight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAnnotation\n                        \n                    \n                \n            \n            \n                \nchangeAnnotation(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeExperiment\n                        \n                    \n                \n            \n            \n                \nchangeExperiment(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePlotlyBool\n                        \n                    \n                \n            \n            \n                \nchangePlotlyBool(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSize\n                        \n                    \n                \n            \n            \n                \nchangeSize(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSpecies\n                        \n                    \n                \n            \n            \n                \nchangeSpecies(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delFromArray\n                        \n                    \n                \n            \n            \n                \ndelFromArray(name: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/controller.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        experimentIsSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        EXPERIMENTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FIELDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fields\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LegendComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LegendComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plotlyChecked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        SPECIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        speciesIsSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/controller/controller.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formFilters\n                    \n                \n\n                \n                    \n                        getformFilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/controller/controller.component.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formHighlights\n                    \n                \n\n                \n                    \n                        getformHighlights()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/controller/controller.component.ts:90\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ViewChild, OnInit, Input} from '@angular/core';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl } from '@angular/forms';\n\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\nimport { LegendComponent } from '../view/heatmap/legend/legend.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { DataService } from '../data.service';\nimport { HeatmapInfoService } from '../heatmap-info.service';\n\nimport { Fields } from '../../utils/metadata';\n\n@Component({\n  selector: 'app-controller',\n  templateUrl: './controller.component.html',\n  styleUrls: ['./controller.component.css']\n})\nexport class ControllerComponent implements OnInit {\n\n  @ViewChild(LegendComponent) legend: LegendComponent;\n\n  public FIELDS: Fields;\n  public SPECIES: string[] = [];\n  public EXPERIMENTS: string[] = [];\n  \n\n  public fields: string[];\n  public plotlyChecked: boolean = false;\n  public speciesIsSet: boolean = false;\n  public experimentIsSet: boolean = false;\n\n  public formGroup: FormGroup;\n  \n  objectKeys = Object.keys;\n\n  constructor(private builder: FormBuilder,\n              private dataService: DataService,\n              private spinner: NgxSpinnerService,\n              private heatmapInfoService: HeatmapInfoService,) { }\n\n  ngOnInit(): void {\n    let newForm = this.builder.group({\n      species: [\"\", [Validators.required]],\n      experiment: [\"\", [Validators.required]],\n      filters: this.builder.array([]),\n      highlights: this.builder.array([]),\n      annotated: \"\",\n      options: this.builder.group({})\n    });\n    console.log(newForm);\n    this.formGroup = newForm;\n    this.dataService.get_list('species').subscribe(species => {this.SPECIES=species})\n\n  }\n\n  addFilter():void {\n    console.log(\"Adding filter\")\n    const arrayControl = this.formGroup.controls['filters'];\n    let newGroup = this.builder.group({\n      field: ['', [Validators.required]],\n      values: [[], [Validators.required]]\n    });\n    arrayControl.push(newGroup);\n    this.getMetadata()\n  }\n\n  addHighlight(): void {\n    console.log(\"Adding highlight\")\n    const arrayControl = this.formGroup.controls['highlights'];\n    let newGroup = this.builder.group({\n      field: ['', [Validators.required]],\n      values: [[], [Validators.required]],\n      color: [\"0082ff\", [Validators.required]]\n    });\n    arrayControl.push(newGroup);\n    this.getMetadata()\n  }\n\n  getMetadata(): void {\n    console.log(this.formGroup.value);\n    this.dataService.get_meta('fields', this.formGroup.value)\n                    .subscribe(meta => {this.FIELDS = meta; console.log(meta)});\n  }\n  \n  \n  //getSize(): bool {}\n\n  get formFilters() {return this.formGroup.get('filters')}\n\n  get formHighlights() {return this.formGroup.get('highlights')}\n\n  delFromArray(name: string, index: number): void {\n    console.log(\"Removing filter\")\n    const arrayControl = this.formGroup.controls[name];\n    arrayControl.removeAt(index);\n    this.getMetadata()\n  }\n\n  changeExperiment(e) {\n    console.log(\"Changing experiment\")\n    this.formGroup.controls['experiment'].setValue(e.target.value);\n    if (e.target.value != \"\") {\n      this.getMetadata()\n      this.experimentIsSet = true;\n    } else {\n      this.experimentIsSet = false;\n    }\n    console.log(\"Experiment is set: \", this.experimentIsSet)\n  }\n\n  changeSpecies(e) {\n    console.log(\"Changing species\")\n    this.formGroup.controls['species'].setValue(e.target.value);\n    if (e.target.value != \"\") {\n      this.dataService.get_list('experiments', this.formGroup.controls['species'].value).subscribe(experiment => {this.EXPERIMENTS=experiment});\n      this.speciesIsSet = true;\n    } else {\n      this.speciesIsSet = false;\n    }\n    console.log(\"Species is set: \", this.speciesIsSet)\n  }\n\n  changeSize(e) {\n    console.log(\"Changing size\")\n    const s = e.target.value;\n    let optionsControl = this.formGroup.controls['options'];\n    try {\n      optionsControl.controls['figsize'].setValue(`(${s}, ${s})`);\n    } catch (error) {\n      optionsControl.addControl('figsize', new FormControl(`(${s}, ${s})`));\n    }\n    this.formGroup.controls['options'] = optionsControl;\n  }\n\n  changeAnnotation(e) {\n    console.log(\"Changing annotated field to: \", e.target.value);\n    this.formGroup.controls['annotated'].setValue(e.target.value);\n  }\n  \n\n  changePlotlyBool(e) {\n    console.log(\"Changing plotly bool:\");\n    console.log(e.target.checked);\n    this.heatmapInfoService.set_plotlyBool(e.target.checked);\n    this.plotlyChecked = e.target.checked;\n  }\n\n  onSubmit(): void {\n    console.log(\"Submitting data\");\n    console.log(this.formGroup.value);\n    this.dataService.submit_data(this.formGroup.value);\n    this.heatmapInfoService.img_loaded(false);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        Species\n        \n          \n        \n      \n    \n      \n        \n        \n          -- choose species --\n          {{sp | betterNames}}\n        \n        \n          -- choose experiment --\n          {{exp}}\n        \n        \n        \n          \n          Use Plotly\n        \n      \n    \n\n    \n      \n        \n          Filters\n          \n            \n          \n        \n      \n      \n        \n          \n            \n            \n              \n            \n          \n        \n      \n        \n          \n            \n             \n               \n             \n          \n          \n             Add Filter\n          \n          \n                   Add Highlight\n          \n        \n      \n    \n\n    \n      \n        \n          Annotation\n          \n            \n          \n        \n      \n      \n        Annotate : \n          \n            -- choose field --\n            {{f.value[\"name\"]}} ({{f.value['count']}})\n          \n          \n      \n    \n\n    \n      \n        \n          Graph options\n          \n            \n          \n        \n      \n      \n        Size : \n          \n            -- choose size --\n            {{sz}}\n          \n          \n      \n    \n\n  \n  Submit\n\n\n\n    \n\n    \n                \n                    ./controller.component.css\n                \n                .fhl {\n  border-radius: 5px;\n  border: solid;\n  border-width: thin;\n  border-color: #dcedf5;\n  padding: 5px;\n  overflow: visible;\n  margin-bottom: 5px\n}\n\nbutton.disabled {\n  pointer-events: none;\n}\n\n.btn-add-fhl {\n  margin-left: 5px;\n}\n\n.trash-icon {\n}\n\n.funnel-icon {\n  margin-left: -2px;\n}\n\n.btn-delete {\n  padding-left: 2px;\n  padding-right: 2px;\n  margin-left: 5px;\n}\n\ncontrol-container {\n  height: 100vh;\n  overflow-y: auto;\n}\n\ndiv.disabledPanel {\n  background-color: #e9ecef;\n  color: #696b6d;\n}\n\nform {\n  margin: 5px;\n  height: 100%;\n}\n\n::ng-deep .card-header {\n  background-color: #dcedf5;\n  color: #577c95;\n}\n\n::ng-deep #ngb-panel-2-header.card-header.disabledPanel{\n  background-color: #e9ecef;\n  color: #696b6d;\n}\n\n::ng-deep .card[disabled=\"true\"] > ::ng-deep .card-header {\n  background-color: #e9ecef;\n  color: #717a80;\n}\n\n::ng-deep .card-body {\n}\n\n::ng-deep .accordion>.card {\n  overflow: visible;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Species                                                                    -- choose species --          {{sp | betterNames}}                          -- choose experiment --          {{exp}}                                            Use Plotly                                              Filters                                                                                                                                                                                                                                                        Add Filter                                       Add Highlight                                                        Annotation                                                            Annotate :                       -- choose field --            {{f.value[\"name\"]}} ({{f.value[\\'count\\']}})                                                          Graph options                                                            Size :                       -- choose size --            {{sz}}                                  Submit'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomReuseStrategy.html":{"url":"classes/CustomReuseStrategy.html","title":"class - CustomReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reuse-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                storedRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                compareObjects\n                            \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        storedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/reuse-strategy.ts:27\n                        \n                    \n\n            \n                \n                    Object which will store RouteStorageObjects indexed by keys\nThe keys will all be a path (as in route.routeConfig.path)\nThis allows us to see if we've got a route stored for the requested path\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        compareObjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    compareObjects(base: any, compare: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:123\n                \n            \n\n\n            \n                \n                    This nasty bugger finds out whether the objects are traditionally equal to each other, like you might assume someone else would have put this function in vanilla JS already\nOne thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\nAnother important note is that the method only tells you if compare has all equal parameters to base, not the other way around\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    base\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The base object which you would like to compare another object to\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to compare to base\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean indicating whether or not the objects have all the same properties and those properties are ==\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retrieve\n                        \n                    \n                \n            \n            \n                \nretrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:94\n                \n            \n\n\n            \n                \n                    Finds the locally stored instance of the requested route, if it exists, and returns it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New route the user has requested\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DetachedRouteHandle\n\n                    \n                    \n                        DetachedRouteHandle object which can be used to render the component\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldAttach\n                        \n                    \n                \n            \n            \n                \nshouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:64\n                \n            \n\n\n            \n                \n                    Determines whether or not there is a stored route and, if there is, whether or not it should be rendered in place of requested route\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route the user requested\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean indicating whether or not to render the stored route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDetach\n                        \n                    \n                \n            \n            \n                \nshouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:37\n                \n            \n\n\n            \n                \n                    Decides when the route should be stored\nIf the route should be stored, I believe the boolean is indicating to a controller whether or not to fire this.store\nWhen it is called though does not particularly matter, just know that this determines whether or not we store the route\nAn idea of what to do here: check the route.routeConfig.path to see if it is a path you would like to store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is, at least as I understand it, the route that the user is currently on, and we would like to know if we want to store it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean indicating that we want to (true) or do not want to (false) store that route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldReuseRoute\n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:110\n                \n            \n\n\n            \n                \n                    Determines whether or not the current route should be reused\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route the user is going to, as triggered by the router\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route the user is currently on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean basically indicating true if the user intends to leave the current route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reuse-strategy.ts:48\n                \n            \n\n\n            \n                \n                    Constructs object of type RouteStorageObject to store, and then stores it for later attachment\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is stored for later comparison to requested routes, see this.shouldAttach\n\n                                    \n                                \n                                \n                                    handle\n                                    \n                                                DetachedRouteHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Later to be retrieved by this.retrieve, and offered up to whatever controller is using this class\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, RouteReuseStrategy, DetachedRouteHandle } from '@angular/router';\n\n /** Interface for object which can store both:\n  * An ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\n  * A DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n  */\n interface RouteStorageObject {\n     snapshot: ActivatedRouteSnapshot;\n     handle: DetachedRouteHandle;\n }\n\n export class CustomReuseStrategy implements RouteReuseStrategy {\n\n     /**\n      * Object which will store RouteStorageObjects indexed by keys\n      * The keys will all be a path (as in route.routeConfig.path)\n      * This allows us to see if we've got a route stored for the requested path\n      */\n     storedRoutes: { [key: string]: RouteStorageObject } = {};\n\n     /**\n      * Decides when the route should be stored\n      * If the route should be stored, I believe the boolean is indicating to a controller whether or not to fire this.store\n      * _When_ it is called though does not particularly matter, just know that this determines whether or not we store the route\n      * An idea of what to do here: check the route.routeConfig.path to see if it is a path you would like to store\n      * @param route This is, at least as I understand it, the route that the user is currently on, and we would like to know if we want to store it\n      * @returns boolean indicating that we want to (true) or do not want to (false) store that route\n      */\n     shouldDetach(route: ActivatedRouteSnapshot): boolean {\n         let detach: boolean = true;\n         console.log(\"detaching\", route, \"return: \", detach);\n         return detach;\n     }\n\n     /**\n      * Constructs object of type `RouteStorageObject` to store, and then stores it for later attachment\n      * @param route This is stored for later comparison to requested routes, see `this.shouldAttach`\n      * @param handle Later to be retrieved by this.retrieve, and offered up to whatever controller is using this class\n      */\n     store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n         let storedRoute: RouteStorageObject = {\n             snapshot: route,\n             handle: handle\n         };\n\n         console.log( \"store:\", storedRoute, \"into: \", this.storedRoutes );\n         // routes are stored by path - the key is the path name, and the handle is stored under it so that you can only ever have one object stored for a single path\n         this.storedRoutes[route.routeConfig.path] = storedRoute;\n     }\n\n     /**\n      * Determines whether or not there is a stored route and, if there is, whether or not it should be rendered in place of requested route\n      * @param route The route the user requested\n      * @returns boolean indicating whether or not to render the stored route\n      */\n     shouldAttach(route: ActivatedRouteSnapshot): boolean {\n\n         // this will be true if the route has been stored before\n         let canAttach: boolean = !!route.routeConfig && !!this.storedRoutes[route.routeConfig.path];\n\n         // this decides whether the route already stored should be rendered in place of the requested route, and is the return value\n         // at this point we already know that the paths match because the storedResults key is the route.routeConfig.path\n         // so, if the route.params and route.queryParams also match, then we should reuse the component\n         if (canAttach) {\n             let willAttach: boolean = true;\n             console.log(\"param comparison:\");\n             console.log(this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params));\n             console.log(\"query param comparison\");\n             console.log(this.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams));\n\n             let paramsMatch: boolean = this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params);\n             let queryParamsMatch: boolean = this.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams);\n\n             console.log(\"deciding to attach...\", route, \"does it match?\", this.storedRoutes[route.routeConfig.path].snapshot, \"return: \", paramsMatch && queryParamsMatch);\n             return paramsMatch && queryParamsMatch;\n         } else {\n             return false;\n         }\n     }\n\n     /**\n      * Finds the locally stored instance of the requested route, if it exists, and returns it\n      * @param route New route the user has requested\n      * @returns DetachedRouteHandle object which can be used to render the component\n      */\n     retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n\n         // return null if the path does not have a routerConfig OR if there is no stored route for that routerConfig\n         if (!route.routeConfig || !this.storedRoutes[route.routeConfig.path]) return null;\n         console.log(\"retrieving\", \"return: \", this.storedRoutes[route.routeConfig.path]);\n\n         /** returns handle when the route.routeConfig.path is already stored */\n         return this.storedRoutes[route.routeConfig.path].handle;\n     }\n\n     /**\n      * Determines whether or not the current route should be reused\n      * @param future The route the user is going to, as triggered by the router\n      * @param curr The route the user is currently on\n      * @returns boolean basically indicating true if the user intends to leave the current route\n      */\n     shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n         console.log(\"deciding to reuse\", \"future\", future.routeConfig, \"current\", curr.routeConfig, \"return: \", future.routeConfig === curr.routeConfig);\n         return future.routeConfig === curr.routeConfig;\n     }\n\n     /**\n      * This nasty bugger finds out whether the objects are _traditionally_ equal to each other, like you might assume someone else would have put this function in vanilla JS already\n      * One thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\n      * Another important note is that the method only tells you if `compare` has all equal parameters to `base`, not the other way around\n      * @param base The base object which you would like to compare another object to\n      * @param compare The object to compare to base\n      * @returns boolean indicating whether or not the objects have all the same properties and those properties are ==\n      */\n     private compareObjects(base: any, compare: any): boolean {\n\n         // loop through all properties in base object\n         for (let baseProperty in base) {\n\n             // determine if comparrison object has that property, if not: return false\n             if (compare.hasOwnProperty(baseProperty)) {\n                 switch(typeof base[baseProperty]) {\n                     // if one is object and other is not: return false\n                     // if they are both objects, recursively call this comparison function\n                     case 'object':\n                         if ( typeof compare[baseProperty] !== 'object' || !this.compareObjects(base[baseProperty], compare[baseProperty]) ) { return false; } break;\n                     // if one is function and other is not: return false\n                     // if both are functions, compare function.toString() results\n                     case 'function':\n                         if ( typeof compare[baseProperty] !== 'function' || base[baseProperty].toString() !== compare[baseProperty].toString() ) { return false; } break;\n                     // otherwise, see if they are equal using coercive comparison\n                     default:\n                         if ( base[baseProperty] != compare[baseProperty] ) { return false; }\n                 }\n             } else {\n                 return false;\n             }\n         }\n\n         // returns true only after false HAS NOT BEEN returned through all loops\n         return true;\n     }\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataJSON.html":{"url":"interfaces/DataJSON.html","title":"interface - DataJSON","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataJSON\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            download\n                                        \n                                \n                                \n                                        \n                                            mtime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        download\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        download:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mtime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mtime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/main/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseURL\n                            \n                            \n                                    Public\n                                submittedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build_url\n                            \n                            \n                                filter_highlight\n                            \n                            \n                                get_annotated_plotly\n                            \n                            \n                                get_blob\n                            \n                            \n                                get_epistack_meta\n                            \n                            \n                                get_experiments\n                            \n                            \n                                get_fields\n                            \n                            \n                                get_json\n                            \n                            \n                                get_legend\n                            \n                            \n                                get_list\n                            \n                            \n                                get_meta\n                            \n                            \n                                get_metadata\n                            \n                            \n                                get_plotly\n                            \n                            \n                                get_size\n                            \n                            \n                                get_species\n                            \n                            \n                                submit_data\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build_url\n                        \n                    \n                \n            \n            \n                \nbuild_url(uri: string, data?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter_highlight\n                        \n                    \n                \n            \n            \n                \nfilter_highlight(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_annotated_plotly\n                        \n                    \n                \n            \n            \n                \nget_annotated_plotly(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_blob\n                        \n                    \n                \n            \n            \n                \nget_blob(type: string, data?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_epistack_meta\n                        \n                    \n                \n            \n            \n                \nget_epistack_meta(data: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_experiments\n                        \n                    \n                \n            \n            \n                \nget_experiments(species: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    species\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_fields\n                        \n                    \n                \n            \n            \n                \nget_fields(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_json\n                        \n                    \n                \n            \n            \n                \nget_json(type: string, data?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_legend\n                        \n                    \n                \n            \n            \n                \nget_legend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_list\n                        \n                    \n                \n            \n            \n                \nget_list(type: string, data?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_meta\n                        \n                    \n                \n            \n            \n                \nget_meta(type: string, data?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_metadata\n                        \n                    \n                \n            \n            \n                \nget_metadata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_plotly\n                        \n                    \n                \n            \n            \n                \nget_plotly(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_size\n                        \n                    \n                \n            \n            \n                \nget_size(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_species\n                        \n                    \n                \n            \n            \n                \nget_species()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit_data\n                        \n                    \n                \n            \n            \n                \nsubmit_data(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/data.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.backendURL\n                    \n                \n                    \n                        \n                                Defined in src/app/main/data.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submittedData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/main/data.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, ReplaySubject, BehaviorSubject} from 'rxjs';\n\nimport { CookieService } from \"ngx-cookie-service\";\n\nimport { Fields } from \"../utils/metadata\";\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private baseURL = environment.backendURL;\n  public submittedData = new Subject;\n\n  constructor(private http: HttpClient,\n              private cookieService: CookieService) {\n  }\n  \n  build_url(uri: string, data?: Object): string {\n    let url = `${this.baseURL}/${uri}`;\n    if (typeof data !== \"undefined\") {\n      url = url + `/?q=${JSON.stringify(data)}`;\n    }\n    return url;\n  }\n  \n  get_meta(type: string, data?: Object): Observable {\n    let url: string = \"\";\n    switch (type) {\n      case 'epistack':\n        url = this.build_url('epistack/filter', data);\n        break;\n      case 'fields':\n        url = this.build_url('metadata/fields', data);\n        break;\n      case 'metadata':\n        url = this.build_url('metadata/all', data);\n        break;\n      case 'table':\n        url = this.build_url('metadata/table', data);\n        break;\n      default:\n        throw new Error(\"Invalid parameter: type must be 'epistack', not \" + type);\n        break;\n    }\n    console.log(\"Fetching metadata for \", type, \" at \", url);\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n  \n  get_list(type: string, data?: Object): Observable {\n    let url: string = \"\";\n    switch (type) {\n      case 'epistack':\n        url = this.build_url('epistack/imgs', data);\n        break;\n      case 'species':\n        url = this.build_url('data/list/species');\n        break;\n      case 'experiments':\n        url = this.build_url(`data/list/species/${data as string}`);\n        break;\n      default:\n        throw new Error(\"Invalid parameter: type must be 'epistack' or 'species', not \" + type);\n        break;\n    }\n    console.log(\"Fetching list for \", type, \" at \", url);\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n  \n  get_json(type: string, data?:Object): Observable {\n    let url: string = \"\";\n    switch(type) {\n      case 'plotly':\n        url = this.build_url('heatmap/plotly', data);\n        break;\n      case 'legend':\n        url = this.build_url('heatmap/legend');\n        break;\n      default:\n        throw new Error(\"Invalid parameter: type must be 'plotly', not \" + type);\n        break;\n    }\n    console.log(\"Fetching json for \", type, \" at \", url);\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n  \n  get_blob(type: string, data?:Object): Observable {\n    let url: string = \"\";\n    switch(type) {\n      case 'heatmap':\n        url = this.build_url('heatmap/img', data);\n        break;\n      default:\n        throw new Error(\"Invalid parameter: type must be 'heatmap', not \" + type);\n    }\n    console.log(\"Fetching json for \", type, \" at \", url);\n    return this.http.get(`${url}`, {responseType: 'blob', reportProgress: true, withCredentials: true});\n  }\n\n  get_legend(): Observable {\n    let url = `${this.baseURL}/api/legend`;\n    console.log(\"Fetching legend at \", url);\n    return this.http.get(url, {responseType: 'json', withCredentials: true})\n  }\n\n  submit_data(data: Object): void {\n    this.submittedData.next(data);\n  }\n\n  filter_highlight(data: Object): Observable {\n//    const sp = data['species'].replace(\" \", \"_\");\n    let url: string = `${this.baseURL}/api/img/`;\n    console.log(data);\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching image at \", url);\n//    return url;\n    return this.http.get(`${url}`, {responseType: 'blob', reportProgress: true, withCredentials: true});\n  }\n  \n  get_plotly(data: Object): Observable {\n//    const sp = data['species'].replace(\" \", \"_\");\n    let url: string = `${this.baseURL}/api/json/`;\n    console.log(data);\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching plotly at \", url);\n//    return url;\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n  \n  get_annotated_plotly(data: Object): Observable {\n//    const sp = data['species'].replace(\" \", \"_\");\n    let url: string = `${this.baseURL}/api/annotated_plotly/`;\n    console.log(data);\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching annotated plotly at \", url);\n//    return url;\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n\n  get_fields(data: Object): Observable {\n    let url = `${this.baseURL}/api/fields/`;\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching fields at \", url);\n    return this.http.get(url, {responseType: 'json'})\n  }\n\n  get_experiments(species: string): Observable {\n    let url = `${this.baseURL}/api/${species}/experiments`;\n    console.log(`Fetching available experiments for ${species}`);\n    return this.http.get(url, {responseType: 'json'})\n  }\n\n  get_species(): Observable {\n    let url = `${this.baseURL}/api/species`;\n    console.log(`Fetching available species`);\n    return this.http.get(url, {responseType: 'json'})\n  }\n  \n  get_size(data: Object): Observable {\n    let url = `${this.baseURL}/api/size`;\n    console.log(`Fetching size`);\n    url = url + `?q=${JSON.stringify(data)}`;\n    return this.http.get(url, {responseType: 'text'})\n  }\n  \n  get_metadata(data: Object): Observable {\n    let url = `${this.baseURL}/api/metadata`;\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(`Fetching metadata at`, url);\n    return this.http.get(url, {responseType: 'json'})\n  }\n  \n  get_epistack_meta(data: object): Observable {\n    let url = `${this.baseURL}/api/epistack`;\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching epistack metadata at \", url);\n    return this.http.get(url, {responseType: 'json'})\n  }\n  \n  /*\n  get(uri: string, response: string, data?:Object): Observable;\n  get(uri: string, response: string, data?:Object): Observable;\n  \n  get(uri: string, response: string, data?: Object): Observable {\n    let url = `${this.baseURL}/${uri}`;\n    if (typeof data !== \"undefined\") {\n      url = url + `?q=${JSON.stringify(data)}`;\n    }\n    console.log(\"Fetching data at \", url);\n    switch (response) {\n      case 'blob':\n        return this.http.get(`${url}`, {responseType: 'blob', reportProgress: true, withCredentials: true});\n        break;\n      default:\n        return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n        break;\n    }\n  }\n  \n  get_epistack(type: string, data: Object): Observable;\n  get_epistack(type: string, data: Object): Observable;\n  \n  get_epistack_meta(data: object): Observable {\n    let url = `${this.baseURL}/api/epistack`;\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching epistack metadata at \", url);\n    return this.http.get(url, {responseType: 'json'})\n  }\n  \n  get_epistack_img(data: object): Observable {\n    let url = `${this.baseURL}/api/epistack_imgs`;\n    url = url + `?q=${JSON.stringify(data)}`;\n    console.log(\"Fetching epistack image at \", url);\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EpistackComponent.html":{"url":"components/EpistackComponent.html","title":"component - EpistackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EpistackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/epistack/epistack.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-epistack\n            \n\n            \n                styleUrls\n                ./epistack.component.css\n            \n\n\n\n            \n                templateUrl\n                ./epistack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/epistack/epistack.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/epistack.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {NgbCarouselConfig} from '@ng-bootstrap/ng-bootstrap';\n\nimport { MenuComponent } from './menu/menu.component';\nimport { CarouselComponent } from './carousel/carousel.component';\n\n@Component({\n  selector: 'app-epistack',\n  templateUrl: './epistack.component.html',\n  styleUrls: ['./epistack.component.css']\n})\nexport class EpistackComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./epistack.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'EpistackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EpistackService.html":{"url":"injectables/EpistackService.html","title":"injectable - EpistackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EpistackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/epistack/epistack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                leftImages$\n                            \n                            \n                                    Public\n                                rightImages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/epistack/epistack.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateImages\n                        \n                    \n                \n            \n            \n                \nupdateImages(side: string, imgs: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/epistack.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    side\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    imgs\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/epistack.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leftImages$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/epistack.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rightImages$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/epistack.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpistackService {\n  \n  public formGroup: FormGroup;\n  public leftImages$ = new Subject();\n  public rightImages$ = new Subject();\n\n  constructor() { }\n  \n  updateImages(side:string, imgs: string[]): void {\n    console.log(side, \"panel updating\");\n    if (side === \"left\") {\n      this.leftImages$.next(imgs);\n      console.log(\"Left images updated : \", imgs.length)\n    } else if (side === \"right\") {\n      this.rightImages$.next(imgs);\n      console.log(\"Right images updated : \", imgs.length)\n    }\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExperimentComponent.html":{"url":"components/ExperimentComponent.html","title":"component - ExperimentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExperimentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/experiments/experiment/experiment.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-experiment\n            \n\n            \n                styleUrls\n                ./experiment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./experiment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                file_list\n                            \n                            \n                                    Public\n                                folders\n                            \n                            \n                                    Public\n                                htmls\n                            \n                            \n                                objectKeys\n                            \n                            \n                                    Public\n                                selectedFile\n                            \n                            \n                                    Public\n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFolders\n                            \n                            \n                                isFolder\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                offset\n                            \n                            \n                                selectFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(experimentService: ExperimentService, route: ActivatedRoute, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/experiments/experiment/experiment.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        experimentService\n                                                  \n                                                        \n                                                                        ExperimentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/experiments/experiment/experiment.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFolders\n                        \n                    \n                \n            \n            \n                \ngetFolders(tree: Folder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment/experiment.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n                                    \n                                                Folder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Object[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFolder\n                        \n                    \n                \n            \n            \n                \nisFolder(file: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment/experiment.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Folder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment/experiment.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n            \n                \noffset(depth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment/experiment.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    depth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFile\n                        \n                    \n                \n            \n            \n                \nselectFile(file: DataJSON)\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment/experiment.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                DataJSON\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        file_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataJSON[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        folders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Object[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        htmls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataJSON\n\n                    \n                \n                \n                    \n                        Default value : {url: \"\", name: \"\", mtime:\"\", download: \"\", parent: \"\", size: 0, type:\"\"}\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (DataJSON | Folder)[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment/experiment.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport {ExperimentService} from '../experiment.service';\nimport { DataJSON, Folder } from '../../utils/text-url';\n\n@Component({\n  selector: 'app-experiment',\n  templateUrl: './experiment.component.html',\n  styleUrls: ['./experiment.component.css']\n})\nexport class ExperimentComponent implements OnInit {\n    \n  @Input() id: string;\n  public file_list: DataJSON[];\n  public htmls: string[];\n  public selectedFile: DataJSON = {url: \"\", name: \"\", mtime:\"\", download: \"\", parent: \"\", size: 0, type:\"\"};\n  public tree: (DataJSON | Folder)[];\n  public folders: Object[];\n  \n  objectKeys = Object.keys;\n  \n  constructor(private experimentService: ExperimentService,\n              private route: ActivatedRoute,\n              private location: Location) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.experimentService.get_experiment(this.id).subscribe(data => {\n      this.tree = data;\n      this.folders = this.getFolders(data[this.id]);\n      console.log(\"Folders:\", this.folders);\n    });\n  }\n  \n  isFolder(file: any): file is Folder {\n    return typeof(file.name) === \"undefined\";\n  }\n  \n  getFolders(tree: Folder): Object[] {\n    let folders = [];\n    for (let [name, files] of Object.entries(tree)) {\n      folders.push({\"name\": name, \"expanded\": false});\n      if (this.isFolder(files)) {\n        console.log(\"Files: \", files);\n        folders.concat(this.getFolders(files));\n      }\n    }\n    return folders;\n  }\n  \n  selectFile(file: DataJSON): void {\n    this.selectedFile = file;\n  }\n  \n  offset(depth: number): string {\n    return depth*10 + 'px';\n  }\n\n}\n\n    \n\n    \n        Experiment {{id}}\n\nFiles\n\n  \n    \n    \n        \n    \n    \n  \n  \n\n\n\n    \n    \n       {{folder.name}}\n    \n    \n      \n        \n        \n      \n    \n\n\n\n  \n    {{file.name}}\n    {{file.size | filesize}}\n    {{file.mtime | date: 'short'}}\n    \n  \n\n\n    \n\n    \n                \n                    ./experiment.component.css\n                \n                iframe {\n  min-width: 500px;\n  min-height: 500px;\n  margin-left: 10px;\n  margin-right: 10px;\n}\n\nbi.download-icon {\n  color: white;\n}\n\na {\n  color: inherit;\n}\n\ntd.td-file-name {\n  padding-left: 10px;\n}\n\n.non-selected-file {\n  cursor: pointer;\n}\n\n.selected-file {\n  font-style: italic;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Experiment {{id}}Files                                             {{folder.name}}                                              {{file.name}}    {{file.size | filesize}}    {{file.mtime | date: \\'short\\'}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExperimentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/experiments/experiment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backendURL\n                            \n                            \n                                    Private\n                                dataURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_experiment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/experiments/experiment.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get_experiment\n                        \n                    \n                \n            \n            \n                \nget_experiment(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiment.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backendURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.backendURL\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataURL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.dataURL\n                    \n                \n                    \n                        \n                                Defined in src/app/experiments/experiment.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { DataJSON, Folder } from '../utils/text-url';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExperimentService {\n  \n  private backendURL = environment.backendURL;\n  private dataURL = environment.dataURL;\n\n  constructor(private http: HttpClient) { }\n  \n  get_experiment(id): Observable {\n    let url = `${this.backendURL}/experiment/${id}`;\n    console.log(\"Fetching experiment at \", url);\n    return this.http.get(`${url}`, {responseType: 'json', reportProgress: true, withCredentials: true});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExperimentsListComponent.html":{"url":"components/ExperimentsListComponent.html","title":"component - ExperimentsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExperimentsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/experiments/experiments-list/experiments-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-experiments-list\n            \n\n            \n                styleUrls\n                ./experiments-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./experiments-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/experiments/experiments-list/experiments-list.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/experiments/experiments-list/experiments-list.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-experiments-list',\n  templateUrl: './experiments-list.component.html',\n  styleUrls: ['./experiments-list.component.css']\n})\nexport class ExperimentsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        experiments-list works!\n\n    \n\n    \n                \n                    ./experiments-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'experiments-list works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExperimentsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldValues.html":{"url":"interfaces/FieldValues.html","title":"interface - FieldValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/metadata.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FieldValues {\n  values: Map;\n  count: number;\n  name: string;\n}\n\nexport interface Fields {\n  field: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fields.html":{"url":"interfaces/Fields.html","title":"interface - Fields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/metadata.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FieldValues {\n  values: Map;\n  count: number;\n  name: string;\n}\n\nexport interface Fields {\n  field: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextUrl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/controller/filter/filter.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                HLFilterComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldDropdownSettings\n                            \n                            \n                                    Public\n                                fieldMap\n                            \n                            \n                                    Public\n                                fields\n                            \n                            \n                                    Public\n                                formatted_fields\n                            \n                            \n                                    Public\n                                formatted_values\n                            \n                            \n                                    Public\n                                selectedValues\n                            \n                            \n                                    Public\n                                values\n                            \n                            \n                                    Public\n                                VALUES\n                            \n                            \n                                    Public\n                                valuesDropdownSettings\n                            \n                            \n                                    Public\n                                valuesMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                addSelected\n                            \n                            \n                                formatValues\n                            \n                            \n                                getValues\n                            \n                            \n                                onDeSelectValue\n                            \n                            \n                                onSelectAllValues\n                            \n                            \n                                onSelectValue\n                            \n                            \n                                removeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                FIELDS\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/controller/filter/filter.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        FIELDS\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                            \n                                \n                                    Inherited from         HLFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         HLFilterComponent:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         HLFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         HLFilterComponent:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSelected\n                        \n                    \n                \n            \n            \n                \naddSelected(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatValues\n                        \n                    \n                \n            \n            \n                \nformatValues()\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValues\n                        \n                    \n                \n            \n            \n                \ngetValues(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeSelectValue\n                        \n                    \n                \n            \n            \n                \nonDeSelectValue(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectAllValues\n                        \n                    \n                \n            \n            \n                \nonSelectAllValues(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectValue\n                        \n                    \n                \n            \n            \n                \nonSelectValue(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldValues\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\nimport { DataService } from '../../data.service';\nimport { Fields, FieldValues } from '../../../utils/metadata';\nimport { HLFilterComponent } from '../../../utils/hlfilter';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent extends HLFilterComponent implements OnInit {\n\n  constructor(dataService: DataService) {\n    super(dataService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit()\n  }\n/*\n    this.fieldDropdownSettings = {\n      singleSelection: true,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true,\n      enableCheckAll: false\n    };\n    this.valuesDropdownSettings = {\n      singleSelection: false,\n      allowSearchFilter: true,\n    };\n    \n    this.fields = Array.from(Object.keys(this.FIELDS));\n    this.formatted_fields = this.fields.map( (field) => {\n      return `${this.FIELDS[field]['name']} (${this.FIELDS[field]['count']})`;\n    });\n    for (let i in this.fields) {\n      this.fieldMap[this.formatted_fields[i]] = this.fields[i];\n    };\n    \n    console.log(this.fields);\n  }\n\n  getValues(e): void {\n    let selected = this.fieldMap[e];\n    console.log(\"Selected \", selected)\n    this.formGroup.controls['field'].setValue(selected);\n    this.VALUES = this.FIELDS[selected];\n    this.formatValues();\n  }\n  \n  formatValues(): void {\n    this.values = Object.keys(this.VALUES[\"values\"]);\n    console.log(\"Unformatted values: \", this.values);\n    this.formatted_values = this.values.map( (value) => {\n      return `${value} (${this.VALUES[\"values\"][value]})`;\n    });\n    \n    for (let i in this.values) {\n      this.valuesMap[this.formatted_values[i]] = this.values[i];\n    };\n    \n  console.log(\"Reformatted values: \", this.valuesMap);\n  }\n\n  addSelected(e): void {\n    let selected = this.valuesMap[e];\n    this.selectedValues.push(selected);\n  }\n\n  removeSelected(e): void {\n    let selected = this.valuesMap[e];\n    let i = this.selectedValues.indexOf(e);\n    console.log(e, \" found at \", i, \" in \", this.selectedValues)\n    this.selectedValues.splice(i, 1);\n    console.log(this.selectedValues)\n  }\n\n  onSelectValue(e): void {\n    let selected = this.addSelected(e);\n    console.log(\"Selected value \", e);\n    this.formGroup.controls['values'].setValue(this.selectedValues);\n    console.log(\"Currently selected \", this.formGroup.controls['values'])\n  }\n\n  onDeSelectValue(e): void {\n    let selected = this.removeSelected(e);\n    console.log(\"Deselected value \", e);\n    this.formGroup.controls['values'].setValue(this.selectedValues);\n    console.log(\"Currently selected \", this.formGroup.controls['values'])\n  }\n  \n  onSelectAllValues(e): void {\n    for (let value of e) {\n      this.onSelectValue(value);\n    }\n  }\n*/\n}\n\n    \n\n    \n        \n  \n    \n      Field : \n      \n    \n    \n      Values : \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                label {\n  margin: 0px 5px 0px 0px;\n  min-width: 55px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Field :                     Values :             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Folder.html":{"url":"interfaces/Folder.html","title":"interface - Folder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Folder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     (Folder | DataJSON)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (Folder | DataJSON)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GetPipe.html":{"url":"pipes/GetPipe.html","title":"pipe - GetPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GetPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/get.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        get\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(obj: Object | undefined | string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            Object | undefined | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Object | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'get'\n})\nexport class GetPipe implements PipeTransform {\n\n  transform(obj: Object | undefined | string, key: string): Object | string {\n    if (typeof(obj) === 'object' && obj !== null && key in obj) {\n      let typeobj = typeof(obj[key]);\n        if (typeobj === 'string') {\n          return obj[key];\n        } else {\n          return new Object(obj[key]);\n        }\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HLFilterComponent.html":{"url":"components/HLFilterComponent.html","title":"component - HLFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HLFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/hlfilter.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hlfilter\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldDropdownSettings\n                            \n                            \n                                    Public\n                                fieldMap\n                            \n                            \n                                    Public\n                                fields\n                            \n                            \n                                    Public\n                                formatted_fields\n                            \n                            \n                                    Public\n                                formatted_values\n                            \n                            \n                                    Public\n                                selectedValues\n                            \n                            \n                                    Public\n                                values\n                            \n                            \n                                    Public\n                                VALUES\n                            \n                            \n                                    Public\n                                valuesDropdownSettings\n                            \n                            \n                                    Public\n                                valuesMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSelected\n                            \n                            \n                                formatValues\n                            \n                            \n                                getValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeSelectValue\n                            \n                            \n                                onSelectAllValues\n                            \n                            \n                                onSelectValue\n                            \n                            \n                                removeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                FIELDS\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/hlfilter.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        FIELDS\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/hlfilter.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/hlfilter.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSelected\n                        \n                    \n                \n            \n            \n                \naddSelected(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatValues\n                        \n                    \n                \n            \n            \n                \nformatValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValues\n                        \n                    \n                \n            \n            \n                \ngetValues(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeSelectValue\n                        \n                    \n                \n            \n            \n                \nonDeSelectValue(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectAllValues\n                        \n                    \n                \n            \n            \n                \nonSelectAllValues(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectValue\n                        \n                    \n                \n            \n            \n                \nonSelectValue(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/hlfilter.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldValues\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/hlfilter.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\nimport { DataService } from '../main/data.service';\nimport { Fields, FieldValues } from './metadata';\n\n@Component({\n  selector: 'app-hlfilter',\n  template: '',\n})\nexport class HLFilterComponent implements OnInit {\n  @Input() formGroup: FormGroup;\n  @Input() FIELDS: Map;\n  \n  public fields: string[];\n  public formatted_fields: string[];\n  public fieldMap: Object = {};\n  \n  public VALUES: FieldValues;\n  \n  public values: string[];\n  public formatted_values: string[];\n  public valuesMap: Object = {};\n  \n  public selectedValues: string[] = [];\n\n  public fieldDropdownSettings: IDropdownSettings = {};\n  public valuesDropdownSettings: IDropdownSettings = {};\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.fieldDropdownSettings = {\n      singleSelection: true,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true,\n      enableCheckAll: false\n    };\n    this.valuesDropdownSettings = {\n      singleSelection: false,\n      allowSearchFilter: true,\n    };\n    this.fields = Array.from(Object.keys(this.FIELDS));\n    this.formatted_fields = this.fields.map( (field) => {\n      return `${this.FIELDS[field]['name']} (${this.FIELDS[field]['count']})`;\n    });\n    for (let i in this.fields) {\n      this.fieldMap[this.formatted_fields[i]] = this.fields[i];\n    };\n    \n    console.log(this.fields);\n  }\n\n  getValues(e): void {\n    let selected = this.fieldMap[e];\n    console.log(\"Selected \", selected)\n    this.formGroup.controls['field'].setValue(selected);\n    this.VALUES = this.FIELDS[selected];\n    this.formatValues();\n  }\n  \n  formatValues(): void {\n    this.values = Object.keys(this.VALUES[\"values\"]);\n    console.log(\"Unformatted values: \", this.values);\n    this.formatted_values = this.values.map( (value) => {\n      return `${value} (${this.VALUES[\"values\"][value]})`;\n    });\n    \n    for (let i in this.values) {\n      this.valuesMap[this.formatted_values[i]] = this.values[i];\n    };\n    \n    console.log(\"Reformatted values: \", this.valuesMap);\n  }\n\n  addSelected(e): void {\n    let selected = this.valuesMap[e];\n    this.selectedValues.push(selected);\n  }\n\n  removeSelected(e): void {\n    let selected = this.valuesMap[e];\n    let i = this.selectedValues.indexOf(e);\n    console.log(e, \" found at \", i, \" in \", this.selectedValues)\n    this.selectedValues.splice(i, 1);\n    console.log(this.selectedValues)\n  }\n\n  onSelectValue(e): void {\n    let selected = this.addSelected(e);\n    console.log(\"Selected value \", e);\n    this.formGroup.controls['values'].setValue(this.selectedValues);\n    console.log(\"Currently selected \", this.formGroup.controls['values'])\n  }\n\n  onDeSelectValue(e): void {\n    let selected = this.removeSelected(e);\n    console.log(\"Deselected value \", e);\n    this.formGroup.controls['values'].setValue(this.selectedValues);\n    console.log(\"Currently selected \", this.formGroup.controls['values'])\n  }\n  \n  onSelectAllValues(e): void {\n    for (let value of e) {\n      this.onSelectValue(value);\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'HLFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  VizFaDa\n  \n    \n      \n        Correlation Heatmap\n      \n      \n        Epigenetic Profiles\n      \n      \n        Help\n      \n    \n    v. alpha 1.1\n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                div.nav::after {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  VizFaDa                    Correlation Heatmap                    Epigenetic Profiles                    Help              v. alpha 1.1  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeatmapComponent.html":{"url":"components/HeatmapComponent.html","title":"component - HeatmapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeatmapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/view/heatmap/heatmap.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-heatmap\n            \n\n            \n                styleUrls\n                ./heatmap.component.css\n            \n\n\n\n            \n                templateUrl\n                ./heatmap.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                    Public\n                                formdata\n                            \n                            \n                                    Public\n                                img\n                            \n                            \n                                    Public\n                                imgLoading\n                            \n                            \n                                plotly\n                            \n                            \n                                    Public\n                                plotlyBool\n                            \n                            \n                                    Public\n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                imgFromBlob\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setImg\n                            \n                            \n                                setSrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, heatmapInfoService: HeatmapInfoService, sanitizer: DomSanitizer, spinner: NgxSpinnerService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        heatmapInfoService\n                                                  \n                                                        \n                                                                        HeatmapInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        imgFromBlob\n                        \n                    \n                \n            \n            \n                \nimgFromBlob(img: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/heatmap.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    img\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/heatmap.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setImg\n                        \n                    \n                \n            \n            \n                \nsetImg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/heatmap.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSrc\n                        \n                    \n                \n            \n            \n                \nsetSrc(src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/heatmap.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CanvasComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formdata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLImageElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imgLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plotly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlotlyComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(PlotlyComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plotlyBool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"no_heatmap\"\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/heatmap.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CookieService } from \"ngx-cookie-service\";\n\nimport { DataService } from '../../data.service';\nimport { HeatmapInfoService } from '../../heatmap-info.service';\nimport { LegendComponent} from './legend/legend.component';\nimport { CanvasComponent } from './canvas/canvas.component';\nimport { PlotlyComponent } from './plotly/plotly.component';\n\n@Component({\n  selector: 'app-heatmap',\n  templateUrl: './heatmap.component.html',\n  styleUrls: ['./heatmap.component.css']\n})\nexport class HeatmapComponent implements OnInit {\n\n  @ViewChild(CanvasComponent) canvas: CanvasComponent;\n  @ViewChild(PlotlyComponent) plotly: PlotlyComponent;\n\n  public formdata: Object;\n\n  public src: string = \"no_heatmap\";\n  public img: HTMLImageElement;\n  public imgLoading: boolean = false;\n  public plotlyBool: boolean = false;\n\n  constructor(private dataService: DataService,\n              private heatmapInfoService: HeatmapInfoService,\n              private sanitizer: DomSanitizer,\n              private spinner: NgxSpinnerService,\n              private cookieService: CookieService,\n            ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.heatmapInfoService.plotlyBool.subscribe(bool => {this.plotlyBool = bool;});\n    this.dataService.submittedData.subscribe(data => {\n      this.formdata = data;\n      if (this.plotlyBool) {\n        this.plotly.getPlotly(this.formdata);\n      } else {\n        this.setImg();\n      }\n    });\n  }\n\n  setImg(): void{\n    this.imgLoading = true;\n    this.dataService.get_blob('heatmap', this.formdata).subscribe(img => {\n      this.imgFromBlob(img);\n    }, error => {\n      this.imgLoading = false;\n      this.heatmapInfoService.img_loaded(false);\n      console.log(error);\n    });\n  }\n\n  setSrc(src: string): void{\n    this.src = src;\n    //let img = new Image();\n    //img.src = this.src;\n    //this.img = img;\n  }\n\n  imgFromBlob(img: Blob) {\n    console.log(\"Getting URL from Blob\");\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.setSrc(reader.result as string);\n      this.canvas.setImg(this.src);\n      this.imgLoading = false;\n      this.heatmapInfoService.img_loaded(true);\n      console.log(\"Heatmap src changed to: \", this.src);\n    }, false);\n\n    if (img) {\n      reader.readAsDataURL(img);\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n  \n     No heatmap \n  \n\n\n\n  \n     Loading... \n\n\n    \n\n    \n                \n                    ./heatmap.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       No heatmap          Loading... '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeatmapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeatmapInfoService.html":{"url":"injectables/HeatmapInfoService.html","title":"injectable - HeatmapInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HeatmapInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/main/heatmap-info.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imgLoaded\n                            \n                            \n                                    Public\n                                plotlyBool\n                            \n                            \n                                    Public\n                                pxcolor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                img_loaded\n                            \n                            \n                                pixel_color\n                            \n                            \n                                set_plotlyBool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/heatmap-info.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        img_loaded\n                        \n                    \n                \n            \n            \n                \nimg_loaded(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/heatmap-info.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixel_color\n                        \n                    \n                \n            \n            \n                \npixel_color(color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/heatmap-info.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set_plotlyBool\n                        \n                    \n                \n            \n            \n                \nset_plotlyBool(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/heatmap-info.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imgLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/heatmap-info.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plotlyBool\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/heatmap-info.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pxcolor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject\n                    \n                \n                    \n                        \n                                Defined in src/app/main/heatmap-info.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeatmapInfoService {\n\n  public pxcolor = new ReplaySubject;\n  public imgLoaded = new BehaviorSubject(false);\n  public plotlyBool = new BehaviorSubject(false);\n\n  constructor() { }\n\n  pixel_color(color: string): void {\n    this.pxcolor.next(color);\n  }\n\n  img_loaded(bool: boolean): void {\n    this.imgLoaded.next(bool);\n  }\n  \n  set_plotlyBool(bool: boolean): void {\n    this.plotlyBool.next(bool);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HighlightComponent.html":{"url":"components/HighlightComponent.html","title":"component - HighlightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HighlightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/controller/highlight/highlight.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                HLFilterComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-highlight\n            \n\n            \n                styleUrls\n                ./highlight.component.css\n            \n\n\n\n            \n                templateUrl\n                ./highlight.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldDropdownSettings\n                            \n                            \n                                    Public\n                                fieldMap\n                            \n                            \n                                    Public\n                                fields\n                            \n                            \n                                    Public\n                                formatted_fields\n                            \n                            \n                                    Public\n                                formatted_values\n                            \n                            \n                                    Public\n                                selectedValues\n                            \n                            \n                                    Public\n                                values\n                            \n                            \n                                    Public\n                                VALUES\n                            \n                            \n                                    Public\n                                valuesDropdownSettings\n                            \n                            \n                                    Public\n                                valuesMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeColor\n                            \n                            \n                                addSelected\n                            \n                            \n                                formatValues\n                            \n                            \n                                getValues\n                            \n                            \n                                onDeSelectValue\n                            \n                            \n                                onSelectAllValues\n                            \n                            \n                                onSelectValue\n                            \n                            \n                                removeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                FIELDS\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/controller/highlight/highlight.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/controller/highlight/highlight.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FIELDS\n                    \n                \n                \n                    \n                        Type :         Map\n\n                    \n                \n                            \n                                \n                                    Inherited from         HLFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         HLFilterComponent:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         HLFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         HLFilterComponent:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeColor\n                        \n                    \n                \n            \n            \n                \nonChangeColor(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/controller/highlight/highlight.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSelected\n                        \n                    \n                \n            \n            \n                \naddSelected(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatValues\n                        \n                    \n                \n            \n            \n                \nformatValues()\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValues\n                        \n                    \n                \n            \n            \n                \ngetValues(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeSelectValue\n                        \n                    \n                \n            \n            \n                \nonDeSelectValue(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectAllValues\n                        \n                    \n                \n            \n            \n                \nonSelectAllValues(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectValue\n                        \n                    \n                \n            \n            \n                \nonSelectValue(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected(e)\n                \n            \n\n\n            \n                \n                    Inherited from         HLFilterComponent\n\n                \n            \n            \n                \n                        Defined in         HLFilterComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldValues\n\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        valuesMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         HLFilterComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         HLFilterComponent:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\nimport { DataService } from '../../data.service';\nimport { HLFilterComponent } from '../../../utils/hlfilter';\n\n@Component({\n  selector: 'app-highlight',\n  templateUrl: './highlight.component.html',\n  styleUrls: ['./highlight.component.css']\n})\nexport class HighlightComponent extends HLFilterComponent implements OnInit {\n  @Input() color: string;\n\n  constructor(dataService: DataService) {\n    super(dataService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  onChangeColor(e): void {\n    this.color = e;\n    this.formGroup.controls['color'].setValue(e.substr(1));\n    console.log(\"Changing color to \", e);\n  }\n  \n  /*\n  getValues(e): void {\n    let selected = e;\n    console.log(\"Selected \", selected)\n    this.formGroup.controls['field'].setValue(selected);\n    this.dataService.get_fields(this.formGroup.value)\n                    .subscribe(meta => {this.METADATA = meta});\n    this.values = this.METADATA[selected][\"values\"]\n  }\n\n  addSelected(e): void {\n    this.selectedValues.push(e);\n  }\n\n  removeSelected(e): void {\n    let i=this.selectedValues.indexOf(e);\n    console.log(e, \" found at \", i, \" in \", this.selectedValues)\n    this.selectedValues.splice(i, 1);\n    console.log(this.selectedValues)\n  }\n\n  onSelectValue(e): void {\n    let selected = this.addSelected(e);\n    console.log(\"Selected value \", e);\n    this.formGroup.controls['values'].setValue(this.selectedValues);\n    console.log(\"Currently selected \", this.formGroup.controls['values'])\n  }\n  */\n\n}\n\n    \n\n    \n        \n    \n      Color : \n      \n    \n    \n      Field : \n      \n    \n    \n      Values : \n      \n    \n  \n\n    \n\n    \n                \n                    ./highlight.component.css\n                \n                label {\n  margin: 0px;\n  min-width: 70px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Color :                     Field :                     Values :             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'HighlightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HostDirective.html":{"url":"directives/HostDirective.html","title":"directive - HostDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/main/view/heatmap/canvas/canvas.directives.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [canvasDir]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                data-toggle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/heatmap/canvas/canvas.directives.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        data-toggle\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.directives.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.directives.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('title')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/canvas/canvas.directives.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Component, HostListener, Directive, HostBinding, Input} from '@angular/core';\n\n@Directive({selector: '[canvasDir]'})\nexport class HostDirective {\n  @HostBinding('title') title = 'placeholder';\n  @HostBinding('data-toggle')\n\n  constructor(private elementRef: ElementRef){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconsModule.html":{"url":"modules/IconsModule.html","title":"module - IconsModule","body":"\n                   \n\n\n\n\n    Modules\n    IconsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/icons/icons.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BootstrapIconsModule } from 'ng-bootstrap-icons';\nimport { Download, ChevronUp, ChevronDown, TrashFill, Funnel, FunnelFill, PaletteFill, Trash, Folder2, Folder2Open } from 'ng-bootstrap-icons/icons';\n\nconst icons = {\n  ChevronDown,\n  ChevronUp,\n  Download,\n  Funnel,\n  FunnelFill,\n  PaletteFill,\n  Trash,\n  TrashFill,\n  Folder2,\n  Folder2Open\n};\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BootstrapIconsModule.pick(icons)\n  ], exports: [\n    BootstrapIconsModule\n  ]\n})\nexport class IconsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/view/heatmap/legend/legend.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                ./legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                legend\n                            \n                            \n                                    Public\n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_legend\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                rgb_conversion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, heatmapInfoService: HeatmapInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/heatmap/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        heatmapInfoService\n                                                  \n                                                        \n                                                                        HeatmapInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get_legend\n                        \n                    \n                \n            \n            \n                \nget_legend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/legend/legend.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/legend/legend.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rgb_conversion\n                        \n                    \n                \n            \n            \n                \nrgb_conversion(rgb: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/legend/legend.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rgb\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/legend/legend.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        legend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/legend/legend.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/legend/legend.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { HeatmapInfoService } from '../../../heatmap-info.service';\nimport { DataService } from '../../../data.service';\n\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  public data: Object;\n  public legend: Object;\n  public selectedColor: string;\n\n  constructor(private dataService: DataService,\n              private heatmapInfoService: HeatmapInfoService,) { }\n\n  ngOnInit(): void {\n    this.heatmapInfoService.pxcolor.subscribe(color => {\n      this.selectedColor = color as string;\n    })\n    this.heatmapInfoService.imgLoaded.subscribe(value => {\n      if (value === true) {\n        this.get_legend();\n      }\n    })\n    /*\n    this.dataService.submittedData.subscribe(data => {\n      this.data = data;\n      this.get_legend(this.data)\n    });\n    */\n  }\n\n  get_legend(): void {\n    this.dataService.get_json('legend').subscribe(legend => {\n      console.log(legend);\n      this.legend = legend;\n      for (let leg in legend) {\n        this.legend[leg] = this.rgb_conversion(legend[leg]);\n      }\n      console.log(this.legend);\n    })\n  }\n\n  rgb_conversion(rgb: Array): string {\n    const r=(rgb[0] * 255).toFixed();\n    const g=(rgb[1] * 255).toFixed();\n    const b=(rgb[2] * 255).toFixed();\n    return(`rgb(${r}, ${g}, ${b})`);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    {{ d.key }}\n  \n\n\nNo legend\n\n\n    \n\n    \n                \n                    ./legend.component.css\n                \n                .selected {\n  background-color: #DCEDF5;\n  font-weight: bold;\n}\n\n.color {\n  width: 20px;\n  height: 20px;\n}\n\n.item {\n  margin: 2px;\n  align-items: baseline;\n}\n\n.legend {\n  margin-left: 5px;\n}\n\n.legend-container {\n  padding: 5px;\n  border: solid;\n  border-radius: 5px;\n  border-color: #DCEDF5;\n  border-width: thin;\n  overflow: auto;\n}\n\np {\n  margin-bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ d.key }}  No legend'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n            \n                styleUrls\n                ./main.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controller\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/main.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ControllerComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ControllerComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/main.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ViewComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/main.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit } from '@angular/core';\n\nimport { ViewComponent } from \"./view/view.component\";\nimport { ControllerComponent } from \"./controller/controller.component\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  @ViewChild(ControllerComponent) controller: ControllerComponent;\n  @ViewChild(ViewComponent) view: ViewComponent;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./main.component.css\n                \n                div {\n  height: 100%;\n}\n\napp-controller {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/epistack/menu/menu.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                ./menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                DEFAULT_FIELDS\n                            \n                            \n                                    Public\n                                fieldDropdownSettings\n                            \n                            \n                                    Public\n                                fieldMap\n                            \n                            \n                                    Public\n                                FIELDS\n                            \n                            \n                                    Public\n                                fields$\n                            \n                            \n                                    Public\n                                formatted_fields\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                images$\n                            \n                            \n                                    Public\n                                SPECIES\n                            \n                            \n                                    Public\n                                speciesDropdownSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImgs\n                            \n                            \n                                getMetaObs\n                            \n                            \n                                getValues\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                patchValue\n                            \n                            \n                                    Public\n                                sortNull\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, dataService: DataService, epistackService: EpistackService)\n                    \n                \n                        \n                            \n                                Defined in src/app/epistack/menu/menu.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        epistackService\n                                                  \n                                                        \n                                                                        EpistackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/epistack/menu/menu.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getImgs\n                        \n                    \n                \n            \n            \n                \ngetImgs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetaObs\n                        \n                    \n                \n            \n            \n                \ngetMetaObs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValues\n                        \n                    \n                \n            \n            \n                \ngetValues(field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n            \n                \nisSelected(field, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchValue\n                        \n                    \n                \n            \n            \n                \npatchValue(field, e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sortNull\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortNull()\n                \n            \n\n\n            \n                \n                    Defined in src/app/epistack/menu/menu.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DEFAULT_FIELDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {\"anchor_type\": \"Anchor Type\",\n                                   \"cellType\": \"Cell Type\",\n                                   \"experiment\": \"Experiment\",\n                                   \"notes\": \"Notes\",\n                                   \"input_id\": \"Input DNA\",\n                                   \"bound_id\": \"Bound ID\"}\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FIELDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fields\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fields$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatted_fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        SPECIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        speciesDropdownSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IDropdownSettings\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/epistack/menu/menu.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\nimport { DataService } from '../../main/data.service';\nimport { EpistackService } from '../epistack.service';\nimport { Fields, FieldValues } from '../../utils/metadata';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  public SPECIES : string[];\n  public FIELDS : Fields;\n  public DEFAULT_FIELDS: Object = {\"anchor_type\": \"Anchor Type\",\n                                   \"cellType\": \"Cell Type\",\n                                   \"experiment\": \"Experiment\",\n                                   \"notes\": \"Notes\",\n                                   \"input_id\": \"Input DNA\",\n                                   \"bound_id\": \"Bound ID\"};\n  \n  public formGroup: FormGroup;\n  public sortNull() {};\n  public fieldMap: Object = {};\n  public formatted_fields: string[] = [];\n  @Input() side: string;\n  \n  public fields$: Observable;\n  public images$: Observable;\n\n  public speciesDropdownSettings: IDropdownSettings = {};\n  public fieldDropdownSettings: IDropdownSettings = {};\n\n  constructor(private builder: FormBuilder,\n              private dataService: DataService,\n              private epistackService: EpistackService) { }\n\n  ngOnInit(): void {\n    let newForm = this.builder.group({\n      species: [\"\", [Validators.required]],\n      anchor_type: \"\",\n      cellType:\"\",\n      input_id:\"\",\n      bound_id:\"\",\n      experiment:\"\",\n      notes:\"\"\n    });\n    this.formGroup = newForm;\n    this.fieldDropdownSettings = {\n      singleSelection: true,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true,\n      enableCheckAll: false\n    };\n    this.dataService.get_list('species').subscribe(species => {this.SPECIES=species});\n\n    this.formGroup.valueChanges.subscribe(data => {\n        this.epistackService.formGroup = this.formGroup;\n        this.fields$ = this.getMetaObs();\n        this.getImgs();\n        this.fields$.subscribe(fields => this.FIELDS = fields);\n        console.log(\"Form value updated\")\n        console.log(this.formGroup);\n      })\n  }\n  \n  patchValue(field, e): void {\n    this.formGroup.controls[field].patchValue(e.target.value);\n    //this.updateFieldDisplay();\n  }\n  \n  getMetaObs(): Observable {\n    console.log(\"getmetaObs called\");\n    return this.dataService.get_meta('epistack', this.formGroup.value);\n  }\n  \n  getValues(field: string): Observable {\n    this.fields$.pipe(map(fields => fields[field])).subscribe((values) => {\n      console.log(\"getvalues called: \", values)\n    });\n    return this.fields$.pipe(map(fields => fields[field]));\n  }\n  \n  getImgs(): void {\n    this.dataService.get_list('epistack', this.formGroup.value).subscribe( data => {\n      this.epistackService.updateImages(this.side, data);\n    });\n  }\n  \n  onSubmit(): void {\n    console.log(\"Submitting data\");\n    console.log(this.formGroup.value);\n    this.dataService.get_list('epistack', this.formGroup.value);\n  }\n  \n  isSelected(field, value): boolean {\n    return(this.formGroup.get(field).value===value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    1 - choose a species\n    \n      -- choose species--\n      {{sp | betterNames}}\n    \n  \n  \n    \n      2 - filter experiments\n      \n        {{field.value}} ({{FIELDS | get: field.key | get: 'count'}})\n      \n        {{f.key}} ({{f.value}})\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menu.component.css\n                \n                div.step1 {\n    border-radius: 10px;\n    background-color: aliceblue;\n    margin: 10px 5px auto 5px;\n    padding: 5px;\n}\n\ndiv.step2 {\n    border-radius: 10px;\n    background-color: aliceblue;\n    margin: 10px 5px auto 5px;\n    padding: 5px;\n}\n\np {\n    font-weight: bold;\n    margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      1 - choose a species          -- choose species--      {{sp | betterNames}}                  2 - filter experiments              {{field.value}} ({{FIELDS | get: field.key | get: \\'count\\'}})              {{f.key}} ({{f.value}})                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataTableComponent.html":{"url":"components/MetadataTableComponent.html","title":"component - MetadataTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/metadata-table/metadata-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metadata-table\n            \n\n            \n                styleUrls\n                ./metadata-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./metadata-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allColumns\n                            \n                            \n                                    Public\n                                allRows\n                            \n                            \n                                cellTemplate\n                            \n                            \n                                    Public\n                                cols\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                datacols\n                            \n                            \n                                    Private\n                                DEFAULT_COLS\n                            \n                            \n                                    Private\n                                DEFAULT_MINWIDTH\n                            \n                            \n                                headerTemplate\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                objectKeys\n                            \n                            \n                                    Public\n                                selectedCols\n                            \n                            \n                                    Public\n                                selectedExperiments\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adjustColumnMinWidth\n                            \n                            \n                                filterTextUrl\n                            \n                            \n                                get_metadata\n                            \n                            \n                                isChecked\n                            \n                            \n                                isString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        adjustColumnMinWidth\n                        \n                    \n                \n            \n            \n                \nadjustColumnMinWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterTextUrl\n                        \n                    \n                \n            \n            \n                \nfilterTextUrl(obj: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_metadata\n                        \n                    \n                \n            \n            \n                \nget_metadata(formData: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isString\n                        \n                    \n                \n            \n            \n                \nisString(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event, column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/metadata-table/metadata-table.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cellTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('cellTemplate', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Object[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        datacols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        DEFAULT_COLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Accession\", \"Target\", \"Cell type\", \"Breed\", \"Health Status\", \"Sex\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        DEFAULT_MINWIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('headerTemplate')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectKeys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedExperiments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Object[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DatatableComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(DatatableComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/metadata-table/metadata-table.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild, ElementRef } from '@angular/core';\n\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\nimport { DataService } from '../data.service';\n\ntype Column = {\n  'name': string;\n  'cellTemplate': TemplateRef;\n  'headerTemplate': TemplateRef;\n  'width': number;\n};\n\n@Component({\n  selector: 'app-metadata-table',\n  templateUrl: './metadata-table.component.html',\n  styleUrls: ['./metadata-table.component.css']\n})\nexport class MetadataTableComponent implements OnInit {\n  @ViewChild('cellTemplate', { static: true }) cellTemplate: TemplateRef;\n  @ViewChild('headerTemplate') headerTemplate: TemplateRef;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  \n  private DEFAULT_COLS: string[] = [\"Accession\", \"Target\", \"Cell type\", \"Breed\", \"Health Status\", \"Sex\"];\n  private DEFAULT_MINWIDTH: number = 20;\n  public selectedCols: string[];\n  public cols: any[];\n  public data: Object[];\n  public loading: boolean = true;\n  public selectedExperiments: Object[];\n  public datacols: Column[];\n  public allColumns: Column[];\n  public allRows = [];\n  \n  objectKeys = Object.keys;\n  isString(val): boolean { return typeof val === 'string'; };\n  filterTextUrl(obj: Object): Object {\n    let exclude = ['text', 'url'];\n    return Object.keys(obj)\n      .filter(key => !exclude.includes(key))\n      .reduce((cur, key) => {\n        cur[key] = obj[key];\n        return cur;\n    }, {});};\n\n  constructor(private dataService: DataService, private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    this.dataService.submittedData.subscribe(\n      (data) => {\n        console.log(\"Updating metadata table...\", data);\n        this.get_metadata(data);\n      },\n      (err) => console.error(err)\n    );\n  }\n  \n  get_metadata(formData: Object): void {\n    this.dataService.get_meta('table', formData).subscribe(\n      (data) => {\n        this.cols = data[\"columns\"];\n        this.data = data[\"data\"];\n        this.datacols = data[\"columns-datatable\"].map((obj: {\"name\": string}): Column => ({ \"name\": obj.name, \"cellTemplate\": this.cellTemplate, \"headerTemplate\": this.headerTemplate, \"width\": this.DEFAULT_MINWIDTH }));\n        this.allColumns = this.datacols;\n        this.datacols = this.datacols.filter((obj: Column) => this.DEFAULT_COLS.includes(obj.name));\n        this.datacols = this.datacols.sort((a: Column, b: Column) => {\n          const indexA: number = this.DEFAULT_COLS.indexOf(a.name);\n          const indexB: number = this.DEFAULT_COLS.indexOf(b.name);\n          if (indexA  indexB || indexA === -1)\n             return 1;\n          return 0;\n        });\n        console.log(this.datacols);\n        this.adjustColumnMinWidth();\n        this.allRows = [...this.data];\n        console.log(\"Metadata columns and data\", this.cols, this.data);\n      },\n      (err) => console.error(err),\n      () => this.loading = false\n    )\n  }\n\n  toggle(col) {\n    const isChecked = this.isChecked(col);\n\n    if (isChecked) {\n      this.datacols = this.datacols.filter(c => {\n        return c.name !== col.name;\n      });\n    } else {\n      this.datacols = [...this.datacols, col];\n    }\n\n    this.adjustColumnMinWidth();\n  }\n\n  isChecked(col) {\n    console.log(col.name, \"checked ? \", (this.datacols.find(c => {\n      return c.name === col.name;\n    }) !== undefined));\n    return (\n      this.datacols.find(c => {\n        return c.name === col.name;\n      }) !== undefined\n    );\n  }\n\n  adjustColumnMinWidth() {\n    console.log(\"Adjusting column widths\")\n    const element = this.elementRef.nativeElement as HTMLElement;\n    const rows = element.getElementsByTagName(\"datatable-body-row\");\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    Available Columns\n    \n      \n        \n        {{ col.name }}\n      \n    \n  \n\n\n \n  {{ column.name }}\n    \n\n\n\n  \n    \n    \n  \n\n\n\n   {{ item }}\n\n\n\n  {{ item.text }}\n  {{ key }}:  {{ item[key] }}\n\n\n\n  \n    \n      \n        {{col}}\n      \n    \n  \n  \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n-->\n    \n\n    \n                \n                    ./metadata-table.component.css\n                \n                label {\n    margin-left:5px;\n}\n\ndiv.selected-column {\n    max-height: 600px;\n}\n\ndiv.datatable-container.outer {\n    scroll-behavior: smooth;\n    overflow-y: auto;\n    overflow-x: auto;\n    max-height: 600px;\n    max-width: 700px;\n    min-width: 500px;\n}\n\ndiv.datatable-container.inner {\n    width:fit-content;\n}\n\ndiv.selected-column {\n    overflow-y: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Available Columns                          {{ col.name }}               {{ column.name }}                   {{ item }}  {{ item.text }}  {{ key }}:  {{ item[key] }}                    {{col}}                                                                        -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ontology.html":{"url":"interfaces/Ontology.html","title":"interface - Ontology","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ontology\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextUrl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ontologyTerms\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextUrl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlotlyComponent.html":{"url":"components/PlotlyComponent.html","title":"component - PlotlyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlotlyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/view/heatmap/plotly/plotly.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-plotly\n            \n\n            \n                styleUrls\n                ./plotly.component.css\n            \n\n\n\n            \n                templateUrl\n                ./plotly.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allData\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                formdata\n                            \n                            \n                                    Public\n                                layout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeData\n                            \n                            \n                                getLegend\n                            \n                            \n                                getPlotly\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, heatmapInfoService: HeatmapInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        heatmapInfoService\n                                                  \n                                                        \n                                                                        HeatmapInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeData\n                        \n                    \n                \n            \n            \n                \nchangeData(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLegend\n                        \n                    \n                \n            \n            \n                \ngetLegend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlotly\n                        \n                    \n                \n            \n            \n                \ngetPlotly(formdata: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formdata\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formdata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/heatmap/plotly/plotly.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../data.service';\nimport { HeatmapInfoService } from '../../../heatmap-info.service';\n\n\n@Component({\n  selector: 'app-plotly',\n  templateUrl: './plotly.component.html',\n  styleUrls: ['./plotly.component.css']\n})\nexport class PlotlyComponent implements OnInit {\n  public allData: any[];\n  public layout: Object;\n  public config: Object;\n  public formdata: Object;\n  \n  constructor(private dataService: DataService,\n              private heatmapInfoService: HeatmapInfoService ) { };\n  \n  ngOnInit(): void {\n    this.allData = [];\n    this.config = {};\n    this.layout = {};\n  };\n  \n  getPlotly(formdata: Object): void {\n    this.allData=[];\n    this.config = {responsive: true };\n    console.log(\"Annotated heatmap?\");\n    console.log(formdata[\"annotated\"]);\n    console.log(formdata[\"annotated\"] != \"\");\n    this.dataService.get_json('plotly', formdata).subscribe(data => {\n      console.log(\"Annotated plotly\");\n      console.log(data);\n      if (data[0] === \"\") {\n        this.allData.push(data[1]);\n        this.layout = { title: \"Heatmap\", autosize: true};\n      } else {\n        this.allData.push(data[0]);\n        this.allData.push(data[1]);\n        console.log(\"Plotly data\");\n        console.log(this.allData);\n        this.layout = {\n                        title: \"Heatmap\", autosize: true,\n                        grid: {rows:1,\n                               columns:2,\n                               subplots:[[\"xy\", \"x2y\"]]},\n                        xaxis: {domain: [0.0, 0.05]},\n                        xaxis2: {domain: [0.1, 1]},\n                        hoverlabel: {align: 'center'}\n                      }\n        this.heatmapInfoService.img_loaded(true);\n      }\n    });\n  };\n  \n  changeData(data: Object): void {\n    this.allData.push(data);\n  };\n  \n  getLegend(): void {\n    this.heatmapInfoService.img_loaded(true);\n  };\n\n};\n\n    \n\n    \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./plotly.component.css\n                \n                div.plotly {\n  min-width: 1000px;\n  min-height: 1000px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlotlyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestOptionsService.html":{"url":"injectables/RequestOptionsService.html","title":"injectable - RequestOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestOptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/main/request-options.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/request-options.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestOptionsService {\n\n  constructor(private cookieService: CookieService) { }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteStorageObject.html":{"url":"interfaces/RouteStorageObject.html","title":"interface - RouteStorageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteStorageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reuse-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for object which can store both:\nAn ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\nA DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            snapshot\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:         DetachedRouteHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DetachedRouteHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snapshot:         ActivatedRouteSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivatedRouteSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActivatedRouteSnapshot, RouteReuseStrategy, DetachedRouteHandle } from '@angular/router';\n\n /** Interface for object which can store both:\n  * An ActivatedRouteSnapshot, which is useful for determining whether or not you should attach a route (see this.shouldAttach)\n  * A DetachedRouteHandle, which is offered up by this.retrieve, in the case that you do want to attach the stored route\n  */\n interface RouteStorageObject {\n     snapshot: ActivatedRouteSnapshot;\n     handle: DetachedRouteHandle;\n }\n\n export class CustomReuseStrategy implements RouteReuseStrategy {\n\n     /**\n      * Object which will store RouteStorageObjects indexed by keys\n      * The keys will all be a path (as in route.routeConfig.path)\n      * This allows us to see if we've got a route stored for the requested path\n      */\n     storedRoutes: { [key: string]: RouteStorageObject } = {};\n\n     /**\n      * Decides when the route should be stored\n      * If the route should be stored, I believe the boolean is indicating to a controller whether or not to fire this.store\n      * _When_ it is called though does not particularly matter, just know that this determines whether or not we store the route\n      * An idea of what to do here: check the route.routeConfig.path to see if it is a path you would like to store\n      * @param route This is, at least as I understand it, the route that the user is currently on, and we would like to know if we want to store it\n      * @returns boolean indicating that we want to (true) or do not want to (false) store that route\n      */\n     shouldDetach(route: ActivatedRouteSnapshot): boolean {\n         let detach: boolean = true;\n         console.log(\"detaching\", route, \"return: \", detach);\n         return detach;\n     }\n\n     /**\n      * Constructs object of type `RouteStorageObject` to store, and then stores it for later attachment\n      * @param route This is stored for later comparison to requested routes, see `this.shouldAttach`\n      * @param handle Later to be retrieved by this.retrieve, and offered up to whatever controller is using this class\n      */\n     store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n         let storedRoute: RouteStorageObject = {\n             snapshot: route,\n             handle: handle\n         };\n\n         console.log( \"store:\", storedRoute, \"into: \", this.storedRoutes );\n         // routes are stored by path - the key is the path name, and the handle is stored under it so that you can only ever have one object stored for a single path\n         this.storedRoutes[route.routeConfig.path] = storedRoute;\n     }\n\n     /**\n      * Determines whether or not there is a stored route and, if there is, whether or not it should be rendered in place of requested route\n      * @param route The route the user requested\n      * @returns boolean indicating whether or not to render the stored route\n      */\n     shouldAttach(route: ActivatedRouteSnapshot): boolean {\n\n         // this will be true if the route has been stored before\n         let canAttach: boolean = !!route.routeConfig && !!this.storedRoutes[route.routeConfig.path];\n\n         // this decides whether the route already stored should be rendered in place of the requested route, and is the return value\n         // at this point we already know that the paths match because the storedResults key is the route.routeConfig.path\n         // so, if the route.params and route.queryParams also match, then we should reuse the component\n         if (canAttach) {\n             let willAttach: boolean = true;\n             console.log(\"param comparison:\");\n             console.log(this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params));\n             console.log(\"query param comparison\");\n             console.log(this.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams));\n\n             let paramsMatch: boolean = this.compareObjects(route.params, this.storedRoutes[route.routeConfig.path].snapshot.params);\n             let queryParamsMatch: boolean = this.compareObjects(route.queryParams, this.storedRoutes[route.routeConfig.path].snapshot.queryParams);\n\n             console.log(\"deciding to attach...\", route, \"does it match?\", this.storedRoutes[route.routeConfig.path].snapshot, \"return: \", paramsMatch && queryParamsMatch);\n             return paramsMatch && queryParamsMatch;\n         } else {\n             return false;\n         }\n     }\n\n     /**\n      * Finds the locally stored instance of the requested route, if it exists, and returns it\n      * @param route New route the user has requested\n      * @returns DetachedRouteHandle object which can be used to render the component\n      */\n     retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n\n         // return null if the path does not have a routerConfig OR if there is no stored route for that routerConfig\n         if (!route.routeConfig || !this.storedRoutes[route.routeConfig.path]) return null;\n         console.log(\"retrieving\", \"return: \", this.storedRoutes[route.routeConfig.path]);\n\n         /** returns handle when the route.routeConfig.path is already stored */\n         return this.storedRoutes[route.routeConfig.path].handle;\n     }\n\n     /**\n      * Determines whether or not the current route should be reused\n      * @param future The route the user is going to, as triggered by the router\n      * @param curr The route the user is currently on\n      * @returns boolean basically indicating true if the user intends to leave the current route\n      */\n     shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n         console.log(\"deciding to reuse\", \"future\", future.routeConfig, \"current\", curr.routeConfig, \"return: \", future.routeConfig === curr.routeConfig);\n         return future.routeConfig === curr.routeConfig;\n     }\n\n     /**\n      * This nasty bugger finds out whether the objects are _traditionally_ equal to each other, like you might assume someone else would have put this function in vanilla JS already\n      * One thing to note is that it uses coercive comparison (==) on properties which both objects have, not strict comparison (===)\n      * Another important note is that the method only tells you if `compare` has all equal parameters to `base`, not the other way around\n      * @param base The base object which you would like to compare another object to\n      * @param compare The object to compare to base\n      * @returns boolean indicating whether or not the objects have all the same properties and those properties are ==\n      */\n     private compareObjects(base: any, compare: any): boolean {\n\n         // loop through all properties in base object\n         for (let baseProperty in base) {\n\n             // determine if comparrison object has that property, if not: return false\n             if (compare.hasOwnProperty(baseProperty)) {\n                 switch(typeof base[baseProperty]) {\n                     // if one is object and other is not: return false\n                     // if they are both objects, recursively call this comparison function\n                     case 'object':\n                         if ( typeof compare[baseProperty] !== 'object' || !this.compareObjects(base[baseProperty], compare[baseProperty]) ) { return false; } break;\n                     // if one is function and other is not: return false\n                     // if both are functions, compare function.toString() results\n                     case 'function':\n                         if ( typeof compare[baseProperty] !== 'function' || base[baseProperty].toString() !== compare[baseProperty].toString() ) { return false; } break;\n                     // otherwise, see if they are equal using coercive comparison\n                     default:\n                         if ( base[baseProperty] != compare[baseProperty] ) { return false; }\n                 }\n             } else {\n                 return false;\n             }\n         }\n\n         // returns true only after false HAS NOT BEEN returned through all loops\n         return true;\n     }\n }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHTMLPipe.html":{"url":"pipes/SafeHTMLPipe.html","title":"pipe - SafeHTMLPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHTMLPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/safe-html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHTML\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/safe-html.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHTML'\n})\nexport class SafeHTMLPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value) {\n    console.log(value);\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/safe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/safe.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(protected sanitizer: DomSanitizer) {}\n \n     public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n        switch (type) {\n    \t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n    \t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n    \t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n    \t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n    \t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n    \t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n    \t\t}\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextUnit.html":{"url":"interfaces/TextUnit.html","title":"interface - TextUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextUrl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextUrl.html":{"url":"interfaces/TextUrl.html","title":"interface - TextUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/text-url.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextUrl {\n  text: string;\n  url: string\n}\n\nexport interface Ontology extends TextUrl {\n  ontologyTerms: string;\n}\n\nexport interface File extends TextUrl {\n  filename: string;\n}\n\nexport interface TextUnit extends TextUrl {\n  unit: string;\n}\n\nexport interface Article extends TextUrl {\n  title: string;\n  jounal: string;\n  year: number;\n}\n\nexport interface Organization extends TextUrl {\n  name: string;\n  role: string;\n}\n\nexport class CastTextUrl {\n  \n  private texturl: TextUrl | Ontology | Article | File | TextUnit | Organization | Object;\n  \n  constructor(object: Object) {\n    this.texturl = this.cast(object);\n  }\n  \n  public cast(object: Object): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    let keys = Object.keys(object);\n    if ('text' in keys && 'url' in keys) {\n      if ('ontologyTerms' in keys) {\n        return object as Ontology;\n      } else if ('filename' in keys) {\n        return object as File;\n      } else if ('role' in keys) {\n        return object as Organization;\n      } else if ('unit' in keys) {\n        return object as TextUnit;\n      } else if ('title' in keys) {\n        return object as Article;\n      } else {\n        return object as TextUrl;\n      }\n    } else {\n      return object;\n    }\n  }\n  \n  public get(): TextUrl | Ontology | Article | File | TextUnit | Organization | Object {\n    return this.texturl;\n  }\n  \n}\n\nexport interface DataJSON {\n  name: string;\n  type: string;\n  mtime: string;\n  size: number;\n  url: string;\n  parent: string;\n  download: string;\n}\n\nexport interface Folder {\n  name: string;\n  type: string;\n  expanded: boolean;\n  content: (Folder | DataJSON)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewComponent.html":{"url":"components/ViewComponent.html","title":"component - ViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/view/view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view\n            \n\n            \n                styleUrls\n                ./view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/view/view.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/view/view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Heatmap\"\n                    \n                \n                    \n                        \n                                Defined in src/app/main/view/view.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\nimport { HeatmapComponent } from \"./heatmap/heatmap.component\";\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  active = \"Heatmap\";\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Heatmap\n    \n      \n    \n  \n  \n    Table\n    \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./view.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Heatmap                      Table                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'ControllerComponent', 'selector': 'app-controller'},{'name': 'EpistackComponent', 'selector': 'app-epistack'},{'name': 'ExperimentComponent', 'selector': 'app-experiment'},{'name': 'ExperimentsListComponent', 'selector': 'app-experiments-list'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeatmapComponent', 'selector': 'app-heatmap'},{'name': 'HighlightComponent', 'selector': 'app-highlight'},{'name': 'HLFilterComponent', 'selector': 'app-hlfilter'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MetadataTableComponent', 'selector': 'app-metadata-table'},{'name': 'PlotlyComponent', 'selector': 'app-plotly'},{'name': 'ViewComponent', 'selector': 'app-view'}];\n    var DIRECTIVES = [{'name': 'HostDirective', 'selector': '[canvasDir]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/better-names.pipe.ts\n            \n            pipe\n            BetterNamesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/epistack/carousel/carousel.component.ts\n            \n            component\n            CarouselComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/epistack/epistack.component.ts\n            \n            component\n            EpistackComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/epistack/epistack.service.ts\n            \n            injectable\n            EpistackService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/epistack/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/experiments/experiment.service.ts\n            \n            injectable\n            ExperimentService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/experiments/experiment/experiment.component.ts\n            \n            component\n            ExperimentComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/experiments/experiments-list/experiments-list.component.ts\n            \n            component\n            ExperimentsListComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/get.pipe.ts\n            \n            pipe\n            GetPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/icons/icons.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/controller/controller.component.ts\n            \n            component\n            ControllerComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/main/controller/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/main/controller/highlight/highlight.component.ts\n            \n            component\n            HighlightComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/main/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/main/heatmap-info.service.ts\n            \n            injectable\n            HeatmapInfoService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main/metadata-table/metadata-table.component.ts\n            \n            component\n            MetadataTableComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/main/request-options.service.ts\n            \n            injectable\n            RequestOptionsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main/safe-html.pipe.ts\n            \n            pipe\n            SafeHTMLPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/view/heatmap/canvas/canvas.component.ts\n            \n            component\n            CanvasComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/main/view/heatmap/canvas/canvas.directives.ts\n            \n            directive\n            HostDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main/view/heatmap/heatmap.component.ts\n            \n            component\n            HeatmapComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/main/view/heatmap/legend/legend.component.ts\n            \n            component\n            LegendComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/main/view/heatmap/plotly/plotly.component.ts\n            \n            component\n            PlotlyComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main/view/view.component.ts\n            \n            component\n            ViewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/reuse-strategy.ts\n            \n            class\n            CustomReuseStrategy\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/reuse-strategy.ts\n            \n            interface\n            RouteStorageObject\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/safe.pipe.ts\n            \n            pipe\n            SafePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/hlfilter.ts\n            \n            component\n            HLFilterComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/utils/metadata.ts\n            \n            interface\n            Fields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/metadata.ts\n            \n            interface\n            FieldValues\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            class\n            CastTextUrl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            DataJSON\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            Folder\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            Ontology\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            Organization\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            TextUnit\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/text-url.ts\n            \n            interface\n            TextUrl\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/flex-layout : ~12.0.0-beta\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/localize : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @fortawesome/angular-fontawesome : ~0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.28\n        \n            @fortawesome/free-regular-svg-icons : ^5.13.0\n        \n            @fortawesome/free-solid-svg-icons : ^5.13.0\n        \n            @ng-bootstrap/ng-bootstrap : ~10.0.0\n        \n            @nguniversal/express-engine : ^12.1.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            angular-datatables : ^12.0.0\n        \n            angular-plotly.js : ^4.0.0\n        \n            angularjs-slider : ^7.0.0\n        \n            bootstrap : ^4.5.3\n        \n            datatables.net : ^1.10.20\n        \n            datatables.net-bs4 : ^1.10.20\n        \n            jquery : ^3.4.1\n        \n            ng : ^0.0.0\n        \n            ng-bootstrap-icons : ^1.3.0\n        \n            ng-multiselect-dropdown : ^0.2.10\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-cookie-service : ~12.0.0\n        \n            ngx-filesize : ^2.0.16\n        \n            ngx-spinner : ~12.0.0\n        \n            node : ^14.13.1\n        \n            plotly.js-dist : ^2.5.0\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^2.0.3\n        \n            zone.js : ~0.11.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVizFaDa\nThis project was generated with Angular CLI version 10.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBetterNamesPipe\n\nBetterNamesPipe\n\nAppModule -->\n\nBetterNamesPipe->AppModule\n\n\n\n\n\nCanvasComponent\n\nCanvasComponent\n\nAppModule -->\n\nCanvasComponent->AppModule\n\n\n\n\n\nCarouselComponent\n\nCarouselComponent\n\nAppModule -->\n\nCarouselComponent->AppModule\n\n\n\n\n\nControllerComponent\n\nControllerComponent\n\nAppModule -->\n\nControllerComponent->AppModule\n\n\n\n\n\nEpistackComponent\n\nEpistackComponent\n\nAppModule -->\n\nEpistackComponent->AppModule\n\n\n\n\n\nExperimentComponent\n\nExperimentComponent\n\nAppModule -->\n\nExperimentComponent->AppModule\n\n\n\n\n\nExperimentsListComponent\n\nExperimentsListComponent\n\nAppModule -->\n\nExperimentsListComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nGetPipe\n\nGetPipe\n\nAppModule -->\n\nGetPipe->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nAppModule -->\n\nHeatmapComponent->AppModule\n\n\n\n\n\nHighlightComponent\n\nHighlightComponent\n\nAppModule -->\n\nHighlightComponent->AppModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nAppModule -->\n\nLegendComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMetadataTableComponent\n\nMetadataTableComponent\n\nAppModule -->\n\nMetadataTableComponent->AppModule\n\n\n\n\n\nPlotlyComponent\n\nPlotlyComponent\n\nAppModule -->\n\nPlotlyComponent->AppModule\n\n\n\n\n\nSafeHTMLPipe\n\nSafeHTMLPipe\n\nAppModule -->\n\nSafeHTMLPipe->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nAppModule -->\n\nViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIconsModule\n\nIconsModule\n\nAppModule -->\n\nIconsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../metadata-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/main/metadata-table/metadata-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    Column\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            icons   (src/.../icons.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  backendURL: \"http://45.88.80.133/django\",\n  dataURL: \"http://45.88.80.133/data\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.dev.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  backendURL: \"http://127.0.0.1:8080\",\n  dataURL: \"http://127.0.0.1:90\"\n}\n                    \n                \n\n\n        \n    \n\n    src/app/icons/icons.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ChevronDown,\n  ChevronUp,\n  Download,\n  Funnel,\n  FunnelFill,\n  PaletteFill,\n  Trash,\n  TrashFill,\n  Folder2,\n  Folder2Open\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
